{"version":3,"sources":["reducers/AuthReducer.js","reducers/ExerciseReducer.js","reducers/AdminReducer.js","reducers/ClassManagementReducer.js","reducers/RootReducer.js","store/index.js","constants/Label.js","helpers/Translator.js","helpers/Utils.js","actions/ClassManagementActions.js","actions/ExerciseActions.js","actions/AdminActions.js","actions/AuthActions.js","view/components/SignedInLinks.jsx","view/components/SignedOutLinks.jsx","view/containers/NavbarContainers/Navbar.jsx","view/components/SidebarElementStudent.jsx","view/components/SidebarElementTeacher.jsx","view/components/SidebarElementAdministrator.jsx","view/components/SidebarElementDeveloper.jsx","view/components/Sidebar.jsx","view/containers/DashboardContainers/Dashboard.jsx","view/containers/DashboardContainers/TeacherDashboard.jsx","view/components/Footer.jsx","helpers/Validator.js","constants/Languages.js","constants/RegExpression.js","view/components/HelperMessage.jsx","view/containers/AuthContainers/SignUp.jsx","view/containers/AuthContainers/SignIn.jsx","view/components/Error.jsx","view/components/InputSentence.jsx","helpers/LanguageIterator.js","helpers/SolutionMapper.js","view/components/Word.jsx","constants/gerarchia.js","view/components/ExecutionExercise.jsx","view/containers/ExerciseContainers/FreeExercise.jsx","view/containers/AuthContainers/Account.jsx","view/components/ExercisePreview.jsx","view/components/Paginatioin.jsx","view/containers/ExerciseContainers/Homework.jsx","view/containers/ExerciseContainers/HomeworkExecution.jsx","view/containers/ExerciseContainers/InsertExercise.jsx","view/containers/DashboardContainers/DeveloperDashBoard.jsx","view/components/DeveloperToAccept.jsx","view/containers/DashboardContainers/AdminDevDashBoard.jsx","view/components/User.jsx","view/containers/DashboardContainers/AdminUserDashBoard.jsx","view/containers/ExerciseContainers/DoneHomework.jsx","view/containers/ExerciseContainers/AssignedHomework.jsx","view/containers/ExerciseContainers/PublicExercises.jsx","view/components/Checkbox.jsx","view/components/ClassCreationModal.jsx","view/containers/ExerciseContainers/ClassManagement.jsx","view/containers/DashboardContainers/AdminDashboard.jsx","view/containers/ExerciseContainers/ExerciseDetails.jsx","view/containers/ExerciseContainers/FavouriteTeachers.jsx","view/containers/AuthContainers/Activation.jsx","view/containers/AuthContainers/Forgot.jsx","App.jsx","serviceWorker.js","index.js"],"names":["initState","signUpCompleted","signinError","signupError","isReady","user","loader","activationInProgress","activationMessage","signIn","username","password","signUp","firstName","lastName","role","language","dateOfBirth","password_confirm","dataModify","forgot","passwordConfirm","requestSent","passwordChanged","token","localStorage","getItem","JSON","parse","authReducer","state","arguments","length","undefined","action","type","Object","objectSpread","data","payload","inProgress","message","userInfo","authError","error","newExercise","sentence","sentenceString","response","showSolution","createAt","Date","now","userSolution","codeSolution","complete","alternativeSolution","todoExercises","exercises","page","links","doneExercises","publicExercises","onlyFavouritePublicExercise","innerLoader","exerciseDetails","ExerciseReducer","_action$obj","obj","word","indexSolution","index","todo","_embedded","exerciseModels","_links","public","exercise","devList","usersList","filter","reliability","dateMin","dateMax","openFilters","AdminReducer","usernameOrId","indexUser","findIndex","id","splice","indexDev","dev","classList","studentsList","showModalClass","newClass","name","favouriteTeachers","teachersList","ClassManagementReducer","flag","list","class","teachers","userModels","rootReducer","combineReducers","auth","admin","store","createStore","applyMiddleware","thunk","_label","it","account_yourData","dashboard_hiUser","executionExercise_complete","executionExercise_completeExercise","executionExercise_mark","gen_404Error","gen_account","gen_birthDate","gen_dashboard","gen_email","gen_firstName","gen_lastName","gen_logout","gen_modify","gen_newExercise","gen_password","gen_passwordConfirm","gen_role","gen_signin","gen_signup","gen_language","gen_admin","gen_developer","gen_student","gen_teacher","gen_author","exercisePreview_execute","gen_it","gen_en","gen_welcome","gen_userDashboard","gen_phrase","gen_insertDone","gen_error","gen_add","gen_new","gen_save","gen_edit","gen_delete","gen_reqField","gen_opSuccess","inputSentence_executeExercise","inputSentence_insertSentence","insertExercise_ClassDisp","insertExercise_StudentDisp","signup_errorPassword","signup_selectOption","signIn_forgotPassword","signup_hint","signUp_completed","signUp_error","login_error","sidebarElementStudent_exercise","sidebarElementStudent_freeExercise","sidebarElementStudent_exercises","sidebarElementStudent_marks","sidebarElementStudent_doneExercises","sidebarElementStudent_publicExercises","sidebarElementStudent_favoriteTeachers","sidebarElementTeacher_exercise","sidebarElementTeacher_insertExercise","sidebarElementTeacher_exercises","sidebarElementTeacher_class","detailsTeacher_detailsExercise","SidebarElementAdministrator_devs","insertExercise_confirmFSolution","insertExercise_editFSolution","executionExercise_addSolAlter","executionExercise_delSolAlter","executionExercise_altSolution","executionExercise_mainSolution","executionExercise_privateExercise","executionExercise_privateExerciseDev","gen_devDashboard","developerDashBoard_desc","developerDashBoard_devDownText","developerDashBoard_devDown","developerDashBoard_minReliability","developerDashBoard_minMaxDate","adminDashBoard_update","developerToAccept_allow","developerToAccept_deny","developer_downloadind","developerDashBoard_addFilter","adminDevDashBoard_subtitle","adminDevDashBoard_noDevApprove","adminDevDashBoard_noUser","adminDevDashBoard_devToApprove","gen_adminUsers","adminUserDashBoard_desc","adminUserDashBoard_delete","developerDashBoard_action","pagination_first","pagination_last","pagination_prev","pagination_next","exercisePreview_addedOn","classManagement_title","classCreationModal_name","classCreationModal_allStudents","classCreationModal_selStudents","dashboard_done","dashboard_numDone","dashboard_toDo","dashboard_numToDo","dashboard_public","dashboard_numPublic","dashboard_donePercentTitle","dashboard_donePercent","adminDashboard_students","adminDashboard_numStudents","adminDashboard_teachers","adminDashboard_numTeachers","adminDashboard_devs","adminDashboard_numDevs","adminDashboard_devWait","adminDashboard_numDevWait","teacherDashboard_insEx","teacherDashboard_numInsEx","teacherDashboard_class","teacherDashboard_numClass","teacherDashboard_students","teacherDashboard_numStudents","favouriteTeachers_allTeacher","publicExercises_All","publicExercises_Favourite","exerciseDetails_studentDone","exerciseDetails_studentToDo","activation_err_line1","activation_err_line2","activation_success_line1","activation_success_line2","activation_progress_line1","forgot_changePassword","forgot_sendRequest","forgot_info","forgot_insNewPass","forgot_changedSuccess","cat_adjective","attr_type","attr_degree","attr_gen","attr_num","attr_possessorpers","attr_possessornum","choice_ordinal","choice_quali","choice_poss","choice_super","choice_none","choice_feminile","choice_masculine","choice_common","choice_neuter","choice_singular","choice_plural","choice_invariable","choice_1pers","choice_2pers","choice_3pers","cat_conjunction","choice_coordinating","choice_subordinating","cat_determiner","attr_person","choice_article","choice_demonstrative","choice_exclamative","choice_indefinite","choice_interrogative","choice_numeral","choice_possessive","cat_noun","choice_proper","attr_neclass","choice_person","choice_location","choice_organization","choice_other","attr_nesubclass","choice_augmentative","choice_diminutive","cat_verb","choice_main","choice_auxiliary","choice_semiauxiliary","attr_mood","choice_indicative","choice_subjunctive","choice_imperative","choice_pastparticiple","choice_gerund","choice_infinitive","choice_present","choice_imperfect","choice_future","choice_past","choice_conditional","cat_pronoun","choice_personal","choice_relative","attr_case","choice_nominative","choice_accusative","choice_dative","choice_oblique","attr_polite","choice_polite","cat_adverb","choice_negative","choice_general","cat_adposition","choice_preposition","attr_contracted","choice_contracted","cat_number","choice_partitive","choice_currency","choice_ratio","choice_unit","cat_date","en","_translator","label","lang","_lang","concat","err","removePunctuation","allowedPunctuation","replace","x","trim","_toastSuccess","text","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","color","minHeight","borderRadius","background","boxShadow","_toastError","_confirmAlert","_ref","onConfirm","param","title","yes","no","confirmAlert","buttons","onClick","loadClassList","dispatch","getState","axios","get","headers","Authorization","then","res","catch","console","signOut","updateStudentsList","getAllStudents","resGetStudent","map","student","key","isSelected","getFavouriteTeachers","innerLoaderOff","initNewExerciseState","languageSelected","updateNewExerciseState","changeNewInputSentence","loadTodoExercises","_link","link","href","loadDoneExercises","path","loadPublicExercises","defaultLink","onlyFavourite","getAutomaticSolution","post","solutionText","sentences","tokens","fetchDeveloperList","log","fetchUsersList","deleteUser","delete","changeSignIn","changeSignUp","removeItem","activeAccount","signUpRequestId","connect","props","react_default","a","createElement","Fragment","NavLink","to","tabIndex","SignedOutLinks","Component","Navbar","this","components_SignedInLinks","components_SignedOutLinks","data-class","SidebarElementStudent","activeClassName","SidebarElementTeacher","SidebarElementAdministrator","_this$props","SidebarElementDeveloper","Sidebar","roleSpecificNav","components_SidebarElementStudent","components_SidebarElementAdministrator","components_SidebarElementTeacher","components_SidebarElementDeveloper","withRouter","Dashboard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadDoneExercisesDispatch","loadTodoExercisesDispatch","loadPublicExercisesDispatch","exercisesToDo","publics","numberOfExercise","doneCard","numberOfToDo","toDoCard","numberOfPublics","publicExCard","percent","percentToShow","Number","isNaN","toFixed","donePercentage","aria-valuenow","aria-valuemin","aria-valuemax","style","width","TeacherDashboard","_class","loadClassListDispatch","getAllStudentsDispatch","totalElements","insertedExercise","numberOfClasses","classes","numberOfStudents","students","Footer","addMainJs","head","document","getElementsByTagName","script","src","getElementById","appendChild","Validator","validEmail","email","regMail","match","validDate","date","getTime","validSelect","option","array","find","item","validPassword","pwd","regPassword","ExLang","RegExpression","getRegEmail","getRegPassword","HelperMessage","children","SignUp","handleChange","e","defineProperty","target","value","handleSubmit","assertThisInitialized","signUpDispatch","preventDefault","signUpData","isValid","errorEmail","current","innerHTML","errorDate","errorPassword","localeCompare","loaderOn","initAuthStoreDispatch","React","createRef","components_HelperMessage","Redirect","onSubmit","htmlFor","placeholder","onChange","autoComplete","ref","minLength","pattern","newUser","displayErrorDispatch","displayError","SignIn","signInData","params","activation","activeAccountDispatch","initStateExerciseDispatch","required","credentials","setItem","stringify","authorization","Error","InputSentence","cleanString","prepareExercise","LanguageIterator","langStruct","gerarchy","setBaseLevel","level","category","solution","currentChoices","getBaseCategories","values","solutionItem","full","join","short","choice","categoryLength","push","getCurrentChoices","checkCondition","nextLevel","attributes","choices","lastSolution","pop","categoryAttr","condition","_categoryAttr$this$le","getSolution","LanguageStructure","jsonSource","SolutionMapper","solutionString","translation","trad","arrayCode","split","primoLivello","_loop","i","element","Word","backOne","updateWordStateDispatch","languageIterator","prevLevel","getCurrentButtonList","getVerboseSolution","generateNext","button","_this$props2","reset","_this$props3","edit","_this$props4","showButton","solutionTag","getBaseIterator","initSolution","charAt","_this2","_this$props5","parola","liElement","disabled","s","styleClass","wordSol","v4","updateWordState","gerarchia","attrName","ExecutionExercise","extractTag","tag","filterWord","tags","components_Word","FreeExsercise","sentenceArray","checkSolution","saveFreeExerciseDispatch","updateNewExerciseStateDispatch","getCodeSolution","privateExerciseDev","checked","initNewExerciseStateDispatch","getAutomaticSolutionDispatch","initializeNewExercise","changeNewInputSentenceDispatch","components_InputSentence","components_ExecutionExercise","input","assignedUsersIds","phraseText","mainSolution","visibility","visibilityDev","author","content-type","saveFreeExercise","Account","updateUserInfoDispatch","formData","isFormValid","userdata","defaultValue","readOnly","toISOString","substr","put","warn","ExercisePreview","getDate","timestamp","getMonth","getFullYear","goToExecution","phrase","selectExercise","onSelect","selectCard","creationDate","mark","isMark","markClass","Pagination","first","last","next","prev","number","totalPages","cssClassFirst","cssClassLast","aria-label","Homework","history","initializeNewExerciseDispatch","areThereExerciseToDo","components_ExercisePreview","authorName","dateExercise","executionDate","Paginatioin","HomeworkExercise","saveSolutionDispatch","salvaEsercizio","solutionFromStudent","exerciseId","_res$data","objSolution","saveSolution","InsertExercise","saveExerciseSolutionDispatch","codeSolution1","codeSolution2","privateExercise","innerLoaderOn","event","updateStudentsListDispatch","check","handleChangeClassList","forEach","_student","classElement","classId","saveExerciseSolution","DeveloperDashboard","updateFilterDispatch","handleChangeSwitch","filterButton","downlaodAllDispatch","data-toggle","data-target","aria-controls","min","max","step","dateString","b","languages","startDate","endDate","minReliability","blob","Blob","saveAs","downlaodAll","updateFilter","DeveloperToAccept","btAction","alt","AdminDevDashBoard","fetchDeveloperListDispatch","isAccepted","activateUserDispatch","deleteUserDispatch","devRender","components_DeveloperToAccept","acceptDeveloper","_ref2","activateUser","User","textRole","fetchUsersListDispatch","_user","User_User","DoneHomework","areThereExerciseDone","AssignedHomework","PublicExercises","onClickPagination","getFavouriteTeachersDispatch","changePublicExerciseFilterDispatch","areThereExercisePublic","classStyleAll","classStyleOnlyFav","changePublicExerciseFilter","Checkbox","defaultProps","ClassCreationModal","handleChangeCheck","updateList","handleChangeName","errorName","innerText","onChangeName","studentsToReturn","teacherId","confirm","errorList","show","setShow","ButtonToolbar_default","Modal_default","size","onHide","aria-labelledby","Header","closeButton","Title","Body","Container_default","Row_default","Col_default","sm","components_Checkbox","Button_default","ClassManagement","updateNameNewClassDispatch","setShowModalClassDispatch","initListNewClassDispatch","updateListNewClassDispatch","createClassDispatch","initEditClassDispatch","editClassDispatch","deleteClassDispatch","classItem","aria-expanded","data-parent","ButtonGroup_default","variant","components_ClassCreationModal","updateNameNewClass","setShowModalClass","initListNewClass","updateListNewClass","studentsId","createClass","selectedClass","initEditClass","_ref3","editClass","_ref4","deleteClass","AdminDashboard","numOfStudents","numOfDevs","numOfTeachers","devToAccept","devs","devsAccept","ExercisesDetails","deleteExercise","onDeleteExerciseDispatch","getExerciseDetailsDispatch","selectedExercise","_exercise","initExerciseDetailsDispatch","textSplitted","exerciseText","altSolution","aria-current","studentDone","lastname","studentToDo","getExerciseDetails","onDeleteExercise","FavouriteTeachers","getAllTeachersDispatch","addFavouriteTeachersDispatch","removeFavouriteTeachersDispatch","teacher","indexTeacherFavourite","_teacher","getAllTeachers","teacherIndex","removedElement","removeFavouriteTeachers","addFavouriteTeachers","Activation","Forgot","changeForgotDispatch","handleSubmitPassword","_props$forgot","changePasswordDispatch","handleSubmitEmail","sendRequestDispatch","request","requestId","variable","changePassword","sendRequest","App","loaderOnDispatch","initializeAuthDispatch","mainDash","DeveloperDashBoard","BrowserRouter","react_toastify","transition","Flip","NavbarContainers_Navbar","components_Sidebar","Switch","App_ProtectedRoute","exact","component","isAllowed","FreeExercise","Route","HomeworkExecution","AdminUserDashBoard","render","Error_Error","components_Footer","ProtectedRoute","objectWithoutProperties","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","configure","ReactDOM","es","src_App_0","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f075925d.chunk.js","sourcesContent":["const initState = {\r\n  signUpCompleted: false,\r\n  signinError: null,\r\n  signupError: null,\r\n  isReady: false,\r\n  user: null,\r\n  loader: false,\r\n  activationInProgress: false,\r\n  activationMessage: [],\r\n  signIn: {\r\n    username: '',\r\n    password: ''\r\n  },\r\n  signUp: {\r\n    username: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    role: '',\r\n    language: '',\r\n    dateOfBirth: '',\r\n    password_confirm: ''\r\n  },\r\n  dataModify: {\r\n    username: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  },\r\n  forgot: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    requestSent: false,\r\n    passwordChanged: false\r\n  },\r\n  token: localStorage.getItem('token')\r\n    ? JSON.parse(localStorage.getItem('token'))\r\n    : null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_AUTH_STORE':\r\n      return { ...initState, isReady: true };\r\n    case 'CHANGE_SIGNIN_DATA':\r\n      return {\r\n        ...state,\r\n        signIn: { ...state.signIn, ...action.data }\r\n      };\r\n    case 'CHANGE_SIGNUP_DATA':\r\n      return {\r\n        ...state,\r\n        signUp: { ...state.signUp, ...action.data }\r\n      };\r\n    case 'CHANGE_FORGOT_DATA':\r\n      return {\r\n        ...state,\r\n        forgot: {\r\n          ...state.forgot,\r\n          ...action.data\r\n        }\r\n      };\r\n    case 'REQUEST_SENT':\r\n      return {\r\n        ...initState,\r\n        isReady: true,\r\n        forgot: {\r\n          ...initState.forgot,\r\n          requestSent: true\r\n        }\r\n      };\r\n    case 'PASSWORD_CHANGED':\r\n      return {\r\n        ...initState,\r\n        isReady: true,\r\n        forgot: {\r\n          ...initState.forgot,\r\n          passwordChanged: true\r\n        }\r\n      };\r\n    case 'LOADER_ON':\r\n      return {\r\n        ...state,\r\n        loader: true\r\n      };\r\n    case 'LOADER_OFF':\r\n      return {\r\n        ...state,\r\n        loader: false\r\n      };\r\n    case 'ACTIVATION':\r\n      return {\r\n        ...state,\r\n        activationInProgress: action.payload.inProgress,\r\n        activationMessage: action.payload.message\r\n      };\r\n    case 'LOAD_AUTH':\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        loader: false,\r\n        isReady: true\r\n      };\r\n    case 'LOGIN_ERROR':\r\n      return {\r\n        ...state,\r\n        signinError: 'Login failed',\r\n        signupError: null,\r\n        user: null,\r\n        loader: false,\r\n        isReady: true\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.userInfo.user,\r\n        token: action.userInfo.token,\r\n        signIn: initState.signIn,\r\n        loader: false,\r\n        signUp: initState.signUp,\r\n        isReady: true,\r\n        signUpCompleted: false\r\n      };\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      return { ...initState, isReady: true };\r\n\r\n    case 'SIGNUP_ERROR':\r\n      return {\r\n        ...state,\r\n        signupError: 'SignUp failed',\r\n        user: null,\r\n        loader: false,\r\n        isReady: true,\r\n        signUpCompleted: false\r\n      };\r\n    case 'SIGNUP_SUCCESS':\r\n      return {\r\n        ...initState,\r\n        signUpCompleted: true,\r\n        isReady: true\r\n      };\r\n\r\n    case 'DISPLAY_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: action.error,\r\n        loader: false\r\n      };\r\n\r\n    default:\r\n      return { ...state, loader: false };\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","/* eslint-disable no-case-declarations */\r\nconst initState = {\r\n  newExercise: {\r\n    sentence: [],\r\n    sentenceString: '',\r\n    response: null,\r\n    showSolution: false,\r\n    createAt: Date.now(),\r\n    userSolution: [[], []], // lista di stati per le word\r\n    codeSolution: [[], []],\r\n    complete: false,\r\n    alternativeSolution: false,\r\n    language: 'it'\r\n    // languageSelected: 'it' // utilizza\r\n  },\r\n  todoExercises: { exercises: null, page: null, links: null },\r\n  doneExercises: { exercises: null, page: null, links: null },\r\n  publicExercises: { exercises: null, page: null, links: null },\r\n  onlyFavouritePublicExercise: false,\r\n  innerLoader: false,\r\n  exerciseDetails: null\r\n};\r\n\r\n/* EXERCISE MODEL\r\n{\r\n  alternativeSolutionId: \"5cca155d04dacb44349032c9\"\r\n  authorId: \"5cca0e4204dacb3c58a49caa\"\r\n  authorName: \"Margherita Visentin\"\r\n  dateExercise: 1556747727951\r\n  id: \"5cca15cf04dacb44349032cb\"\r\n  mainSolutionId: \"5cca155204dacb44349032c8\"\r\n  phraseId: \"5cca15a304dacb44349032ca\"\r\n  phraseText: \"Questo è un nuovo esercizio per gli studenti\"\r\n  studentIdDone: []\r\n  studentIdToDo: [\"5cca0dfb04dacb3c58a49ca8\", \"5cca0e7d04dacb3c58a49cad\"]\r\n  visibility: true\r\n}\r\n\r\n*/\r\n\r\nconst ExerciseReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_STATE':\r\n      return {\r\n        ...initState\r\n      };\r\n    case 'INNER_LOADER_ON':\r\n      return {\r\n        ...state,\r\n        innerLoader: true\r\n      };\r\n    case 'INNER_LOADER_OFF':\r\n      return {\r\n        ...state,\r\n        innerLoader: false\r\n      };\r\n    case 'INIT_EXERCISE':\r\n      return {\r\n        ...state,\r\n        newExercise: initState.newExercise\r\n      };\r\n    case 'INIT_NEW_EXERCISE':\r\n      return {\r\n        ...state,\r\n        newExercise: action.newExercise\r\n      };\r\n    case 'UPDATE_EXERCISE':\r\n      return {\r\n        ...state,\r\n        newExercise: { ...state.newExercise, ...action.newExercise }\r\n      };\r\n\r\n    case 'UPDATE_WORD_STATE':\r\n      const { word, indexSolution } = action.obj;\r\n      const userSolution = state.newExercise.userSolution[indexSolution];\r\n\r\n      userSolution[word.index] = word;\r\n      return {\r\n        ...state,\r\n        newExercise: { ...state.newExercise }\r\n      };\r\n\r\n    case 'CHANGE_INPUT_SENTENCE_DATA':\r\n      return {\r\n        ...state,\r\n        newExercise: {\r\n          ...state.newExercise,\r\n          ...action.data\r\n        }\r\n      };\r\n    case 'SAVE_EXERCISE_SUCCESS':\r\n      return {\r\n        ...initState,\r\n        newExercise: {\r\n          ...state.newExercise,\r\n          ...action.newExercise,\r\n          showSolution: true\r\n        },\r\n        innerLoader: false\r\n        // newExercise: initState.newExercise\r\n      };\r\n\r\n    case 'LOAD_TODO_SUCCESS':\r\n      return {\r\n        ...state,\r\n        todoExercises: {\r\n          exercises: action.todo._embedded\r\n            ? action.todo._embedded.exerciseModels\r\n            : [],\r\n          page: action.todo.page,\r\n          links: action.todo._links\r\n        },\r\n        innerLoader: false\r\n      };\r\n    case 'LOAD_DONE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        doneExercises: {\r\n          exercises: action.todo._embedded\r\n            ? action.todo._embedded.exerciseModels\r\n            : [],\r\n          page: action.todo.page,\r\n          links: action.todo._links\r\n        },\r\n        innerLoader: false\r\n      };\r\n    case 'LOAD_PUBLIC_SUCCESS':\r\n      return {\r\n        ...state,\r\n        publicExercises: {\r\n          exercises: action.public._embedded\r\n            ? action.public._embedded.exerciseModels\r\n            : [],\r\n          page: action.public.page,\r\n          links: action.public._links\r\n        },\r\n        innerLoader: false\r\n      };\r\n    case 'CHANGE_PUBLIC_EXERCISE_FILTER':\r\n      return {\r\n        ...state,\r\n        onlyFavouritePublicExercise: !state.onlyFavouritePublicExercise\r\n      };\r\n    case 'EXERCISE_DETAILS':\r\n      return {\r\n        ...state,\r\n        exerciseDetails: action.exercise\r\n      };\r\n    case 'INIT_EXERCISE_DETAILS':\r\n      return {\r\n        ...state,\r\n        exerciseDetails: initState.exerciseDetails\r\n      };\r\n    default:\r\n      // console.error('REDUCER ERRATO', state, action);\r\n      return { ...state, innerLoader: false };\r\n  }\r\n};\r\n\r\nexport default ExerciseReducer;\r\n","const initState = {\r\n  devList: [],\r\n  usersList: [],\r\n  filter: {\r\n    reliability: 0,\r\n    dateMin: '',\r\n    dateMax: '',\r\n    openFilters: false\r\n  }\r\n};\r\n\r\n// penso che case 'INIT_STATE' sia inutile e non venga mai utilizzato\r\nconst AdminReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_STATE':\r\n      return {\r\n        ...initState\r\n      };\r\n    case 'UPDATE_FILTER':\r\n      return {\r\n        ...state,\r\n        filter: {\r\n          ...state.filter,\r\n          ...action.filter\r\n        }\r\n      };\r\n    case 'UPDATE_DEV_LIST': {\r\n      return {\r\n        ...state,\r\n        devList: action.payload\r\n      };\r\n    }\r\n    case 'UPDATE_USER_LIST': {\r\n      return {\r\n        ...state,\r\n        usersList: action.payload\r\n      };\r\n    }\r\n    case 'USER_DELETE_SUCCES': {\r\n      const { usernameOrId } = action.payload;\r\n      const { usersList, devList } = state;\r\n      const indexUser = usersList.findIndex(user => user.id === usernameOrId);\r\n      if (indexUser > -1) usersList.splice(indexUser, 1);\r\n\r\n      const indexDev = devList.findIndex(dev => dev.id === usernameOrId);\r\n      if (indexDev > -1) devList.splice(indexDev, 1);\r\n\r\n      return {\r\n        ...state,\r\n        usersList,\r\n        devList\r\n      };\r\n    }\r\n    case 'DEV_APPROVE_SUCCES': {\r\n      const { usernameOrId } = action.payload;\r\n      const { devList } = state;\r\n      // ritorna l’indice dell’elemento che ha id=== usernameOrld || se non c’è ritorna -1\r\n      const indexDev = devList.findIndex(dev => dev.id === usernameOrId);\r\n      if (indexDev > -1) devList.splice(indexDev, 1);\r\n      return {\r\n        ...state,\r\n        devList\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state, loader: false };\r\n    }\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","const initState = {\r\n  classList: [],\r\n  studentsList: [],\r\n  showModalClass: false,\r\n  newClass: {\r\n    name: '',\r\n    studentsList: [],\r\n    id: null\r\n  },\r\n  favouriteTeachers: [],\r\n  teachersList: null\r\n};\r\n\r\nconst ClassManagementReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_STATE':\r\n      return {\r\n        ...initState\r\n      };\r\n    case 'LOAD_CLASS_LIST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        classList: action.obj.classList\r\n      };\r\n    case 'UPDATE_NAMENEWCLASS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        newClass: {\r\n          ...state.newClass,\r\n          name: action.name\r\n        }\r\n      };\r\n    case 'SET_SHOWMODALCLASS':\r\n      return {\r\n        ...state,\r\n        showModalClass: action.flag\r\n      };\r\n\r\n    case 'UPDATE_LISTNEWCLASS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        newClass: {\r\n          ...state.newClass,\r\n          studentsList: action.list\r\n        }\r\n      };\r\n    case 'CREATE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        newClass: {\r\n          ...initState.newClass,\r\n          studentsList: action.studentsList\r\n        },\r\n        showModalClass: false\r\n      };\r\n    case 'UPDATE_STUDENT_LIST':\r\n      return {\r\n        ...state,\r\n        studentsList: action.studentsList\r\n      };\r\n    case 'UPDATE_STUDENTSLIST_NEWCLASS':\r\n      return {\r\n        ...state,\r\n        newClass: {\r\n          ...state.newClass,\r\n          studentsList: action.studentsList\r\n        }\r\n      };\r\n    case 'INIT_EDIT_CLASS':\r\n      return {\r\n        ...state,\r\n        newClass: {\r\n          ...initState.newClass,\r\n          studentsList: action.class.studentsList,\r\n          name: action.class.name,\r\n          id: action.class.id\r\n        },\r\n        showModalClass: true\r\n      };\r\n    case 'GET_FAVOURITE_TEACHERS':\r\n      return {\r\n        ...state,\r\n        favouriteTeachers: action.favouriteTeachers\r\n      };\r\n    case 'GET_TEACHERS_LIST':\r\n      return {\r\n        ...state,\r\n        teachersList: {\r\n          teachers: action.teachersList._embedded\r\n            ? action.teachersList._embedded.userModels\r\n            : [],\r\n          page: action.teachersList.page,\r\n          links: action.teachersList._links\r\n        }\r\n      };\r\n    default:\r\n      // console.error('REDUCER ERRATO', state, action);\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ClassManagementReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './AuthReducer';\r\nimport ExerciseReducer from './ExerciseReducer';\r\nimport AdminReducer from './AdminReducer';\r\nimport ClassManagementReducer from './ClassManagementReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  exercise: ExerciseReducer,\r\n  admin: AdminReducer,\r\n  class: ClassManagementReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// the key name will be the data property on the state object\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/RootReducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default store;\r\n","/**\r\n * Label explanation\r\n * gen_ = generic, they can be used in any component (e.g. navbar, sidebar, footer ecc)\r\n * *******_ = component specific label, where the asterisks stand for the component label\r\n */\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const _label = {\r\n  it: {\r\n    account_yourData: 'I tuoi dati',\r\n    dashboard_hiUser: 'Ciao, ',\r\n    executionExercise_complete: 'Completa',\r\n    executionExercise_completeExercise: 'Esercizio',\r\n    executionExercise_mark: 'La tua valutazione: ',\r\n    gen_404Error: 'Errore 404, pagina non trovata',\r\n    gen_account: 'Profilo',\r\n    gen_birthDate: 'Data di nascita',\r\n    gen_dashboard: 'Dashboard',\r\n    gen_email: 'Email',\r\n    gen_firstName: 'Nome',\r\n    gen_lastName: 'Cognome',\r\n    gen_logout: 'Esci',\r\n    gen_modify: 'Modifica',\r\n    gen_newExercise: 'Nuovo esercizio',\r\n    gen_password: 'Password',\r\n    gen_passwordConfirm: 'Conferma password',\r\n    gen_role: 'Ruolo',\r\n    gen_signin: 'Accedi',\r\n    gen_signup: 'Registrati',\r\n    gen_language: 'Lingua',\r\n    gen_admin: 'Amministratore',\r\n    gen_developer: 'Sviluppatore',\r\n    gen_student: 'Studente',\r\n    gen_teacher: 'Insegnante',\r\n    gen_author: 'Autore',\r\n    exercisePreview_execute: \"Svolgi l'esercizio\",\r\n    gen_it: 'Italiano',\r\n    gen_en: 'Inglese',\r\n    gen_welcome: 'Bentornato',\r\n    gen_userDashboard: 'Pannello Utente',\r\n    gen_phrase: 'Frase',\r\n    gen_insertDone: 'Esercizio aggiunto con successo',\r\n    gen_error: 'Errore interno',\r\n    gen_add: 'Aggiungi',\r\n    gen_new: 'Nuova',\r\n    gen_save: 'Salva',\r\n    gen_edit: 'Modifica',\r\n    gen_delete: 'Elimina',\r\n    gen_reqField: 'Campo obbligatorio',\r\n    gen_opSuccess: 'Operazione completata',\r\n    inputSentence_executeExercise: \"Svolgi l'esercizio\",\r\n    inputSentence_insertSentence: 'Inserisci la frase',\r\n    insertExercise_ClassDisp: 'Classi disponibili',\r\n    insertExercise_StudentDisp: 'Studenti disponibili ',\r\n    signup_errorPassword: 'Le due passowrd non coincidono',\r\n    signup_selectOption: \"Seleziona un'opzione\",\r\n    signIn_forgotPassword: 'Password dimenticata?',\r\n    signup_hint:\r\n      'La password deve essere lunga dai 6 ai 20 caratteri e non deve contenere caratteri speciali',\r\n    signUp_completed:\r\n      'Registrazione completata, a breve riceverai per email per confermare il tuo account.',\r\n    signUp_error: 'Registrazione fallita',\r\n    login_error: 'Autenticazione fallita',\r\n    sidebarElementStudent_exercise: 'Esercizi',\r\n    sidebarElementStudent_freeExercise: 'Esercitazione Libera',\r\n    sidebarElementStudent_exercises: 'Compiti per casa',\r\n    sidebarElementStudent_marks: 'I tuoi voti',\r\n    sidebarElementStudent_doneExercises: 'Esercizi Svolti',\r\n    sidebarElementStudent_publicExercises: 'Esercizi Pubblici',\r\n    sidebarElementStudent_favoriteTeachers: 'Insegnanti preferiti',\r\n    sidebarElementTeacher_exercise: 'Esercizi',\r\n    sidebarElementTeacher_insertExercise: 'Inserisci esercizio',\r\n    sidebarElementTeacher_exercises: 'Esercizi inseriti',\r\n    sidebarElementTeacher_class: 'Gestione Classi',\r\n    detailsTeacher_detailsExercise: 'Dettagli esercizio',\r\n    SidebarElementAdministrator_devs: 'Sviluppatori',\r\n    insertExercise_confirmFSolution: 'Inserisci soluzione proposta',\r\n    insertExercise_editFSolution: 'Modifica soluzione',\r\n    executionExercise_addSolAlter: 'Aggiungi soluzione alternativa',\r\n    executionExercise_delSolAlter: 'Rimuovi la soluzione alternativa',\r\n    executionExercise_altSolution: 'Soluzione alternativa',\r\n    executionExercise_mainSolution: 'Soluzione principale',\r\n    executionExercise_privateExercise: 'Esercizio privato',\r\n    executionExercise_privateExerciseDev:\r\n      'Non permettere ad uno sviluppatore di scaricare questa frase',\r\n    gen_devDashboard: 'Pannello Sviluppatore',\r\n    developerDashBoard_desc: 'Filtra e scarica i dati che ti interessano',\r\n    developerDashBoard_devDownText:\r\n      \"Premendo il bottone sottostante, puoi scaricare i dati di analisi grammaticale generati dali utenti di Colletta. Potrebbe volerci un po' di tempo, fatti un caffè, dai.\",\r\n    developerDashBoard_devDown: 'Scarica',\r\n    developerDashBoard_minReliability: 'Affidabilità minima',\r\n    developerDashBoard_minMaxDate: 'Data Min/Max',\r\n    adminDashBoard_update: 'Aggiorna',\r\n    developerToAccept_allow: 'Accetta',\r\n    developerToAccept_deny: 'Rifiuta',\r\n    developer_downloadind: 'Download in corso',\r\n    developerDashBoard_addFilter: 'Aggiungi filtro',\r\n    adminDevDashBoard_subtitle:\r\n      'Accetta o rifiuta le richieste di iscrizione degli sviluppatori',\r\n    adminDevDashBoard_noDevApprove: 'Nessun developer da approvare',\r\n    adminDevDashBoard_noUser: 'Nessun utente trovato',\r\n    adminDevDashBoard_devToApprove: 'Sviluppatori da approvare',\r\n    gen_adminUsers: 'Utenti',\r\n    adminUserDashBoard_desc: 'Visualizza e elimina gli utenti',\r\n    adminUserDashBoard_delete: 'Elimina',\r\n    developerDashBoard_action: 'Azioni',\r\n    pagination_first: 'Primo',\r\n    pagination_last: 'Ultimo',\r\n    pagination_prev: 'Precedente',\r\n    pagination_next: 'Successivo',\r\n    exercisePreview_addedOn: 'Aggiunto il',\r\n    classManagement_title: 'Gestione delle classi',\r\n    classCreationModal_name: 'Nome della classe',\r\n    classCreationModal_allStudents: 'Tutti gli studenti',\r\n    classCreationModal_selStudents: 'Studenti selezionati',\r\n    dashboard_done: 'Svolti',\r\n    dashboard_numDone: 'Numero di esercizi svolti',\r\n    dashboard_toDo: 'Da fare',\r\n    dashboard_numToDo: 'Numero di esercizi da fare',\r\n    dashboard_public: 'Pubblici',\r\n    dashboard_numPublic: 'Numbero di esericizi pubblici',\r\n    dashboard_donePercentTitle: 'Compiti svolti',\r\n    dashboard_donePercent: 'Percentuale di compiti svolti',\r\n    adminDashboard_students: 'Studenti',\r\n    adminDashboard_numStudents: 'Numero totale di studenti iscritti al sistema',\r\n    adminDashboard_teachers: 'Insegnanti',\r\n    adminDashboard_numTeachers: 'Numero di insegnanti iscritti al sistema',\r\n    adminDashboard_devs: 'Sviluppatori',\r\n    adminDashboard_numDevs: 'Numero di sviluppatori iscritti al sistema',\r\n    adminDashboard_devWait: 'In Attesa',\r\n    adminDashboard_numDevWait:\r\n      'Numero di sviluppatori in attesa di approvazione',\r\n    teacherDashboard_insEx: 'Esercizi inseriti',\r\n    teacherDashboard_numInsEx: 'Numero totale di esericizi inseriti',\r\n    teacherDashboard_class: 'Classi',\r\n    teacherDashboard_numClass: 'Numero di classi create',\r\n    teacherDashboard_students: 'Studenti',\r\n    teacherDashboard_numStudents: 'Numero di studenti nel sistema',\r\n    favouriteTeachers_allTeacher: 'Tutti gli insegnanti',\r\n    publicExercises_All: 'Tutti',\r\n    publicExercises_Favourite: 'Insegnanti Preferiti',\r\n    exerciseDetails_studentDone: 'Esercizio completato da:',\r\n    exerciseDetails_studentToDo: 'Esercizio in carico a:',\r\n    activation_err_line1: 'Impossibile attivare questo account',\r\n    activation_err_line2:\r\n      \"Se hai problemi con l'accesso contatta l'assistenza \",\r\n    activation_success_line1: 'Attivazione completata',\r\n    activation_success_line2: 'Grazie per aver scelto Colletta',\r\n    activation_progress_line1: 'Attivazione completata',\r\n    forgot_changePassword: 'Cambia password',\r\n    forgot_sendRequest: 'Richiedi una nuova password',\r\n    forgot_info: \"Riceverai una mail per l'inserimento di una nuova password\",\r\n    forgot_insNewPass: 'Inserisci la nuova password',\r\n    forgot_changedSuccess: 'La password è stata cambiata',\r\n    /*\r\n    Gerarchy below\r\n    */\r\n    cat_adjective: 'Aggettivo',\r\n    attr_type: 'Tipo',\r\n    attr_degree: 'Grado',\r\n    attr_gen: 'Genere',\r\n    attr_num: 'Numbero',\r\n    attr_possessorpers: 'Persona del possessore',\r\n    attr_possessornum: 'Numero del possessore',\r\n    choice_ordinal: 'Ordinale',\r\n    choice_quali: 'Qualificativo',\r\n    choice_poss: 'Possessivo',\r\n    choice_super: 'Superlativo',\r\n    choice_none: 'Niente',\r\n    choice_feminile: 'Femminile',\r\n    choice_masculine: 'Maschile',\r\n    choice_common: 'Comune',\r\n    choice_neuter: 'Neutro',\r\n    choice_singular: 'Singolare',\r\n    choice_plural: 'Plurale',\r\n    choice_invariable: 'Invariabile',\r\n    choice_1pers: 'Prima Persona',\r\n    choice_2pers: 'Seconda Persona',\r\n    choice_3pers: 'Terza Persona',\r\n    cat_conjunction: 'Congiunzione',\r\n    choice_coordinating: 'Coordinante',\r\n    choice_subordinating: 'Subordinante',\r\n    cat_determiner: 'Determinante',\r\n    attr_person: 'Persona',\r\n    choice_article: 'Articolo',\r\n    choice_demonstrative: 'Dimostrativo',\r\n    choice_exclamative: 'Esclamativo',\r\n    choice_indefinite: 'Indefinito',\r\n    choice_interrogative: 'Interrogativo',\r\n    choice_numeral: 'Numerale',\r\n    choice_possessive: 'Possessivo',\r\n    cat_noun: 'Nome',\r\n    choice_proper: 'Proprio',\r\n    attr_neclass: 'Classe del nome',\r\n    choice_person: 'Persona',\r\n    choice_location: 'Luogo',\r\n    choice_organization: 'Organizzazione',\r\n    choice_other: 'Altro',\r\n    attr_nesubclass: 'Nesub',\r\n    choice_augmentative: 'Accrescitivo',\r\n    choice_diminutive: 'Diminutivo',\r\n    cat_verb: 'Verbo',\r\n    choice_main: 'Principale',\r\n    choice_auxiliary: 'Ausiliare',\r\n    choice_semiauxiliary: 'Servile',\r\n    attr_mood: 'Modo',\r\n    choice_indicative: 'Indicativo',\r\n    choice_subjunctive: 'Congiuntivo',\r\n    choice_imperative: 'Imperativo',\r\n    choice_pastparticiple: 'Participio Passato',\r\n    choice_gerund: 'Gerundio',\r\n    choice_infinitive: 'Infinito',\r\n    choice_present: 'Presente',\r\n    choice_imperfect: 'Imperfetto',\r\n    choice_future: 'Futuro',\r\n    choice_past: 'Passato',\r\n    choice_conditional: 'Condizionale',\r\n    cat_pronoun: 'Pronome',\r\n    choice_personal: 'Personale',\r\n    choice_relative: 'Relativo',\r\n    attr_case: 'Caso',\r\n    choice_nominative: 'Nominativo',\r\n    choice_accusative: 'Accusativo',\r\n    choice_dative: 'Dativo',\r\n    choice_oblique: 'Obliquo',\r\n    attr_polite: 'Cortesia',\r\n    choice_polite: 'Forma di cortesia',\r\n    cat_adverb: 'Avverbio',\r\n    choice_negative: 'Negativo',\r\n    choice_general: 'Generale',\r\n    cat_adposition: 'Apposizione',\r\n    choice_preposition: 'Preposizione',\r\n    attr_contracted: 'Contratto',\r\n    choice_contracted: 'Contratto',\r\n    cat_number: 'Numero',\r\n    choice_partitive: 'Partitivo',\r\n    choice_currency: 'Valuta',\r\n    choice_ratio: 'Rapporto',\r\n    choice_unit: 'Unità',\r\n    cat_date: 'Data'\r\n  },\r\n  en: {\r\n    account_yourData: 'Your data',\r\n    dashboard_hiUser: 'Hello, ',\r\n    executionExercise_complete: 'Submit solution',\r\n    executionExercise_completeExercise: 'Exercise',\r\n    executionExercise_mark: 'Your mark: ',\r\n    gen_404Error: 'Error 404, page not found',\r\n    gen_account: 'Account',\r\n    gen_birthDate: 'Date of birth',\r\n    gen_dashboard: 'Dashboard',\r\n    gen_email: 'Email',\r\n    gen_firstName: 'First Name',\r\n    gen_lastName: 'Last Name',\r\n    gen_logout: 'Logout',\r\n    gen_modify: 'Modify',\r\n    gen_newExercise: 'New Exercise',\r\n    gen_password: 'Password',\r\n    gen_passwordConfirm: 'Confirm password',\r\n    gen_role: 'Role',\r\n    gen_signin: 'Sign In',\r\n    gen_signup: 'Sign Up',\r\n    gen_language: 'Language',\r\n    gen_userDashboard: 'Your Dashboard',\r\n    gen_admin: 'Administrator',\r\n    gen_developer: 'Developer',\r\n    gen_student: 'Student',\r\n    gen_teacher: 'Teacher',\r\n    gen_it: 'Italian',\r\n    gen_en: 'English',\r\n    gen_author: 'Author',\r\n    gen_welcome: 'Welcome',\r\n    gen_phrase: 'Phrase',\r\n    gen_insertDone: 'Successfully added exercise',\r\n    gen_error: 'Internal error',\r\n    gen_add: 'Add',\r\n    gen_new: 'New',\r\n    gen_save: 'Save',\r\n    gen_opSuccess: 'Complete',\r\n    gen_edit: 'Edit',\r\n    gen_delete: 'Delete',\r\n    gen_reqField: 'Required field',\r\n    exercisePreview_execute: 'Execute exercise',\r\n    inputSentence_executeExercise: 'Get to work!',\r\n    inputSentence_insertSentence: 'Enter phrase',\r\n    insertExercise_ClassDisp: 'Classes available',\r\n    insertExercise_StudentDisp: 'Students available',\r\n    executionExercise_addSolAlter: 'Add alternative solution',\r\n    executionExercise_delSolAlter: 'Delete alternative solution',\r\n    executionExercise_altSolution: 'Alternative solution',\r\n    executionExercise_mainSolution: 'Main solution',\r\n    executionExercise_privateExercise: 'Private exercise',\r\n    executionExercise_privateExerciseDev:\r\n      'Deny developer acces to this exercise',\r\n    signup_errorPassword: 'The two passwords do not match',\r\n    signup_selectOption: 'Select an option',\r\n    signup_hint:\r\n      'Your password must be 6-20 characters long, contain letters and numbers, and must not contain spaces, special characters or emojis',\r\n    signUp_error: 'SignUp error',\r\n    login_error: 'Failed authentication',\r\n    sidebarElementStudent_exercise: 'Your Exercises',\r\n    sidebarElementStudent_freeExercise: 'Free training',\r\n    sidebarElementStudent_exercises: 'Homeworks',\r\n    sidebarElementStudent_marks: 'Your marks',\r\n    sidebarElementStudent_doneExercises: 'Completed Exercises',\r\n    sidebarElementStudent_publicExercises: 'Public Exercises',\r\n    sidebarElementStudent_favoriteTeachers: 'Favorite Teachers',\r\n    sidebarElementTeacher_exercise: 'Esercise',\r\n    sidebarElementTeacher_insertExercise: 'Insert exercise',\r\n    sidebarElementTeacher_exercises: 'Exercise history',\r\n    sidebarElementTeacher_class: 'Class Management',\r\n    SidebarElementAdministrator_devs: 'Developers',\r\n    detailsTeacher_detailsExercise: 'Exercise details',\r\n    insertExercise_confirmFSolution: 'Insert solution',\r\n    insertExercise_editFSolution: 'Edit solution',\r\n    gen_devDashboard: 'Developer Dashboard',\r\n    developerDashBoard_desc: \"Filter and download the data you're looking for\",\r\n    developerDashBoard_devDownText:\r\n      'By clicking the button below, you can can download all the user generated data of Colletta. This may take a while, feel free to go grab a coffe!',\r\n    developerDashBoard_devDown: 'Download',\r\n    developerDashBoard_addFilter: 'Add filter',\r\n    developerDashBoard_minReliability: 'Minimum reliability',\r\n    adminDashBoard_update: 'Update',\r\n    developerToAccept_allow: 'Allow',\r\n    developerToAccept_deny: 'Deny',\r\n    developer_downloadind: 'Downloading',\r\n    developerDashBoard_minMaxDate: 'Min/Max Date',\r\n    adminDevDashBoard_subtitle:\r\n      \"Approve or deny developers' subscription requests\",\r\n    adminDevDashBoard_noDevApprove: 'No developer needs to be approved',\r\n    adminDevDashBoard_devToApprove: 'Developer to Approve',\r\n    gen_adminUsers: 'Users',\r\n    adminUserDashBoard_desc: 'View and delete users',\r\n    adminDevDashBoard_noUser: 'No user found',\r\n    adminUserDashBoard_delete: 'Delete',\r\n    developerDashBoard_action: 'Actions',\r\n    pagination_first: 'First',\r\n    pagination_last: 'Last',\r\n    pagination_prev: 'Previous',\r\n    pagination_next: 'Next',\r\n    exercisePreview_addedOn: 'Added on',\r\n    classManagement_title: 'Class management',\r\n    classCreationModal_name: 'Class name',\r\n    classCreationModal_allStudents: 'All students',\r\n    classCreationModal_selStudents: 'Selected students',\r\n    dashboard_done: 'Done',\r\n    dashboard_numDone: 'Number of done exercises',\r\n    dashboard_toDo: 'To do',\r\n    dashboard_numToDo: 'Number of exercises to be done',\r\n    dashboard_public: 'Public',\r\n    dashboard_numPublic: 'Number of public exercises',\r\n    dashboard_donePercentTitle: 'Done Excercises',\r\n    dashboard_donePercent: 'Done exercises percentage',\r\n    adminDashboard_students: 'Students',\r\n    adminDashboard_numStudents: 'Total number of students in the system',\r\n    adminDashboard_teachers: 'Teachers',\r\n    adminDashboard_numTeachers: 'Total number of teachers in the system',\r\n    adminDashboard_devs: 'Developers',\r\n    adminDashboard_numDevs: 'Total number of developers in the system',\r\n    adminDashboard_devWait: 'Pending',\r\n    adminDashboard_numDevWait: 'Number of developers pending approval',\r\n    teacherDashboard_insEx: 'Inserted exercises',\r\n    teacherDashboard_numInsEx: 'Total number of inserted execises',\r\n    teacherDashboard_class: 'Classes',\r\n    teacherDashboard_numClass: 'Total number of created classes',\r\n    teacherDashboard_students: 'Students',\r\n    teacherDashboard_numStudents: 'Total number of students in the system',\r\n    favouriteTeachers_allTeacher: 'All teachers',\r\n    publicExercises_All: 'All',\r\n    publicExercises_Favourite: 'Favourites',\r\n    exerciseDetails_studentDone: 'Exercise completed by:',\r\n    exerciseDetails_studentToDo: 'Esercizio in todo:',\r\n\r\n    /*\r\n    Gerarchy below\r\n    */\r\n    cat_adjective: 'Adjective',\r\n    attr_type: 'Type',\r\n    attr_degree: 'Degree',\r\n    attr_gen: 'Genre',\r\n    attr_num: 'Number',\r\n    attr_possessorpers: 'Possessor person',\r\n    attr_possessornum: 'Possessor number',\r\n    choice_ordinal: 'Ordinal',\r\n    choice_quali: 'Qualificative',\r\n    choice_poss: 'Possessive',\r\n    choice_super: 'Superlative',\r\n    choice_none: 'None',\r\n    choice_feminile: 'Feminile',\r\n    choice_masculine: 'Masculine',\r\n    choice_common: 'Common',\r\n    choice_neuter: 'Neuter',\r\n    choice_singular: 'Singular',\r\n    choice_plural: 'Plural',\r\n    choice_invariable: 'Invariable',\r\n    choice_1pers: 'First Person',\r\n    choice_2pers: 'Second Person',\r\n    choice_3pers: 'Third Person',\r\n    cat_conjunction: 'Conjunction',\r\n    choice_coordinating: 'Coordinating',\r\n    choice_subordinating: 'Subordinating',\r\n    cat_determiner: 'Determiner',\r\n    attr_person: 'Person',\r\n    choice_article: 'Article',\r\n    choice_demonstrative: 'Demonstrative',\r\n    choice_exclamative: 'Exclamative',\r\n    choice_indefinite: 'Indefinite',\r\n    choice_interrogative: 'Interrogative',\r\n    choice_numeral: 'Numeral',\r\n    choice_possessive: 'Possessive',\r\n    cat_noun: 'Noun',\r\n    choice_proper: 'Proper',\r\n    attr_neclass: 'Name Class',\r\n    choice_person: 'Person',\r\n    choice_location: 'Location',\r\n    choice_organization: 'Organization',\r\n    choice_other: 'Other',\r\n    attr_nesubclass: 'Nesub',\r\n    choice_augmentative: 'Augmentative',\r\n    choice_diminutive: 'Diminutive',\r\n    cat_verb: 'Verb',\r\n    choice_main: 'Main',\r\n    choice_auxiliary: 'Auxiliary',\r\n    choice_semiauxiliary: 'Semiauxiliary',\r\n    attr_mood: 'Mood',\r\n    choice_indicative: 'Indicative',\r\n    choice_subjunctive: 'Subjunctive',\r\n    choice_imperative: 'Imperative',\r\n    choice_pastparticiple: 'Pastparticiple',\r\n    choice_gerund: 'Gerund',\r\n    choice_infinitive: 'Infinitive',\r\n    choice_present: 'Present',\r\n    choice_imperfect: 'Imperfect',\r\n    choice_future: 'Future',\r\n    choice_past: 'Past',\r\n    choice_conditional: 'Conditional',\r\n    cat_pronoun: 'Pronoun',\r\n    choice_personal: 'Personal',\r\n    choice_relative: 'Relative',\r\n    attr_case: 'Case',\r\n    choice_nominative: 'Nominative',\r\n    choice_accusative: 'Accusative',\r\n    choice_dative: 'Dative',\r\n    choice_oblique: 'Oblique',\r\n    attr_polite: 'Polite',\r\n    choice_polite: 'Polite',\r\n    cat_adverb: 'Adverb',\r\n    choice_negative: 'Negative',\r\n    choice_general: 'General',\r\n    cat_adposition: 'Adposition',\r\n    choice_preposition: 'Preposition',\r\n    attr_contracted: 'Contracted',\r\n    choice_contracted: 'Contracted',\r\n    cat_number: 'Number',\r\n    choice_partitive: 'Partitive',\r\n    choice_currency: 'Currency',\r\n    choice_ratio: 'Ratio',\r\n    choice_unit: 'Unit',\r\n    cat_date: 'Date'\r\n  }\r\n};\r\n","import { _label } from '../constants/Label';\r\n\r\nconst _translator = (label, lang) => {\r\n  const _lang = lang || 'it';\r\n  try {\r\n    if (\r\n      _lang &&\r\n      label &&\r\n      _label[`${_lang}`] &&\r\n      _label[`${_lang}`][`${label}`]\r\n    ) {\r\n      return `${_label[`${_lang}`][`${label}`]}`;\r\n    }\r\n    return `${label}`;\r\n  } catch (err) {\r\n    return label;\r\n  }\r\n};\r\nexport default _translator;\r\n","import { toast } from 'react-toastify';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\nexport const removePunctuation = sentenceString => {\r\n  const sentence = sentenceString;\r\n  //const punctuationRegEx = /[--@[-`{-~¡-©«-¬®-±´¶-»¿×÷˂-˅˒-˟˥-˫˭˯-˿͵΄-΅·϶҂՚-՟-֊־׀׃׆׳-״؆-؏؛؞-؟٪-٭۔۩۽-۾܀-܍߶-߹।-॥॰৲-৳৺૱୰௳-௺౿ೱ-ೲ൹෴฿๏๚-๛༁-༗༚-༟༴༶༸༺-༽྅྾-࿅࿇-࿌࿎-࿔၊-၏႞-႟჻፠-፨᎐-᎙᙭-᙮᚛-᚜᛫-᛭᜵-᜶។-៖៘-៛᠀-᠊᥀᥄-᥅᧞-᧿᨞-᨟᭚-᭪᭴-᭼᰻-᰿᱾-᱿᾽᾿-῁῍-῏῝-῟῭-`´-῾\\u2000-\\u206e⁺-⁾₊-₎₠-₵℀-℁℃-℆℈-℉℔№-℘℞-℣℥℧℩℮℺-℻⅀-⅄⅊-⅍⅏←-⏧␀-␦⑀-⑊⒜-ⓩ─-⚝⚠-⚼⛀-⛃✁-✄✆-✉✌-✧✩-❋❍❏-❒❖❘-❞❡-❵➔➘-➯➱-➾⟀-⟊⟌⟐-⭌⭐-⭔⳥-⳪⳹-⳼⳾-⳿⸀-\\u2e7e⺀-⺙⺛-⻳⼀-⿕⿰-⿻\\u3000-〿゛-゜゠・㆐-㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉃㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꘍-꘏꙳꙾꜀-꜖꜠-꜡꞉-꞊꠨-꠫꡴-꡷꣎-꣏꤮-꤯꥟꩜-꩟﬩﴾-﴿﷼-﷽︐-︙︰-﹒﹔-﹦﹨-﹫！-／：-＠［-｀｛-･￠-￦￨-￮￼-�]]/g;\r\n  const allowedPunctuation = /[,.?!\"'<->;:]/g;\r\n  const cleanString = sentence\r\n    .replace(allowedPunctuation, x => ` ${x} `)\r\n    .replace(allowedPunctuation, '')\r\n    .replace(/[^[\\x20-\\x7E]+[\\x81-\\xA5]]+/g, '')\r\n    .replace(/(\\s){2,}/g, '$1')\r\n    .trim();\r\n  return cleanString;\r\n};\r\n\r\nexport const filterPuntuaction = array => {\r\n  return array.filter(element => element.charAt(0) !== 'F');\r\n};\r\n\r\nexport const _toastSuccess = text =>\r\n  text &&\r\n  toast.success(text, {\r\n    position: 'bottom-right',\r\n    autoClose: 5000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    className: {\r\n      color: '#343a40',\r\n      minHeight: '60px',\r\n      borderRadius: '8px',\r\n      background: '#2FEDAD',\r\n      boxShadow: '2px 2px 20px 2px rgba(0,0,0,0.3)'\r\n    }\r\n  });\r\n\r\nexport const _toastError = text =>\r\n  text &&\r\n  toast.error(text, {\r\n    position: 'bottom-right',\r\n    autoClose: 5000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    className: {\r\n      color: '#343a40',\r\n      minHeight: '60px',\r\n      borderRadius: '8px',\r\n      background: '#2FEDAD',\r\n      boxShadow: '2px 2px 20px 2px rgba(0,0,0,0.3)'\r\n    }\r\n  });\r\n\r\nexport const _confirmAlert = (\r\n  { title, message, yes, no },\r\n  onConfirm,\r\n  param\r\n) => {\r\n  confirmAlert({\r\n    title: title !== null ? title : '',\r\n    message: message !== null ? message : '',\r\n    buttons: [\r\n      {\r\n        label: yes && yes.length > 0 ? yes : 'si',\r\n        onClick: () => onConfirm(param)\r\n      },\r\n      {\r\n        label: no && no.length > 0 ? no : 'no'\r\n      }\r\n    ]\r\n  });\r\n};\r\n","import axios from 'axios';\r\nimport store from '../store/index';\r\nimport { _toastSuccess, _toastError } from '../helpers/Utils';\r\nimport _translator from '../helpers/Translator';\r\n\r\nexport const initClass = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'INIT_STATE' });\r\n  };\r\n};\r\n\r\nexport const loadClassList = () => {\r\n  return dispatch => {\r\n    if (store.getState().auth.token !== null) {\r\n      axios\r\n        .get('http://localhost:8081/class/', {\r\n          headers: {\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        })\r\n        .then(res => {\r\n          dispatch({\r\n            type: 'LOAD_CLASS_LIST_SUCCESS',\r\n            obj: {\r\n              classList: res.data\r\n            }\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    } else {\r\n      dispatch(store.dispatch.signOut());\r\n    }\r\n  };\r\n};\r\n\r\nexport const createClass = ({ name, students, teacherId }) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\r\n        'http://localhost:8081/class/create',\r\n        {\r\n          name,\r\n          studentsId: students,\r\n          teacherId\r\n        },\r\n        {\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        _toastSuccess(\r\n          _translator('gen_opSuccess', store.getState().auth.user.language)\r\n        );\r\n        dispatch({\r\n          type: 'CREATE_SUCCESS',\r\n          studentsList: store.getState().class.studentsList\r\n            ? store.getState().class.studentsList.map(student => {\r\n                return {\r\n                  label: `${student.firstName} ${student.lastName}`,\r\n                  key: student.id,\r\n                  name: student.username,\r\n                  isSelected: false\r\n                };\r\n              })\r\n            : []\r\n        });\r\n        dispatch(loadClassList());\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateNameNewClass = name => {\r\n  return dispatch => {\r\n    dispatch({ type: 'UPDATE_NAMENEWCLASS_SUCCESS', name });\r\n  };\r\n};\r\n\r\nexport const setShowModalClass = flag => {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_SHOWMODALCLASS', flag });\r\n  };\r\n};\r\n\r\nexport const setShowModalEditClass = flag => {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_SHOWMODAL_EDITCLASS', flag });\r\n  };\r\n};\r\n\r\nexport const updateListNewClass = (list, name) => {\r\n  return dispatch => {\r\n    const element = list.find(item => item.name === name);\r\n    if (element !== undefined) element.isSelected = !element.isSelected;\r\n    dispatch({ type: 'UPDATE_LISTNEWCLASS_SUCCESS', list });\r\n  };\r\n};\r\n\r\nexport const initListNewClass = list => {\r\n  return dispatch => {\r\n    dispatch({ type: 'UPDATE_LISTNEWCLASS_SUCCESS', list });\r\n  };\r\n};\r\n\r\nexport const updateStudentsList = studentsList => {\r\n  return dispatch => {\r\n    dispatch({ type: 'UPDATE_STUDENT_LIST', studentsList });\r\n  };\r\n};\r\n\r\nexport const getAllStudents = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get('http://localhost:8081/users/get-students', {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(resGetStudent => {\r\n        dispatch(updateStudentsList(resGetStudent.data));\r\n        dispatch({\r\n          type: 'UPDATE_STUDENTSLIST_NEWCLASS',\r\n          studentsList: resGetStudent.data\r\n            ? resGetStudent.data.map(student => {\r\n                return {\r\n                  label: `${student.firstName} ${student.lastName}`,\r\n                  key: student.id,\r\n                  name: student.username,\r\n                  isSelected: false\r\n                };\r\n              })\r\n            : []\r\n        });\r\n      })\r\n      .catch(() => {\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getAllTeachers = _link => {\r\n  const link =\r\n    _link !== null && _link !== undefined\r\n      ? _link.href\r\n      : 'http://localhost:8081/users/ROLE_TEACHER';\r\n  return dispatch => {\r\n    axios\r\n      .get(link, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'GET_TEACHERS_LIST',\r\n          teachersList: res.data\r\n        });\r\n      })\r\n      .catch(() => {\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getFavouriteTeachers = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get('http://localhost:8081/students/favorite-teacher', {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'GET_FAVOURITE_TEACHERS',\r\n          favouriteTeachers: res.data\r\n        });\r\n      })\r\n      .catch(() => {\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const addFavouriteTeachers = teacher => {\r\n  return dispatch => {\r\n    const _class = store.getState().class;\r\n    const { favouriteTeachers } = _class;\r\n    let teacherIndex = favouriteTeachers.findIndex(\r\n      _teacher => _teacher.id === teacher.id\r\n    );\r\n    if (teacherIndex === -1) favouriteTeachers.push(teacher);\r\n    dispatch({\r\n      type: 'GET_FAVOURITE_TEACHERS',\r\n      favouriteTeachers\r\n    });\r\n    if (teacherIndex === -1) {\r\n      axios\r\n        .post(\r\n          `http://localhost:8081/students/favorite-teacher/${teacher.id}`,\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: store.getState().auth.token\r\n            }\r\n          }\r\n        )\r\n        .then(() => {\r\n          // dispatch(getFavouriteTeachers());\r\n        })\r\n        .catch(() => {\r\n          teacherIndex = favouriteTeachers.findIndex(\r\n            _teacher => _teacher.id === teacher.id\r\n          );\r\n          if (teacherIndex > -1) favouriteTeachers.splice(teacherIndex, 1);\r\n          dispatch({\r\n            type: 'GET_FAVOURITE_TEACHERS',\r\n            favouriteTeachers\r\n          });\r\n          _toastError(\r\n            _translator('gen_error', store.getState().auth.user.language)\r\n          );\r\n          return dispatch({ type: '' });\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeFavouriteTeachers = teacherId => {\r\n  return dispatch => {\r\n    const _class = store.getState().class;\r\n    const { favouriteTeachers } = _class;\r\n    const teacherIndex = favouriteTeachers.findIndex(\r\n      teacher => teacher.id === teacherId\r\n    );\r\n    let removedElement = null;\r\n    if (teacherIndex > -1) {\r\n      removedElement = favouriteTeachers.splice(teacherIndex, 1);\r\n    }\r\n    dispatch({\r\n      type: 'GET_FAVOURITE_TEACHERS',\r\n      favouriteTeachers\r\n    });\r\n    axios\r\n      .delete(`http://localhost:8081/students/favorite-teacher/${teacherId}`, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(() => {\r\n        // dispatch(getFavouriteTeachers());\r\n      })\r\n      .catch(() => {\r\n        if (teacherIndex > -1) {\r\n          favouriteTeachers.splice(teacherIndex, 0, removedElement);\r\n        }\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const initEditClass = ({ id, name, students }) => {\r\n  const studentsList = store.getState().class.studentsList\r\n    ? store.getState().class.studentsList.map(student => {\r\n        return {\r\n          label: `${student.firstName} ${student.lastName}`,\r\n          key: student.id,\r\n          name: student.username,\r\n          isSelected: false\r\n        };\r\n      })\r\n    : [];\r\n  if (students) {\r\n    students.forEach(_student => {\r\n      const element = studentsList.find(student => student.key === _student.id);\r\n      if (element !== undefined) {\r\n        element.isSelected = true;\r\n      }\r\n    });\r\n  }\r\n  return dispatch => {\r\n    dispatch({ type: 'INIT_EDIT_CLASS', class: { id, name, studentsList } });\r\n  };\r\n};\r\n\r\nexport const editClass = ({ students, name }) => {\r\n  return dispatch => {\r\n    axios\r\n      .put(\r\n        'http://localhost:8081/class/modify',\r\n        {\r\n          className: name,\r\n          studentsId: students,\r\n          classId: store.getState().class.newClass.id\r\n        },\r\n        {\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        }\r\n      )\r\n      .then(() => {\r\n        _toastSuccess(\r\n          _translator('gen_opSuccess', store.getState().auth.user.language)\r\n        );\r\n        dispatch({\r\n          type: 'CREATE_SUCCESS',\r\n          studentsList: store.getState().class.studentsList\r\n            ? store.getState().class.studentsList.map(student => {\r\n                return {\r\n                  label: `${student.firstName} ${student.lastName}`,\r\n                  key: student.id,\r\n                  name: student.username,\r\n                  isSelected: false\r\n                };\r\n              })\r\n            : []\r\n        });\r\n        dispatch(loadClassList());\r\n      })\r\n      .catch(() => {\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteClass = ({ classId }) => {\r\n  return dispatch => {\r\n    axios\r\n      .delete(`http://localhost:8081/class/${classId}`, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(() => {\r\n        _toastSuccess(\r\n          _translator('gen_opSuccess', store.getState().auth.user.language)\r\n        );\r\n        dispatch(loadClassList());\r\n      })\r\n      .catch(() => {\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n","// import axios from 'axios';\r\nimport axios from 'axios';\r\nimport store from '../store/index';\r\nimport _translator from '../helpers/Translator';\r\nimport { _toastSuccess, _toastError } from '../helpers/Utils';\r\n\r\nexport const initStateExercise = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'INIT_STATE' });\r\n  };\r\n};\r\n\r\nexport const innerLoaderOn = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'INNER_LOADER_ON' });\r\n  };\r\n};\r\nexport const innerLoaderOff = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'INNER_LOADER_OFF' });\r\n  };\r\n};\r\n\r\nexport const initializeNewExercise = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'INIT_EXERCISE' });\r\n  };\r\n};\r\n\r\nexport const initNewExerciseState = newExercise => {\r\n  // const allowedPunctuation = /[a-zA-Z]/g;\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'INIT_NEW_EXERCISE',\r\n      newExercise: {\r\n        ...newExercise,\r\n        language: newExercise.languageSelected,\r\n        userSolution: [\r\n          newExercise.sentence.map(() => {\r\n            return {};\r\n          }),\r\n          newExercise.sentence.map(() => {\r\n            return {};\r\n          })\r\n        ]\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateNewExerciseState = newExercise => {\r\n  return dispatch => {\r\n    dispatch({ type: 'UPDATE_EXERCISE', newExercise });\r\n  };\r\n};\r\n\r\nexport const changeNewInputSentence = data => {\r\n  return dispatch => {\r\n    dispatch({ type: 'CHANGE_INPUT_SENTENCE_DATA', data });\r\n  };\r\n};\r\n\r\nexport const updateWordState = (word, indexSolution) => {\r\n  return dispatch => {\r\n    dispatch({ type: 'UPDATE_WORD_STATE', obj: { word, indexSolution } });\r\n  };\r\n};\r\n\r\nexport const saveFreeExercise = newExercise => {\r\n  return dispatch => {\r\n    dispatch(innerLoaderOn());\r\n    const { id } = store.getState().auth.user;\r\n\r\n    axios\r\n      .post(\r\n        'http://localhost:8081/exercises/student/insert-free-exercise',\r\n        {\r\n          assignedUsersIds: null,\r\n          phraseText: newExercise.sentenceString,\r\n          mainSolution: JSON.stringify(newExercise.codeSolution[0]),\r\n          alternativeSolution: '',\r\n          visibility: true,\r\n          visibilityDev: !newExercise.privateExerciseDev,\r\n          author: id,\r\n          date: new Date().getTime(),\r\n          language: 'it'\r\n        },\r\n        {\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        dispatch({ type: 'SAVE_EXERCISE_SUCCESS', newExercise });\r\n      })\r\n      .catch(() => {\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const saveSolution = newExercise => {\r\n  return dispatch => {\r\n    dispatch(innerLoaderOn());\r\n    axios\r\n      .post(\r\n        'http://localhost:8081/exercises/student/do',\r\n        {\r\n          solutionFromStudent: JSON.stringify(newExercise.codeSolution[0]),\r\n          exerciseId: newExercise.id\r\n        },\r\n        {\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        const { solutionText, mark, reliability } = res.data;\r\n        const objSolution = JSON.parse(solutionText);\r\n\r\n        dispatch({\r\n          type: 'SAVE_EXERCISE_SUCCESS',\r\n          newExercise: {\r\n            response: objSolution.map(item => {\r\n              return { tag: item };\r\n            }),\r\n            mark,\r\n            reliability\r\n          }\r\n        });\r\n      })\r\n      .catch(() => {\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const saveExerciseSolution = newExercise => {\r\n  return dispatch => {\r\n    dispatch(innerLoaderOn());\r\n    const { id } = store.getState().auth.user;\r\n    // prelevo dal response la soluzione della punteggiatuera\r\n\r\n    axios\r\n      .post(\r\n        'http://localhost:8081/exercises/insert-exercise',\r\n        {\r\n          assignedUsersIds: store\r\n            .getState()\r\n            .class.studentsList.filter(student => student.check)\r\n            .map(student => student.id),\r\n          phraseText: newExercise.sentenceString,\r\n          mainSolution: JSON.stringify(newExercise.codeSolution[0]),\r\n          alternativeSolution: newExercise.alternativeSolution\r\n            ? JSON.stringify(newExercise.codeSolution[1])\r\n            : '',\r\n          visibility: !newExercise.privateExercise,\r\n          visibilityDev: !newExercise.privateExerciseDev,\r\n          author: id,\r\n          date: new Date().getTime(),\r\n          language: 'it'\r\n        },\r\n        {\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        _toastSuccess(\r\n          _translator('gen_insertDone', store.getState().auth.user.language)\r\n        );\r\n\r\n        dispatch({ type: 'SAVE_EXERCISE_SUCCESS', newExercise });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const loadTodoExercises = _link => {\r\n  const link =\r\n    _link !== null && _link !== undefined\r\n      ? _link.href\r\n      : 'http://localhost:8081/exercises/todo';\r\n  return dispatch => {\r\n    dispatch(innerLoaderOn());\r\n    axios\r\n      .get(link, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        dispatch({ type: 'LOAD_TODO_SUCCESS', todo: res.data });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const loadDoneExercises = _link => {\r\n  let path = '';\r\n  if (store.getState().auth.user.role === 'ROLE_TEACHER') path = 'added';\r\n  else path = 'done';\r\n  const link =\r\n    _link !== null && _link !== undefined\r\n      ? _link.href\r\n      : `http://localhost:8081/exercises/${path}`;\r\n  return dispatch => {\r\n    dispatch(innerLoaderOn());\r\n    axios\r\n      .get(link, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        dispatch({ type: 'LOAD_DONE_SUCCESS', todo: res.data });\r\n        dispatch(innerLoaderOff);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        dispatch(innerLoaderOff);\r\n        dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const loadPublicExercises = ({ _link, onlyFavourite }) => {\r\n  const defaultLink = onlyFavourite\r\n    ? 'http://localhost:8081/exercises/favourite-public'\r\n    : 'http://localhost:8081/exercises/public';\r\n  const link = _link !== null && _link !== undefined ? _link.href : defaultLink;\r\n  return dispatch => {\r\n    dispatch(innerLoaderOn());\r\n    axios\r\n      .get(link, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        dispatch({ type: 'LOAD_PUBLIC_SUCCESS', public: res.data });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getAutomaticSolution = sentenceString => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\r\n        'http://localhost:8081/exercises/automatic-solution',\r\n        {\r\n          text: sentenceString.trim()\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        dispatch(\r\n          updateNewExerciseState({\r\n            response: JSON.parse(res.data.solutionText).sentences[0].tokens,\r\n            language: store.getState().exercise.newExercise.languageSelected\r\n            // .filter(token => token.tag.charAt(0) !== 'F')\r\n          })\r\n        );\r\n        dispatch(innerLoaderOff());\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getExerciseDetails = exerciseId => {\r\n  return dispatch => {\r\n    dispatch(innerLoaderOn());\r\n    axios\r\n      .get(`http://localhost:8081/exercises/${exerciseId}`, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        dispatch({ type: 'EXERCISE_DETAILS', exercise: res.data });\r\n        dispatch(innerLoaderOff());\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const initExerciseDetails = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'INIT_EXERCISE_DETAILS' });\r\n  };\r\n};\r\n\r\nexport const changePublicExerciseFilter = onlyFavourite => {\r\n  return dispatch => {\r\n    dispatch(\r\n      loadPublicExercises({\r\n        onlyFavourite\r\n      })\r\n    );\r\n    dispatch({ type: 'CHANGE_PUBLIC_EXERCISE_FILTER' });\r\n  };\r\n};\r\n\r\nexport const onDeleteExercise = exerciseId => {\r\n  return dispatch => {\r\n    dispatch(innerLoaderOn());\r\n    axios\r\n      .delete(`http://localhost:8081/exercises/${exerciseId}`, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        dispatch(loadDoneExercises());\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        );\r\n        return dispatch({ type: '' });\r\n      });\r\n  };\r\n};\r\n\r\n/* {\r\n  \"assignedUsersIds\": [\r\n    \"demoData\"\r\n  ],\r\n  \"phraseText\": \"demoData\",\r\n  \"mainSolution\": \"demoData\",\r\n  \"alternativeSolution\": \"demoData\",\r\n  \"visibility\": true,\r\n  \"author\": \"demoData\",\r\n  \"date\": 1,\r\n  \"language\": \"demoData\"\r\n  } */\r\n","import axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\nimport store from '../store/index';\r\nimport _translator from '../helpers/Translator';\r\nimport { _toastSuccess, _toastError } from '../helpers/Utils';\r\n\r\nexport const initAdmin = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'INIT_STATE' });\r\n  };\r\n};\r\n\r\nexport const updateFilter = filter => {\r\n  return dispatch => {\r\n    console.log('filter');\r\n    console.log(filter);\r\n    dispatch({ type: 'UPDATE_FILTER', filter });\r\n  };\r\n};\r\n\r\nexport const fetchDeveloperList = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get('http://localhost:8081/users/admin/get-all-disabled', {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log('PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP');\r\n        console.log(res);\r\n        dispatch({ type: 'UPDATE_DEV_LIST', payload: res.data });\r\n        console.log('');\r\n        console.log(res);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsersList = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get('http://localhost:8081/users/admin/get-all-user', {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log('PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP');\r\n        console.log(res);\r\n        dispatch({ type: 'UPDATE_USER_LIST', payload: res.data });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteUser = ({ usernameOrId }) => {\r\n  return dispatch => {\r\n    axios\r\n      .delete(`http://localhost:8081/admin/delete-user/${usernameOrId}`, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        dispatch({ type: 'USER_DELETE_SUCCES', payload: { usernameOrId } });\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n};\r\n\r\nexport const activateUser = ({ usernameOrId }) => {\r\n  return dispatch => {\r\n    axios\r\n      .put(\r\n        `http://localhost:8081/users/admin/activate-user/${usernameOrId}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        dispatch({ type: 'DEV_APPROVE_SUCCES', payload: { usernameOrId } });\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n};\r\n\r\nexport const downlaodAll = () => {\r\n  const { filter } = store.getState().admin;\r\n  if (filter.openFilters) {\r\n    const getTime = dateString => {\r\n      const b = dateString.split(/\\D/);\r\n      if (b.length !== 3) return null;\r\n      return new Date(b[0], b[1], b[2]).getTime();\r\n    };\r\n\r\n    return () => {\r\n      axios\r\n        .post(\r\n          `http://localhost:8081/phrases/download`,\r\n          {\r\n            languages: ['it'],\r\n            startDate: getTime(filter.dateMin),\r\n            endDate: getTime(filter.dateMax),\r\n            minReliability: Number(filter.reliability)\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: store.getState().auth.token\r\n            }\r\n          }\r\n        )\r\n        .then(res => {\r\n          _toastSuccess(\r\n            _translator(\r\n              'developer_downloadind',\r\n              store.getState().auth.user.language\r\n            )\r\n          );\r\n          const blob = new Blob([JSON.stringify(res.data)], {\r\n            type: 'text/plain;charset=utf-8'\r\n          });\r\n          saveAs(blob, 'PhrasesList.json');\r\n        })\r\n        .catch(() =>\r\n          _toastError(\r\n            _translator('gen_error', store.getState().auth.user.language)\r\n          )\r\n        );\r\n    };\r\n  }\r\n  return () => {\r\n    axios\r\n      .get(`http://localhost:8081/phrases/downloadAll`, {\r\n        headers: {\r\n          Authorization: store.getState().auth.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        _toastSuccess(\r\n          _translator(\r\n            'developer_downloadind',\r\n            store.getState().auth.user.language\r\n          )\r\n        );\r\n        const blob = new Blob([JSON.stringify(res.data)], {\r\n          type: 'text/plain;charset=utf-8'\r\n        });\r\n        saveAs(blob, 'PhrasesList.json');\r\n      })\r\n      .catch(() =>\r\n        _toastError(\r\n          _translator('gen_error', store.getState().auth.user.language)\r\n        )\r\n      );\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport store from '../store/index';\r\nimport _translator from '../helpers/Translator';\r\nimport { _toastSuccess, _toastError } from '../helpers/Utils';\r\nimport { initClass } from './ClassManagementActions';\r\nimport { initStateExercise } from './ExerciseActions';\r\nimport { initAdmin } from './AdminActions';\r\n\r\nexport const initAuthStore = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'INIT_AUTH_STORE' });\r\n  };\r\n};\r\n\r\nexport const loaderOn = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADER_ON' });\r\n  };\r\n};\r\n\r\nexport const loaderOff = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADER_OFF' });\r\n  };\r\n};\r\n\r\nexport const displayError = error => {\r\n  return dispatch => {\r\n    dispatch({ type: 'DISPLAY_ERROR', error });\r\n  };\r\n};\r\n\r\nexport const changeForgot = data => {\r\n  return dispatch => {\r\n    dispatch({ type: 'CHANGE_FORGOT_DATA', data });\r\n  };\r\n};\r\n\r\nexport const changeSignIn = data => {\r\n  store.dispatch({ type: 'CHANGE_SIGNIN_DATA', data });\r\n};\r\n\r\nexport const changeSignUp = data => {\r\n  store.dispatch({ type: 'CHANGE_SIGNUP_DATA', data });\r\n};\r\n\r\nexport const changePassword = ({ requestId, password, passwordConfirm }) => {\r\n  return dispatch => {\r\n    axios\r\n      .post('http://localhost:8081/password/change', {\r\n        requestId,\r\n        password,\r\n        passwordConfirm\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'PASSWORD_CHANGED' });\r\n        _toastSuccess(_translator('gen_opSuccess'));\r\n      })\r\n      .catch(() => {\r\n        dispatch(loaderOff());\r\n        _toastError(_translator('gen_error'));\r\n      });\r\n  };\r\n};\r\nexport const sendRequest = data => {\r\n  console.log(': data', data);\r\n  return dispatch => {\r\n    axios\r\n      .post('http://localhost:8081/password/forgot', {\r\n        username: data.username\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'REQUEST_SENT' });\r\n        _toastSuccess(_translator('gen_opSuccess'));\r\n      })\r\n      .catch(() => {\r\n        dispatch(loaderOff());\r\n        _toastError(_translator('gen_error'));\r\n      });\r\n  };\r\n};\r\n\r\nexport const signIn = credentials => {\r\n  return dispatch => {\r\n    axios\r\n      .post('http://localhost:8081/login', {\r\n        username: credentials.username,\r\n        password: credentials.password\r\n      })\r\n      .then(res => {\r\n        if (res) {\r\n          localStorage.setItem(\r\n            'token',\r\n            JSON.stringify(res.headers.authorization)\r\n          );\r\n        }\r\n        const userInfo = { user: res.data, token: res.headers.authorization };\r\n        _toastSuccess(_translator('gen_welcome', res.data.language));\r\n        dispatch({ type: 'LOGIN_SUCCESS', userInfo });\r\n      })\r\n      .catch(() => {\r\n        _toastError(_translator('login_error', 'it'));\r\n        dispatch({ type: 'LOGIN_ERROR' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  localStorage.removeItem('user');\r\n  localStorage.removeItem('token');\r\n  return dispatch => {\r\n    dispatch(initAdmin());\r\n    dispatch(initStateExercise());\r\n    dispatch(initClass());\r\n    dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n  };\r\n};\r\n\r\nexport const activeAccount = signUpRequestId => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'ACTIVATION',\r\n      payload: {\r\n        message: [_translator('activation_progress_line1')],\r\n        inProgress: true\r\n      }\r\n    });\r\n    dispatch(loaderOn());\r\n    axios\r\n      .get(`http://localhost:8081/sign-up/activate/${signUpRequestId}`)\r\n      .then(res => {\r\n        _toastSuccess('attivazione avvenuta con successo');\r\n        dispatch({\r\n          type: 'ACTIVATION',\r\n          payload: {\r\n            message: [\r\n              _translator('activation_success_line1'),\r\n              _translator('activation_success_line2')\r\n            ],\r\n            inProgress: false\r\n          }\r\n        });\r\n        dispatch(loaderOff());\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: 'ACTIVATION',\r\n          payload: {\r\n            message: [\r\n              _translator('activation_err_line1'),\r\n              _translator('activation_err_line2')\r\n            ],\r\n            inProgress: false\r\n          }\r\n        });\r\n        dispatch(loaderOff());\r\n        _toastError('Attivazione fallita');\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return dispatch => {\r\n    delete newUser.password_confirm;\r\n    axios\r\n      .post('http://localhost:8081/sign-up', newUser)\r\n      .then(res => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n        _toastError(_translator('signUp_error', 'it'));\r\n        dispatch({ type: 'SIGNUP_ERROR' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateUserInfo = user => {\r\n  return dispatch => {\r\n    dispatch(loaderOn());\r\n    axios\r\n      .put(\r\n        'http://localhost:8081/users/modify/',\r\n        {\r\n          ...user\r\n        },\r\n        {\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        }\r\n      )\r\n      .then(res => {\r\n        const userInfo = { user: res.data, token: store.getState().auth.token };\r\n\r\n        if (userInfo.user.username !== user.username) store.dispatch(signOut());\r\n        else dispatch({ type: 'LOGIN_SUCCESS', userInfo });\r\n      })\r\n      .catch(err => console.warn(err));\r\n  };\r\n};\r\n\r\nexport const initializeAuth = () => {\r\n  return dispatch => {\r\n    if (store.getState().auth.token !== null) {\r\n      axios\r\n        .get('http://localhost:8081/users/get-info', {\r\n          headers: {\r\n            Authorization: store.getState().auth.token\r\n          }\r\n        })\r\n        .then(res => {\r\n          // _toastSuccess(_translator('gen_welcome', res.data.language));\r\n          dispatch({ type: 'LOAD_AUTH', user: res.data });\r\n        })\r\n        .catch(error => {\r\n          dispatch(signOut());\r\n          console.error(error);\r\n        });\r\n    } else {\r\n      dispatch(signOut());\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../actions/AuthActions';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nconst SignedInLinks = props => {\r\n  const { auth, signOut } = props;\r\n  const { user } = auth;\r\n  const { language } = user;\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"app-header-right\">\r\n        <div className=\"header-btn-lg pr-0\">\r\n          <div className=\"widget-content p-0\">\r\n            <div className=\"widget-content-wrapper\">\r\n              <div className=\"widget-content-left\">\r\n                <ul className=\"header-menu nav\">\r\n                  <li className=\"nav-item\">\r\n                    <NavLink to=\"/account\" className=\"nav-link\">\r\n                      {_translator('gen_account', language)}\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"btn-group nav-item\">\r\n                    <NavLink\r\n                      to=\"/signin\"\r\n                      onClick={signOut}\r\n                      tabIndex=\"0\"\r\n                      className=\"dropdown-item\"\r\n                    >\r\n                      {_translator('gen_logout', language)}\r\n                    </NavLink>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              {/** <div className=\"widget-content-left\">\r\n                <div className=\"btn-group\">\r\n                  <button\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                    className=\"p-0 btn  rounded-circle btn-initial bg-blue-template text-white\"\r\n                    type=\"button\"\r\n                  >\r\n                    { <img\r\n                      width=\"42\"\r\n                      className=\"rounded-circle\"\r\n                      src=\"assets/images/avatars/1.jpg\"\r\n                      alt=\"\"\r\n                    /> }\r\n                    <span className=\"h4\">{profile.initials}</span>\r\n                  </button>\r\n                  <div\r\n                    tabIndex=\"-1\"\r\n                    role=\"menu\"\r\n                    aria-hidden=\"true\"\r\n                    className=\"dropdown-menu dropdown-menu-right\"\r\n                  >\r\n                    <button\r\n                      type=\"button\"\r\n                      tabIndex=\"0\"\r\n                      className=\"dropdown-item\"\r\n                    >\r\n                      Account\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      tabIndex=\"0\"\r\n                      className=\"dropdown-item\"\r\n                    >\r\n                      Impostazioni\r\n                    </button>\r\n                    <NavLink\r\n                      to=\"/signin\"\r\n                      onClick={signOutDispatch}\r\n                      tabIndex=\"0\"\r\n                      className=\"dropdown-item\"\r\n                    >\r\n                      Esci\r\n                    </NavLink>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n              <div className=\"widget-content-left  ml-3 header-user-info\">\r\n                <div className=\"widget-heading\">\r\n                  {auth.user.firstName} {auth.user.lastName}\r\n                </div>\r\n              </div>\r\n              <div className=\"widget-content-right header-user-info ml-3\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nclass SignedOutLinks extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"app-header-right\">\r\n          <div className=\"header-btn-lg pr-0\">\r\n            <div className=\"widget-content p-0\">\r\n              <div className=\"widget-content-wrapper\">\r\n                <div className=\"widget-content-left\">\r\n                  <ul className=\"header-menu nav\">\r\n                    <li className=\"nav-item\">\r\n                      <NavLink to=\"/signup\" className=\"nav-link\">\r\n                        <i className=\"material-icons text-info\">person_add</i>\r\n                        {_translator('gen_signup')}\r\n                      </NavLink>\r\n                    </li>\r\n                    <li className=\"btn-group nav-item\">\r\n                      <NavLink to=\"/signin\" className=\"nav-link\">\r\n                        <i className=\"material-icons text-primary\">person</i>\r\n                        {_translator('gen_signin')}\r\n                      </NavLink>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"widget-content-right header-user-info ml-3\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignedOutLinks;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SignedInLinks from \"../../components/SignedInLinks\";\r\nimport SignedOutLinks from \"../../components/SignedOutLinks\";\r\n\r\nclass Navbar extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    const links = auth.user ? (\r\n      <SignedInLinks auth={auth} />\r\n    ) : (\r\n      <SignedOutLinks />\r\n    );\r\n\r\n    return (\r\n      <div className=\"app-header header-shadow\">\r\n        <div className=\"app-header__logo\">\r\n          <div className=\"logo-src\" />\r\n          <div className=\"header__pane ml-auto\">\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"hamburger close-sidebar-btn hamburger--elastic is-active\"\r\n                data-class=\"closed-sidebar\"\r\n              >\r\n                <span className=\"hamburger-box\">\r\n                  <span className=\"hamburger-inner\" />\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"app-header__mobile-menu\">\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"hamburger hamburger--elastic mobile-toggle-nav\"\r\n            >\r\n              <span className=\"hamburger-box\">\r\n                <span className=\"hamburger-inner\" />\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"app-header__menu\">\r\n          <span>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav\"\r\n            >\r\n              <span className=\"btn-icon-wrapper\">\r\n                <i className=\"material-icons\">person_outline</i>\r\n              </span>\r\n            </button>\r\n          </span>\r\n        </div>\r\n        <div className=\"app-header__content\">{links}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nclass SidebarElementStudent extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { language } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <li>\r\n          <a href=\"#root\">\r\n            <i className=\"metismenu-icon pe-7s-pen\" />\r\n            {_translator('sidebarElementStudent_exercise', language)}\r\n            <i className=\"metismenu-state-icon pe-7s-angle-down caret-left\" />\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/exercise\" activeClassName=\"mm-active\">\r\n                {_translator('sidebarElementStudent_freeExercise', language)}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/homework\" activeClassName=\"mm-active\">\r\n                {_translator('sidebarElementStudent_exercises', language)}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/doneHomework\" activeClassName=\"mm-active\">\r\n                {_translator('sidebarElementStudent_doneExercises', language)}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/publicExercises\" activeClassName=\"mm-active\">\r\n                {_translator('sidebarElementStudent_publicExercises', language)}\r\n              </NavLink>\r\n            </li>\r\n            {/* <li>\r\n              <NavLink to=\"/grades\" activeClassName=\"mm-active\">\r\n                {_translator('sidebarElementStudent_marks', language)}\r\n              </NavLink>\r\n            </li> */}\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/favorite-teachers\"\r\n            className=\"nav-link\"\r\n            activeClassName=\"mm-active\"\r\n          >\r\n            <i className=\"metismenu-icon pe-7s-star\" />\r\n            {_translator('sidebarElementStudent_favoriteTeachers', language)}\r\n          </NavLink>\r\n        </li>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarElementStudent;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nclass SidebarElementTeacher extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { language } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <li>\r\n          <a href=\"#root\">\r\n            <i className=\"metismenu-icon pe-7s-car\" />\r\n            {_translator('sidebarElementStudent_exercise', language)}\r\n            <i className=\"metismenu-state-icon pe-7s-angle-down caret-left\" />\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/insert-exercise\" activeClassName=\"mm-active\">\r\n                {_translator('sidebarElementTeacher_insertExercise', language)}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/assignedHomework\" activeClassName=\"mm-active\">\r\n                {_translator('sidebarElementTeacher_exercises', language)}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/class\" activeClassName=\"mm-active\">\r\n                {_translator('sidebarElementTeacher_class', language)}\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidebarElementTeacher;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nclass SidebarElementAdministrator extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { language, admin } = this.props;\r\n    const { devList } = admin;\r\n    console.log('AAAAAAAAAAADMINNNNNNNN');\r\n    console.log(admin);\r\n    return (\r\n      <React.Fragment>\r\n        <li>\r\n          <NavLink\r\n            to=\"/developers-management\"\r\n            className=\"nav-link\"\r\n            activeClassName=\"mm-active\"\r\n          >\r\n            <i className=\"metismenu-icon pe-7s-plugin\" />\r\n            {_translator('SidebarElementAdministrator_devs', language)}\r\n            {'  '}\r\n            {devList && devList.length > 0 && (\r\n              <span className=\"badge badge-pill badge-warning\">\r\n                {devList.length}\r\n              </span>\r\n            )}\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/users-management\"\r\n            className=\"nav-link\"\r\n            activeClassName=\"mm-active\"\r\n          >\r\n            <i className=\"metismenu-icon pe-7s-users\" />\r\n            {_translator('gen_adminUsers', language)}\r\n          </NavLink>\r\n        </li>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default SidebarElementAdministrator;\r\n","import React, { Component } from 'react';\r\n\r\nclass SidebarElementDeveloper extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return <React.Fragment />;\r\n  }\r\n}\r\nexport default SidebarElementDeveloper;\r\n","import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport _translator from '../../helpers/Translator';\r\nimport SidebarElementStudent from './SidebarElementStudent';\r\nimport SidebarElementTeacher from './SidebarElementTeacher';\r\nimport SidebarElementAdministrator from './SidebarElementAdministrator';\r\nimport SidebarElementDeveloper from './SidebarElementDeveloper';\r\n\r\nclass Sidebar extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { auth, admin } = this.props;\r\n    const { user } = auth;\r\n    const { role, language } = user;\r\n    if (!(auth && auth.user)) return null;\r\n    let roleSpecificNav = null;\r\n\r\n    if (role === 'ROLE_STUDENT') {\r\n      roleSpecificNav = <SidebarElementStudent language={language} />;\r\n    } else if (role === 'ROLE_ADMIN') {\r\n      roleSpecificNav = (\r\n        <SidebarElementAdministrator language={language} admin={admin} />\r\n      );\r\n    } else if (role === 'ROLE_TEACHER') {\r\n      roleSpecificNav = <SidebarElementTeacher language={language} />;\r\n    } else if (role === 'ROLE_DEVELOPER') {\r\n      roleSpecificNav = <SidebarElementDeveloper language={language} />;\r\n    }\r\n    return (\r\n      <div className=\"scrollbar-sidebar\">\r\n        <div className=\"app-sidebar__inner\">\r\n          <ul className=\"vertical-nav-menu\">\r\n            <li className=\"app-sidebar__heading\">\r\n              {_translator('gen_dashboard', language)}\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/dashboard\"\r\n                className=\"nav-link\"\r\n                activeClassName=\"mm-active\"\r\n              >\r\n                <i className=\"metismenu-icon pe-7s-user\" />\r\n                {_translator('gen_userDashboard', language)}\r\n              </NavLink>\r\n            </li>\r\n            {roleSpecificNav}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _translator from '../../../helpers/Translator';\r\nimport {\r\n  loadDoneExercises,\r\n  loadTodoExercises,\r\n  loadPublicExercises\r\n} from '../../../actions/ExerciseActions';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      loadDoneExercisesDispatch,\r\n      loadTodoExercisesDispatch,\r\n      loadPublicExercisesDispatch,\r\n      doneExercises,\r\n      todoExercises,\r\n      publicExercises\r\n    } = props;\r\n    if (!doneExercises.exercises) loadDoneExercisesDispatch();\r\n    if (!todoExercises.exercises) loadTodoExercisesDispatch();\r\n    if (!publicExercises.exercises) loadPublicExercisesDispatch();\r\n  }\r\n\r\n  render() {\r\n    const { user, doneExercises, todoExercises, publicExercises } = this.props;\r\n    const { firstName, language } = user;\r\n    const { exercises } = doneExercises;\r\n    const exercisesToDo = todoExercises.exercises;\r\n    const publics = publicExercises.exercises;\r\n\r\n    const numberOfExercise = exercises ? exercises.length : ' ';\r\n    const doneCard = (\r\n      <div className=\"col-md-6 col-xl-4\">\r\n        <div className=\"card mb-3 widget-content bg-midnight-bloom\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('dashboard_done', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('dashboard_numDone', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numberOfExercise}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const numberOfToDo = exercisesToDo ? exercisesToDo.length : ' ';\r\n    const toDoCard = (\r\n      <div className=\"col-md-6 col-xl-4\">\r\n        <div className=\"card mb-3 widget-content bg-arielle-smile\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('dashboard_toDo', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('dashboard_numToDo', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numberOfToDo}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const numberOfPublics = publics ? publics.length : 0;\r\n    const publicExCard = (\r\n      <div className=\"col-md-6 col-xl-4\">\r\n        <div className=\"card mb-3 widget-content bg-happy-green\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('dashboard_public', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('dashboard_numPublic', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numberOfPublics}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const percent =\r\n      (numberOfExercise / (numberOfToDo + numberOfExercise)) * 100;\r\n    const percentToShow = Number.isNaN(percent) ? 0 : percent.toFixed(2);\r\n    const donePercentage = (\r\n      <div className=\"col-md-8\">\r\n        <div className=\"card mb-3 widget-content\">\r\n          <div className=\"widget-content-outer\">\r\n            <div className=\"widget-content-wrapper\">\r\n              <div className=\"widget-content-left\">\r\n                <div className=\"widget-heading\">\r\n                  {_translator('dashboard_donePercentTitle', language)}\r\n                </div>\r\n                <div className=\"widget-subheading\">\r\n                  {_translator('dashboard_donePercent', language)}\r\n                </div>\r\n              </div>\r\n              <div className=\"widget-content-right\">\r\n                <div className=\"widget-numbers text-success\">\r\n                  {percentToShow}%\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-progress-wrapper\">\r\n              <div className=\"progress-bar-xs progress\">\r\n                <div\r\n                  className=\"progress-bar bg-primary\"\r\n                  role=\"progressbar\"\r\n                  aria-valuenow={percentToShow}\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                  style={{ width: `${percentToShow}%` }}\r\n                />\r\n              </div>\r\n              <div className=\"progress-sub-label\">\r\n                <div className=\"sub-label-right\">100%</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"py-5 text-center\">\r\n            <h2>{_translator('gen_userDashboard', language)}</h2>\r\n\r\n            <p className=\"lead\">\r\n              {_translator('dashboard_hiUser', language)}\r\n              {firstName}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          {doneCard}\r\n          {toDoCard}\r\n          {publicExCard}\r\n        </div>\r\n        <div className=\"row justify-content-center pt-5\">{donePercentage}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.auth.user,\r\n    doneExercises: store.exercise.doneExercises,\r\n    todoExercises: store.exercise.todoExercises,\r\n    publicExercises: store.exercise.publicExercises\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadDoneExercisesDispatch: link => dispatch(loadDoneExercises(link)),\r\n    loadTodoExercisesDispatch: link => dispatch(loadTodoExercises(link)),\r\n    loadPublicExercisesDispatch: link =>\r\n      dispatch(loadPublicExercises({ _link: link }))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _translator from '../../../helpers/Translator';\r\nimport { loadDoneExercises } from '../../../actions/ExerciseActions';\r\nimport {\r\n  loadClassList,\r\n  getAllStudents\r\n} from '../../../actions/ClassManagementActions';\r\n\r\nclass TeacherDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      loadDoneExercisesDispatch,\r\n      doneExercises,\r\n      _class,\r\n      loadClassListDispatch,\r\n      getAllStudentsDispatch\r\n    } = props;\r\n    if (!doneExercises.exercises) loadDoneExercisesDispatch();\r\n    if (_class.studentsList < 1) {\r\n      getAllStudentsDispatch();\r\n      loadClassListDispatch();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, doneExercises, _class } = this.props;\r\n    const { firstName, language } = user;\r\n    const { page } = doneExercises;\r\n\r\n    const numberOfExercise = page ? page.totalElements : ' ';\r\n    const insertedExercise = (\r\n      <div className=\"col-md-6 col-xl-4\">\r\n        <div className=\"card mb-3 widget-content bg-midnight-bloom\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('teacherDashboard_insEx', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('teacherDashboard_numInsEx', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numberOfExercise}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const numberOfClasses =\r\n      _class.studentsList.length > 0 ? _class.classList.length : ' ';\r\n    const classes = (\r\n      <div className=\"col-md-6 col-xl-4\">\r\n        <div className=\"card mb-3 widget-content bg-arielle-smile\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('teacherDashboard_class', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('teacherDashboard_numClass', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numberOfClasses}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const numberOfStudents = _class.studentsList.length;\r\n    const students = (\r\n      <div className=\"col-md-6 col-xl-4\">\r\n        <div className=\"card mb-3 widget-content bg-happy-green\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('teacherDashboard_students', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('teacherDashboard_numStudents', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numberOfStudents}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"py-5 text-center\">\r\n            <h2>{_translator('gen_userDashboard', language)}</h2>\r\n            <p className=\"lead\">\r\n              {_translator('dashboard_hiUser', language)}\r\n              {firstName}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          {insertedExercise}\r\n          {classes}\r\n          {students}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.auth.user,\r\n    doneExercises: store.exercise.doneExercises,\r\n    _class: store.class\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadDoneExercisesDispatch: link => dispatch(loadDoneExercises(link)),\r\n    loadClassListDispatch: () => dispatch(loadClassList()),\r\n    getAllStudentsDispatch: () => dispatch(getAllStudents())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TeacherDashboard);\r\n","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addMainJs();\r\n  }\r\n\r\n  /**\r\n   * This function adds a script tag to the end of the body tag\r\n   */\r\n  addMainJs = () => {\r\n    const head = document.getElementsByTagName('body')[0];\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = '/main.js';\r\n    script.id = 'mainJs';\r\n    if (!document.getElementById('mainJs')) {\r\n      head.appendChild(script);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-wrapper-footer\">\r\n        <div className=\"app-footer\">\r\n          <div className=\"app-footer__inner\">\r\n            <div className=\"app-footer-left\">\r\n              <span>© 2019 SWEight</span>\r\n              {/* <ul className=\"nav\">\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/\" className=\"nav-link\">\r\n                    Footer Link 1\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/\" className=\"nav-link\">\r\n                    Footer Link 2\r\n                  </a>\r\n                </li>\r\n              </ul> */}\r\n            </div>\r\n            {/* <div className=\"app-footer-right\">\r\n              <ul className=\"nav\">\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/\" className=\"nav-link\">\r\n                    Footer Link 3\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/\" className=\"nav-link\">\r\n                    <div className=\"badge badge-success mr-1 ml-0\">\r\n                      <small>NEW</small>\r\n                    </div>\r\n                    Footer Link 4\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","class Validator {\r\n  static validEmail = (email, regMail) =>\r\n    email !== null && email !== '' && email.match(regMail);\r\n\r\n  static validDate = date => {\r\n    return (\r\n      date !== null && new Date(date).getTime() && new Date(date) < new Date()\r\n    );\r\n  };\r\n\r\n  static validSelect = (option, array) => {\r\n    return option && option !== '' && array.find(item => item === option);\r\n  };\r\n\r\n  static validPassword = (pwd, regPassword) =>\r\n    pwd !== null && pwd !== '' && pwd.match(regPassword);\r\n}\r\n\r\nexport default Validator;\r\n","export const UiLang = ['it', 'en'];\r\n\r\nexport const ExLang = ['it', 'en'];\r\n","class RegExpression {\r\n  static getRegEmail = () => {\r\n    return /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/;\r\n  };\r\n\r\n  static getRegPassword = () => {\r\n    return /^(?=.*[A-Z])(?=.*[a-z])[a-zA-Z0-9*]{6,16}$/;\r\n  };\r\n}\r\nexport default RegExpression;\r\n","import React from 'react';\r\n\r\nconst HelperMessage = ({ children }) => {\r\n  return (\r\n    <div className=\"row justify-content-md-center\">\r\n      <div className=\"col-sm-12 col-md-8 col-lg-8\">\r\n        <div className=\"main-card mb-3 card\">\r\n          <div className=\"card-body\">{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelperMessage;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  signUp,\r\n  loaderOn,\r\n  changeSignUp,\r\n  displayError,\r\n  initAuthStore\r\n} from '../../../actions/AuthActions';\r\nimport _translator from '../../../helpers/Translator';\r\nimport Validator from '../../../helpers/Validator';\r\nimport { ExLang } from '../../../constants/Languages';\r\nimport RegExpression from '../../../constants/RegExpression';\r\nimport HelperMessage from '../../components/HelperMessage';\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.initAuthStoreDispatch();\r\n    this.errorEmail = React.createRef();\r\n    this.errorPassword = React.createRef();\r\n    this.errorDate = React.createRef();\r\n  }\r\n\r\n  handleChange = e => {\r\n    changeSignUp({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { props } = this;\r\n    const { signUpDispatch, auth /* displayErrorDispatch */ } = props;\r\n    e.preventDefault();\r\n    const signUpData = auth.signUp;\r\n    let isValid = true;\r\n\r\n    // Email validation\r\n    if (\r\n      Validator.validEmail(signUpData.username, RegExpression.getRegEmail())\r\n    ) {\r\n      this.errorEmail.current.innerHTML = '';\r\n      isValid = !isValid ? isValid : true;\r\n    } else {\r\n      this.errorEmail.current.innerHTML = 'Email non valida';\r\n      isValid = false;\r\n    }\r\n\r\n    // Date validation\r\n    if (Validator.validDate(signUpData.dateOfBirth)) {\r\n      this.errorDate.current.innerHTML = '';\r\n      isValid = !isValid ? isValid : true;\r\n    } else {\r\n      this.errorDate.current.innerHTML = 'Data non valida';\r\n      isValid = false;\r\n    }\r\n\r\n    // Password validation\r\n    if (\r\n      Validator.validPassword(\r\n        signUpData.password,\r\n        RegExpression.getRegPassword()\r\n      )\r\n    ) {\r\n      this.errorPassword.current.innerHTML = '';\r\n      isValid = !isValid ? isValid : true;\r\n    } else {\r\n      this.errorPassword.current.innerHTML =\r\n        'La password non rispetta i requisiti minimi di sicurezza';\r\n      isValid = false;\r\n    }\r\n\r\n    // Validation\r\n    if (\r\n      isValid &&\r\n      Validator.validSelect(signUpData.role, [\r\n        'ROLE_STUDENT',\r\n        'ROLE_ADMIN',\r\n        'ROLE_TEACHER',\r\n        'ROLE_DEVELOPER'\r\n      ]) &&\r\n      Validator.validSelect(signUpData.language, ExLang)\r\n    ) {\r\n      if (!signUpData.password.localeCompare(signUpData.password_confirm)) {\r\n        this.errorPassword.current.innerHTML = '';\r\n        props.loaderOn();\r\n        signUpDispatch(auth.signUp);\r\n      } else {\r\n        this.errorPassword.current.innerHTML = 'Le due password non coincidono';\r\n      }\r\n      // }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    const signUpData = auth.signUp;\r\n\r\n    if (auth.signUpCompleted) {\r\n      return (\r\n        <HelperMessage>\r\n          <h5>{_translator('signUp_completed')}</h5>\r\n        </HelperMessage>\r\n      );\r\n    }\r\n    if (auth.user) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"row justify-content-md-center\">\r\n        <div className=\"col-sm-12 col-md-8 col-lg-8\">\r\n          <div className=\"main-card mb-3 card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{_translator('gen_signup')}</h5>\r\n\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"firstName\">\r\n                    {_translator('gen_firstName')}\r\n                  </label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    placeholder={_translator('gen_firstName')}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    value={signUpData.firstName}\r\n                  />\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"firstName\">\r\n                    {_translator('gen_lastName')}\r\n                  </label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    placeholder={_translator('gen_lastName')}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    value={signUpData.lastName}\r\n                  />\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"email\">{_translator('gen_email')}</label>\r\n                  <input\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    placeholder={_translator('gen_email')}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    value={signUpData.email}\r\n                    autoComplete=\"username\"\r\n                  />\r\n                  <small className=\"text-danger\" ref={this.errorEmail} />\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"dateOfBirth\">\r\n                    {_translator('gen_birthDate')}\r\n                  </label>\r\n                  <input\r\n                    name=\"dateOfBirth\"\r\n                    id=\"dateOfBirth\"\r\n                    placeholder={_translator('gen_birthDate')}\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <small className=\"text-danger\" ref={this.errorDate} />\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"role\">{_translator('gen_role')}</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"role\"\r\n                    id=\"role\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\">\r\n                      {_translator('signup_selectOption')}\r\n                    </option>\r\n                    <option value=\"ROLE_STUDENT\">\r\n                      {_translator('gen_student')}\r\n                    </option>\r\n                    {/* <option value=\"ROLE_ADMIN\">\r\n                      {_translator('gen_admin')}\r\n                    </option> */}\r\n                    <option value=\"ROLE_TEACHER\">\r\n                      {_translator('gen_teacher')}\r\n                    </option>\r\n                    <option value=\"ROLE_DEVELOPER\">\r\n                      {_translator('gen_developer')}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"language\">\r\n                    {_translator('gen_language')}\r\n                  </label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"language\"\r\n                    id=\"language\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\">\r\n                      {_translator('signup_selectOption')}\r\n                    </option>\r\n                    {ExLang.map(lang => (\r\n                      <option value={lang} key={`ALang_${lang}`}>\r\n                        {_translator(`gen_${lang}`)}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"password\">\r\n                    {_translator('gen_password')}\r\n                  </label>\r\n                  <input\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    minLength=\"6\"\r\n                    placeholder={_translator('gen_password')}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"new-password\"\r\n                    pattern=\"(?=.*[A-Z])(?=.*[a-z])[a-zA-Z0-9*].{6,16}\"\r\n                  />\r\n                  <small className=\"text-danger\" ref={this.errorPassword} />\r\n                  <small\r\n                    id=\"passwordHelpBlock\"\r\n                    className=\"form-text text-muted\"\r\n                  >\r\n                    {_translator('signup_hint')}\r\n                  </small>\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"password_confirm\">\r\n                    {_translator('gen_passwordConfirm')}\r\n                  </label>\r\n                  <input\r\n                    name=\"password_confirm\"\r\n                    id=\"password_confirm\"\r\n                    minLength=\"6\"\r\n                    placeholder={_translator('gen_passwordConfirm')}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    pattern=\"(?=.*[A-Z])(?=.*[a-z])[a-zA-Z0-9*].{6,16}\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"mt-2 btn btn-primary\">\r\n                  {_translator('gen_signup')}\r\n                </button>\r\n                <div>{auth.signupError ? <p>{auth.signupError}</p> : null}</div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUpDispatch: newUser => dispatch(signUp(newUser)),\r\n    loaderOn: () => dispatch(loaderOn()),\r\n    changeSignUp: () => dispatch(changeSignUp()),\r\n    displayErrorDispatch: error => dispatch(displayError(error)),\r\n    initAuthStoreDispatch: () => dispatch(initAuthStore())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  signIn,\r\n  loaderOn,\r\n  changeSignIn,\r\n  activeAccount\r\n} from '../../../actions/AuthActions';\r\nimport { initStateExercise } from '../../../actions/ExerciseActions';\r\nimport _translator from '../../../helpers/Translator';\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.match.params && props.match.params.activation) {\r\n      props.activeAccountDispatch(props.match.params.activation);\r\n    }\r\n    props.initStateExerciseDispatch();\r\n  }\r\n\r\n  handleChange = e => {\r\n    changeSignIn({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { props } = this;\r\n    e.preventDefault();\r\n    props.loaderOn();\r\n    props.signIn(props.signInData);\r\n  };\r\n\r\n  render() {\r\n    const { auth, signInData } = this.props;\r\n\r\n    if (auth && auth.user) return <Redirect to=\"/dashboard\" />;\r\n\r\n    return (\r\n      <div className=\"row justify-content-md-center\">\r\n        <div className=\"col-sm-12 col-md-6\">\r\n          <div className=\"main-card mb-3 card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{_translator('gen_signin')}</h5>\r\n\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"email\">{_translator('gen_email')}</label>\r\n                  <input\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    placeholder={_translator('gen_email')}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={signInData.email}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"username\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"password\">\r\n                    {_translator('gen_password')}\r\n                  </label>\r\n                  <input\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder={_translator('gen_password')}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <NavLink to=\"/forgot-password\">\r\n                    {_translator('signIn_forgotPassword')}\r\n                  </NavLink>\r\n                </div>\r\n                <button type=\"submit\" className=\"mt-2 btn btn-primary\">\r\n                  {_translator('gen_signin')}\r\n                </button>\r\n                <div className=\"\">\r\n                  {auth.signinError ? <p>{auth.signinError}</p> : null}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    signinError: store.auth.signinError,\r\n    auth: store.auth,\r\n    signInData: store.auth.signIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: credentials => dispatch(signIn(credentials)),\r\n    loaderOn: () => dispatch(loaderOn()),\r\n    changeSignIn: data => dispatch(changeSignIn(data)),\r\n    initStateExerciseDispatch: () => dispatch(initStateExercise()),\r\n    activeAccountDispatch: signUpRequestId =>\r\n      dispatch(activeAccount(signUpRequestId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import _translator from '../../helpers/Translator';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Error extends Component {\r\n  render() {\r\n    const { language } = this.props;\r\n    return (\r\n      <div className=\"app-main__inner \">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <h1>{_translator('gen_404Error', language)}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport _translator from '../../helpers/Translator';\r\nimport { removePunctuation } from '../../helpers/Utils';\r\n// import { ExLang } from '../../constants/Languages';\r\n\r\nclass InputSentence extends Component {\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    this.props.changeNewInputSentence({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { sentenceString } = this.props;\r\n    const cleanString = removePunctuation(sentenceString);\r\n    const { prepareExercise } = this.props;\r\n\r\n    prepareExercise(cleanString);\r\n  };\r\n\r\n  render() {\r\n    const { language, sentenceString /* exLanguage */ } = this.props;\r\n    return (\r\n      <div className=\"main-card mb-3 card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title \">\r\n            {_translator('inputSentence_insertSentence', language)}\r\n          </h5>\r\n\r\n          <form\r\n            onSubmit={this.handleSubmit}\r\n            className=\"needs-validation was-validated\"\r\n          >\r\n            <div className=\"input-group\">\r\n              {/*\r\n              <div className=\"input-group-prepend no-validated\">\r\n                <select\r\n                  name=\"language\"\r\n                  className=\"px-3\"\r\n                  id=\"languageSelected\"\r\n                  onChange={this.handleChange}\r\n                  value={exLanguage}\r\n                >\r\n                  {ExLang.map(lang => (\r\n                    <option key={`lang-${lang}`} value={lang}>\r\n                      {_translator(`gen_${lang}`, language)}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              */}\r\n              <input\r\n                id=\"sentenceString\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder={_translator(\r\n                  'inputSentence_insertSentence',\r\n                  language\r\n                )}\r\n                onChange={this.handleChange}\r\n                required\r\n                value={sentenceString}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-success\" type=\"submit\">\r\n                  {_translator('inputSentence_executeExercise', language)}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputSentence;\r\n","import _translator from './Translator';\r\n\r\n/**\r\n * @classdesc Iterator class for a LanguageStructure.\r\n *\r\n *\r\n * Levels explanation:\r\n * -1 =  Base level (adjective, verb, ecc)\r\n * > -1 = internal levels.\r\n *\r\n *\r\n */\r\n\r\nclass LanguageIterator {\r\n  /**\r\n   * Sole constructuro of this class\r\n   *\r\n   * @param {LanguageStructure} langStruct Language data structure on which the iterator works.\r\n   */\r\n  constructor(langStruct) {\r\n    this.langStruct = langStruct.gerarchy;\r\n    this.setBaseLevel();\r\n  }\r\n\r\n  /**\r\n   * Makes iterator return to the base of the language gerarchy.\r\n   */\r\n  setBaseLevel() {\r\n    this.level = -1;\r\n    this.category = null;\r\n    this.solution = [];\r\n    this.currentChoices = this.getBaseCategories();\r\n  }\r\n\r\n  getBaseCategories() {\r\n    return Object.values(this.langStruct).map(category => category.text);\r\n  }\r\n\r\n  getSolution() {\r\n    return this.solution;\r\n  }\r\n\r\n  getVerboseSolution(lang) {\r\n    return this.solution\r\n      .map(solutionItem => _translator(solutionItem.full, lang))\r\n      .join(' ');\r\n  }\r\n\r\n  getCodeSolution() {\r\n    return this.solution.map(solutionItem => solutionItem.short).join('');\r\n  }\r\n\r\n  /**\r\n   * Function to return the buttons to show in the main interface\r\n   *\r\n   * @return Array in which each string is the label of a language category button.\r\n   */\r\n  getCurrentButtonList() {\r\n    return this.currentChoices;\r\n  }\r\n\r\n  /**\r\n   * Makes iterator advance to the next level in the gerarchy.\r\n   *\r\n   * The iterator advances the to next level and stores the choice made by the user.\r\n   *\r\n   * @param {string} choice Choice made by the user on between the attribute options.\r\n   */\r\n  nextLevel(choice) {\r\n    if (this.level === -1) this.category = choice.full;\r\n    if (this.level < this.categoryLength()) {\r\n      this.level++;\r\n      this.solution.push(choice);\r\n      this.currentChoices = this.getCurrentChoices();\r\n    } else {\r\n      this.currentChoices = [];\r\n    }\r\n    if (!this.checkCondition()) this.nextLevel({ short: 0, full: '' });\r\n  }\r\n\r\n  getCurrentChoices() {\r\n    if (this.level < this.categoryLength())\r\n      return this.langStruct[this.category].attributes[this.level].choices;\r\n    return [];\r\n  }\r\n\r\n  categoryLength() {\r\n    return this.langStruct[this.category].attributes.length;\r\n  }\r\n\r\n  /**\r\n   * Makes iterator go back one choice.\r\n   *\r\n   * The iterator goes back by one choice and forgets the last solutions given by the user. If it is already at base level,\r\n   * it does nothing.\r\n   */\r\n  prevLevel() {\r\n    let lastSolution = this.solution.pop();\r\n    while (\r\n      JSON.stringify(lastSolution) === JSON.stringify({ short: 0, full: '' })\r\n    ) {\r\n      this.level--;\r\n      lastSolution = this.solution.pop();\r\n    }\r\n    this.solution.push(lastSolution);\r\n    if (this.level > -1) {\r\n      if (this.level === 0) {\r\n        this.setBaseLevel();\r\n      } else {\r\n        this.level--;\r\n        this.solution.pop();\r\n        this.currentChoices = this.getCurrentChoices();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCondition() {\r\n    if (this.level === this.categoryLength()) return true;\r\n    const categoryAttr = this.langStruct[this.category].attributes;\r\n    if (categoryAttr[this.level].condition === null) return true;\r\n    const { index, short } = categoryAttr[this.level].condition;\r\n\r\n    if (this.getSolution()[index].short === short) return true;\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * @classdesc Representation of the language structure of a certain language. An instance of this class is basically a wrapper around a Json language structure.\r\n */\r\nclass LanguageStructure {\r\n  /**\r\n   * Only constructor of this class.\r\n   *\r\n   * @param {file} json_source Source json file path for language tagging\r\n   */\r\n  constructor(jsonSource) {\r\n    this.gerarchy = jsonSource;\r\n  }\r\n\r\n  /**\r\n   * @return A LanguageIterator object to iterate in the LanguageStructure\r\n   */\r\n  getBaseIterator() {\r\n    return new LanguageIterator(this);\r\n  }\r\n}\r\n\r\nexport default LanguageStructure;\r\n","import _translator from './Translator';\r\n\r\nclass SolutionMapper {\r\n  translation = [];\r\n\r\n  constructor(solutionString, langStruct) {\r\n    const trad = [];\r\n    const arrayCode = solutionString.split('');\r\n    const langStructArray = Object.values(langStruct);\r\n\r\n    const primoLivello = langStructArray.find(\r\n      item => item.text.short === arrayCode[0]\r\n    );\r\n\r\n    trad.push(primoLivello.text);\r\n\r\n    for (let i = 0; i < primoLivello.attributes.length; i += 1) {\r\n      if (arrayCode[i + 1] !== '0') {\r\n        const element = primoLivello.attributes[i].choices.find(\r\n          choice => choice.short === arrayCode[i + 1]\r\n        );\r\n        trad.push(element);\r\n      } else {\r\n        trad.push({ short: 0, full: '' });\r\n      }\r\n    }\r\n    this.translation = trad;\r\n  }\r\n\r\n  getSolution() {\r\n    return this.translation;\r\n  }\r\n\r\n  getVerboseSolution(lang) {\r\n    return this.translation\r\n      .map(element => {\r\n        return _translator(element ? element.full : '', lang);\r\n      }) // ------------------------------------------------------------ DA CONTROLLARE\r\n      .join(' ');\r\n  }\r\n\r\n  getCodeSolution() {\r\n    return this.translation\r\n      .map(element => (element ? element.short : '')) // ------------------------------------------------------------ DA CONTROLLARE\r\n      .join('');\r\n  }\r\n}\r\n\r\nexport default SolutionMapper;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 } from 'node-uuid';\r\nimport _translator from '../../helpers/Translator';\r\nimport LanguageStructure from '../../helpers/LanguageIterator';\r\nimport SolutionMapper from '../../helpers/SolutionMapper';\r\nimport { updateWordState } from '../../actions/ExerciseActions';\r\n\r\nclass Word extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      gerarchy,\r\n      updateWordStateDispatch,\r\n      solutionTag,\r\n      indexSolution,\r\n      language\r\n      // exLanguage\r\n    } = props;\r\n    const languageIterator = new LanguageStructure(\r\n      gerarchy // [exLanguage]\r\n    ).getBaseIterator();\r\n\r\n    updateWordStateDispatch(\r\n      {\r\n        languageIterator,\r\n        buttons: languageIterator.getCurrentButtonList(),\r\n        solution:\r\n          solutionTag && props.initSolution && solutionTag.charAt(0) !== 'F'\r\n            ? new SolutionMapper(\r\n                solutionTag,\r\n                gerarchy // [exLanguage]\r\n              ).getVerboseSolution(language)\r\n            : '',\r\n        index: props.index,\r\n        showButton: props.showButton\r\n      },\r\n      indexSolution\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Generates the first set of buttons given by the user choice\r\n   *\r\n   * @param {*} item Selected item (level 0)\r\n   */\r\n\r\n  backOne = () => {\r\n    try {\r\n      const {\r\n        updateWordStateDispatch,\r\n        newExercise,\r\n        index,\r\n        indexSolution,\r\n        language\r\n      } = this.props;\r\n      const state = newExercise.userSolution[indexSolution][index];\r\n      const { languageIterator } = state;\r\n      languageIterator.prevLevel();\r\n\r\n      updateWordStateDispatch(\r\n        {\r\n          ...state,\r\n          languageIterator,\r\n          buttons: languageIterator.getCurrentButtonList(),\r\n          solution: languageIterator.getVerboseSolution(language)\r\n        },\r\n        indexSolution\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Genrates next list of buttons\r\n   *\r\n   * @param {*} item  Selected elementend (level 1+)\r\n   */\r\n  generateNext = button => {\r\n    try {\r\n      const {\r\n        updateWordStateDispatch,\r\n        newExercise,\r\n        index,\r\n        indexSolution,\r\n        language\r\n      } = this.props;\r\n      const state = newExercise.userSolution[indexSolution][index];\r\n      const { languageIterator } = state;\r\n      languageIterator.nextLevel(button);\r\n      updateWordStateDispatch(\r\n        {\r\n          ...state,\r\n          buttons: languageIterator.getCurrentButtonList(),\r\n          solution: languageIterator.getVerboseSolution(language),\r\n          languageIterator\r\n        },\r\n        indexSolution\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reset the word solution and buttons\r\n   */\r\n  reset = () => {\r\n    const {\r\n      updateWordStateDispatch,\r\n      newExercise,\r\n      index,\r\n      indexSolution,\r\n      language\r\n    } = this.props;\r\n    const state = newExercise.userSolution[indexSolution][index];\r\n    const { languageIterator } = state;\r\n    languageIterator.setBaseLevel();\r\n    updateWordStateDispatch(\r\n      {\r\n        ...state,\r\n        buttons: languageIterator.getCurrentButtonList(),\r\n        solution: languageIterator.getVerboseSolution(language),\r\n        languageIterator\r\n      },\r\n      indexSolution\r\n    );\r\n  };\r\n\r\n  edit = () => {\r\n    const {\r\n      updateWordStateDispatch,\r\n      newExercise,\r\n      index,\r\n      indexSolution\r\n    } = this.props;\r\n\r\n    const state = newExercise.userSolution[indexSolution][index];\r\n    updateWordStateDispatch(\r\n      {\r\n        ...state,\r\n        showButton: true\r\n      },\r\n      indexSolution\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      parola,\r\n      solutionTag,\r\n      showSolution,\r\n      gerarchy,\r\n      newExercise,\r\n      index,\r\n      initSolution,\r\n      indexSolution,\r\n      language\r\n      // exLanguage\r\n    } = this.props;\r\n\r\n    const state = newExercise.userSolution[indexSolution][index];\r\n    const { buttons, solution, showButton } = state;\r\n    const allowedPunctuation = /[,.?!\"'<>;:]/g;\r\n\r\n    if (parola.match(allowedPunctuation) !== null) {\r\n      return <React.Fragment />;\r\n    }\r\n    return (\r\n      <li\r\n        className=\"list-group-item\"\r\n        ref={liElement => {\r\n          this.liElement = liElement;\r\n        }}\r\n      >\r\n        <div>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row \">\r\n              <div className=\"pt-2  col-md-auto\">\r\n                {buttons && showButton && !showSolution && (\r\n                  <React.Fragment>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"border-0 btn btn-outline-danger btn-sm\"\r\n                      onClick={this.backOne}\r\n                      disabled={solution.length === 0}\r\n                    >\r\n                      <i className=\"fa fa-fw fa-undo\" />\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"border-0 btn btn-outline-danger btn-sm\"\r\n                      onClick={this.reset}\r\n                      disabled={solution.length === 0}\r\n                    >\r\n                      <i className=\"fa fa-fw fa-trash\" />\r\n                    </button>\r\n                  </React.Fragment>\r\n                )}\r\n                {buttons && !showButton && !showSolution && initSolution && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"border-0 btn btn-outline-danger btn-sm\"\r\n                    onClick={this.edit}\r\n                  >\r\n                    MODIFICA\r\n                  </button>\r\n                )}\r\n\r\n                <strong className=\"p-2 text-uppercase\">{parola}</strong>\r\n              </div>\r\n\r\n              {/** USER SOLUTION */}\r\n              <div className=\" col-md-auto text-uppercase shwo-tooltip\">\r\n                {solution && (\r\n                  <p title=\"La tua soluzione\" className=\"bg-light p-2 mb-2\">\r\n                    {solution\r\n                      .split(' ')\r\n                      .filter(s => s !== '')\r\n                      .map((word, index) => {\r\n                        let styleClass = 'p-2 ';\r\n                        if (showSolution && solutionTag) {\r\n                          console.log(': solutionTag', solutionTag);\r\n                          const wordSol = new SolutionMapper(\r\n                            solutionTag,\r\n                            gerarchy // [exLanguage]\r\n                          )\r\n                            .getVerboseSolution(language)\r\n                            .split(' ')\r\n                            .filter(s => s !== '')[index];\r\n                          if (word !== wordSol) styleClass = 'p-2 word-error';\r\n                          else styleClass = 'p-2 word-correct';\r\n                          console.log(\r\n                            ': word !== wordSol',\r\n                            word,\r\n                            ' !==',\r\n                            wordSol\r\n                          );\r\n                        }\r\n                        return (\r\n                          <span key={v4()} className={styleClass}>\r\n                            {word}\r\n                          </span>\r\n                        );\r\n                      })}\r\n                  </p>\r\n                )}\r\n\r\n                {/** SYSTEM/TEACHER SOLUTION */}\r\n                {showSolution && solutionTag && (\r\n                  <p\r\n                    title=\"La soluzione automatica\"\r\n                    className=\" text-warning my-2 p-2 text-uppercase\"\r\n                  >\r\n                    {new SolutionMapper(\r\n                      solutionTag,\r\n                      gerarchy // [exLanguage]\r\n                    )\r\n                      .getVerboseSolution(language)\r\n                      .split(' ')\r\n                      .filter(s => s !== '')\r\n                      .map(word => {\r\n                        return (\r\n                          <span key={v4()} className=\"p-2\">\r\n                            {word}\r\n                          </span>\r\n                        );\r\n                      })}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"row justify-content-end\">\r\n              <div className=\" col-md-9 col-12 text-warning text-uppercase\">\r\n                {showSolution === true && usefulFields}\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n\r\n        {buttons &&\r\n          showSolution === false &&\r\n          showButton &&\r\n          buttons.map((button, index) => {\r\n            return (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary m-1\"\r\n                key={`index${index}`}\r\n                onClick={() => this.generateNext(button)}\r\n              >\r\n                {_translator(button.full, language)}\r\n              </button>\r\n            );\r\n          })}\r\n      </li>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = store => {\r\n  return {\r\n    language: store.auth.user.language,\r\n    newExercise: store.exercise.newExercise\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateWordStateDispatch: (word, indexSolution) =>\r\n      dispatch(updateWordState(word, indexSolution))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Word);\r\n","const gerarchia = {\r\n  cat_adjective: {\r\n    text: { full: 'cat_adjective', short: 'A' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'O', full: 'choice_ordinal' },\r\n          { short: 'Q', full: 'choice_quali' },\r\n          { short: 'P', full: 'choice_poss' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_degree',\r\n        choices: [\r\n          { short: 'S', full: 'choice_super' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: { index: 1, short: 'Q' }\r\n      },\r\n      {\r\n        attrName: 'attr_gen',\r\n        choices: [\r\n          { short: 'F', full: 'choice_feminile' },\r\n          { short: 'M', full: 'choice_masculine' },\r\n          { short: 'C', full: 'choice_common' },\r\n          { short: 'N', full: 'choice_neuter' }\r\n        ],\r\n        condition: null\r\n      },\r\n\r\n      {\r\n        attrName: 'attr_num',\r\n        choices: [\r\n          { short: 'S', full: 'choice_singular' },\r\n          { short: 'P', full: 'choice_plural' },\r\n          { short: 'N', full: 'choice_invariable' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_possessorpers',\r\n        choices: [\r\n          { short: '1', full: 'choice_1pers' },\r\n          { short: '2', full: 'choice_2pers' },\r\n          { short: '3', full: 'choice_3pers' }\r\n        ],\r\n        condition: { index: 1, short: 'P' }\r\n      },\r\n      {\r\n        attrName: 'attr_possessornum',\r\n        choices: [\r\n          { short: 'S', full: 'choice_singular' },\r\n          { short: 'P', full: 'choice_plural' },\r\n          { short: 'N', full: 'choice_invariable' }\r\n        ],\r\n        condition: { index: 1, short: 'P' }\r\n      }\r\n    ]\r\n  },\r\n  cat_conjunction: {\r\n    text: { full: 'cat_conjunction', short: 'C' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'C', full: 'choice_coordinating' },\r\n          { short: 'S', full: 'choice_subordinating' }\r\n        ],\r\n        condition: null\r\n      }\r\n    ]\r\n  },\r\n  cat_determiner: {\r\n    text: { full: 'cat_determiner', short: 'D' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'A', full: 'choice_article' },\r\n          { short: 'D', full: 'choice_demonstrative' },\r\n          { short: 'E', full: 'choice_exclamative' },\r\n          { short: 'I', full: 'choice_indefinite' },\r\n          { short: 'T', full: 'choice_interrogative' },\r\n          { short: 'N', full: 'choice_numeral' },\r\n          { short: 'P', full: 'choice_possessive' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_person',\r\n        choices: [\r\n          { short: '1', full: 'choice_1pers' },\r\n          { short: '2', full: 'choice_2pers' },\r\n          { short: '3', full: 'choice_3pers' }\r\n        ],\r\n        condition: { index: 1, short: 'P' }\r\n      },\r\n      {\r\n        attrName: 'attr_gen',\r\n        choices: [\r\n          { short: 'F', full: 'choice_feminile' },\r\n          { short: 'M', full: 'choice_masculine' },\r\n          { short: 'C', full: 'choice_common' },\r\n          { short: 'N', full: 'choice_neuter' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_num',\r\n        choices: [\r\n          { short: 'S', full: 'choice_singular' },\r\n          { short: 'P', full: 'choice_plural' },\r\n          { short: 'N', full: 'choice_invariable' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_possessornum',\r\n        choices: [\r\n          { short: 'S', full: 'choice_singular' },\r\n          { short: 'P', full: 'choice_plural' }\r\n        ],\r\n        condition: { index: 1, short: 'P' }\r\n      }\r\n    ]\r\n  },\r\n  cat_noun: {\r\n    text: { full: 'cat_noun', short: 'N' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'C', full: 'choice_common' },\r\n          { short: 'P', full: 'choice_proper' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_gen',\r\n        choices: [\r\n          { short: 'F', full: 'choice_feminile' },\r\n          { short: 'M', full: 'choice_masculine' },\r\n          { short: 'C', full: 'choice_common' },\r\n          { short: 'N', full: 'choice_neuter' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'num',\r\n        choices: [\r\n          { short: 'S', full: 'choice_singular' },\r\n          { short: 'P', full: 'choice_plural' },\r\n          { short: 'N', full: 'choice_invariable' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_neclass',\r\n        choices: [\r\n          { short: 'S', full: 'choice_person' },\r\n          { short: 'G', full: 'choice_location' },\r\n          { short: 'O', full: 'choice_organization' },\r\n          { short: 'V', full: 'choice_other' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_nesubclass',\r\n        choices: [{ short: '0', full: 'choice_none' }], // se ho una sola scelta metto automaticamente 0\r\n        condition: { index: 1, short: 'void' } // farlocco\r\n      },\r\n      {\r\n        attrName: 'attr_degree',\r\n        choices: [\r\n          { short: 'A', full: 'choice_augmentative' },\r\n          { short: 'D', full: 'choice_diminutive' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      }\r\n    ]\r\n  },\r\n  cat_verb: {\r\n    text: { full: 'cat_verb', short: 'V' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'M', full: 'choice_main' },\r\n          { short: 'A', full: 'choice_auxiliary' },\r\n          { short: 'S', full: 'choice_semiauxiliary' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_mood',\r\n        choices: [\r\n          { short: 'I', full: 'choice_indicative' },\r\n          { short: 'S', full: 'choice_subjunctive' },\r\n          { short: 'M', full: 'choice_imperative' },\r\n          { short: 'P', full: 'choice_pastparticiple' },\r\n          { short: 'G', full: 'choice_gerund' },\r\n          { short: 'N', full: 'choice_infinitive' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_tense',\r\n        choices: [\r\n          { short: 'P', full: 'choice_present' },\r\n          { short: 'I', full: 'choice_imperfect' },\r\n          { short: 'F', full: 'choice_future' },\r\n          { short: 'P', full: 'choice_past' },\r\n          { short: 'C', full: 'choice_conditional' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_person',\r\n        choices: [\r\n          { short: '1', full: 'choice_1pers' },\r\n          { short: '2', full: 'choice_2pers' },\r\n          { short: '3', full: 'choice_3pers' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_num',\r\n        choices: [\r\n          { short: 'S', full: 'choice_singular' },\r\n          { short: 'P', full: 'choice_plural' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_gen',\r\n        choices: [\r\n          { short: 'F', full: 'choice_feminile' },\r\n          { short: 'M', full: 'choice_masculine' },\r\n          { short: 'C', full: 'choice_common' },\r\n          { short: 'N', full: 'choice_neuter' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      }\r\n    ]\r\n  },\r\n  cat_pronoun: {\r\n    text: { full: 'cat_pronoun', short: 'P' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'D', full: 'choice_demonstrative' },\r\n          { short: 'E', full: 'choice_exclamative' },\r\n          { short: 'I', full: 'choice_indefinite' },\r\n          { short: 'T', full: 'choice_interrogative' },\r\n          { short: 'N', full: 'choice_numeral' },\r\n          { short: 'P', full: 'choice_personal' },\r\n          { short: 'R', full: 'choice_relative' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_person',\r\n        choices: [\r\n          { short: '1', full: 'choice_1pers' },\r\n          { short: '2', full: 'choice_2pers' },\r\n          { short: '3', full: 'choice_3pers' }\r\n        ],\r\n        condition: { index: 1, full: 'P' }\r\n      },\r\n      {\r\n        attrName: 'attr_gen',\r\n        choices: [\r\n          { short: 'F', full: 'choice_feminile' },\r\n          { short: 'M', full: 'choice_masculine' },\r\n          { short: 'C', full: 'choice_common' },\r\n          { short: 'N', full: 'choice_neuter' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_num',\r\n        choices: [\r\n          { short: 'S', full: 'choice_singular' },\r\n          { short: 'P', full: 'choice_plural' },\r\n          { short: 'N', full: 'choice_invariable' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_case',\r\n        choices: [\r\n          { short: 'N', full: 'choice_nominative' },\r\n          { short: 'A', full: 'choice_accusative' },\r\n          { short: 'D', full: 'choice_dative' },\r\n          { short: 'O', full: 'choice_oblique' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_polite',\r\n        choices: [\r\n          { short: 'P', full: 'choice_polite' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      }\r\n    ]\r\n  },\r\n  cat_adverb: {\r\n    text: { full: 'cat_adverb', short: 'R' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'N', full: 'choice_negative' },\r\n          { short: 'G', full: 'choice_general' }\r\n        ],\r\n        condition: null\r\n      }\r\n    ]\r\n  },\r\n  cat_adposition: {\r\n    text: { full: 'cat_adposition', short: 'S' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'P', full: 'choice_preposition' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_num',\r\n        choices: [\r\n          { short: 'S', full: 'choice_singular' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_contracted',\r\n        choices: [\r\n          { short: 'C', full: 'choice_contracted' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      },\r\n      {\r\n        attrName: 'attr_gen',\r\n        choices: [\r\n          { short: 'M', full: 'choice_masculine' },\r\n          { short: '0', full: 'choice_none' }\r\n        ],\r\n        condition: null\r\n      }\r\n    ]\r\n  },\r\n  cat_number: {\r\n    text: { full: 'cat_number', short: 'Z' },\r\n    attributes: [\r\n      {\r\n        attrName: 'attr_type',\r\n        choices: [\r\n          { short: 'd', full: 'choice_partitive' },\r\n          { short: 'm', full: 'choice_currency' },\r\n          { short: 'p', full: 'choice_ratio' },\r\n          { short: 'u', full: 'choice_unit' }\r\n        ],\r\n        condition: null\r\n      }\r\n    ]\r\n  },\r\n  cat_date: {\r\n    text: { full: 'cat_date', short: 'W' },\r\n    attributes: []\r\n  }\r\n};\r\nexport default gerarchia;\r\n","import React, { Component } from 'react';\r\nimport Word from './Word';\r\nimport gerarchia from '../../constants/gerarchia';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nclass ExecutionExercise extends Component {\r\n  extractTag = (response, index) => {\r\n    return response[index].tag;\r\n  };\r\n\r\n  render() {\r\n    // const allowedPunctuation = /[a-zA-Z]/g;\r\n    // const allowedPunctuation2 = /[,.?!\"'<-{}[]()%\\/>;:]/g;\r\n    const { props } = this;\r\n    const {\r\n      sentence,\r\n      showSolution,\r\n      initSolution,\r\n      createAt,\r\n      language,\r\n      showButton,\r\n      indexSolution\r\n      // exLanguage\r\n    } = this.props;\r\n\r\n    const filterWord = sentence; // .filter(word => word.match(allowedPunctuation));\r\n\r\n    const tags = props.response\r\n      ? props.response.filter(word => word.tag.charAt(0) !== 'F')\r\n      : null;\r\n    if (sentence && sentence.length) {\r\n      return (\r\n        <div className=\"main-card mb-3 card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              {_translator('executionExercise_completeExercise', language)}\r\n            </h5>\r\n            <ul className=\"list-group\">\r\n              {filterWord &&\r\n                filterWord.map((item, index) => {\r\n                  return (\r\n                    <Word\r\n                      // exLanguage={exLanguage}\r\n                      key={`${index + item + createAt}word`}\r\n                      parola={item}\r\n                      gerarchy={gerarchia}\r\n                      index={index}\r\n                      solutionTag={\r\n                        props.response && props.response.length\r\n                          ? this.extractTag(tags, index)\r\n                          : null\r\n                      }\r\n                      showSolution={showSolution}\r\n                      showButton={showButton}\r\n                      initSolution={initSolution}\r\n                      indexSolution={indexSolution}\r\n                    />\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return <React.Fragment />;\r\n  }\r\n}\r\n\r\nexport default ExecutionExercise;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputSentence from '../../components/InputSentence';\r\nimport ExecutionExercise from '../../components/ExecutionExercise';\r\nimport _translator from '../../../helpers/Translator';\r\n\r\nimport {\r\n  initializeNewExercise,\r\n  updateNewExerciseState,\r\n  changeNewInputSentence,\r\n  saveFreeExercise,\r\n  initNewExerciseState,\r\n  getAutomaticSolution\r\n} from '../../../actions/ExerciseActions';\r\n\r\nclass FreeExsercise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.initializeNewExercise();\r\n    this.privateExerciseDev = React.createRef();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.initializeNewExercise();\r\n  }\r\n\r\n  /**\r\n   * split the sentence\r\n   *\r\n   * @param sentence the sentence to analyze\r\n   */\r\n  prepareExercise = sentenceString => {\r\n    const now = Date.now();\r\n    const { newExercise } = this.props;\r\n    const sentenceArray = sentenceString.split(' ');\r\n    this.getSolution({\r\n      ...newExercise,\r\n      showSolution: false,\r\n      showButton: true,\r\n      response: null,\r\n      createAt: now,\r\n      sentence: sentenceArray\r\n    });\r\n  };\r\n\r\n  /**\r\n   * set the showSolution flag to true\r\n   */\r\n  checkSolution = () => {\r\n    const {\r\n      newExercise,\r\n      saveFreeExerciseDispatch,\r\n      updateNewExerciseStateDispatch\r\n    } = this.props;\r\n\r\n    const codeSolution = newExercise.userSolution[0].map((word, index) => {\r\n      if (\r\n        word.languageIterator.getSolution().length === 0 &&\r\n        newExercise.response[index].tag.charAt(0) === 'F'\r\n      ) {\r\n        return newExercise.response[index].tag;\r\n      }\r\n      return word.languageIterator.getCodeSolution();\r\n    }); // questo è un array di codici che invio al backend\r\n\r\n    updateNewExerciseStateDispatch({\r\n      ...newExercise,\r\n      showSolution: true\r\n    });\r\n    saveFreeExerciseDispatch({\r\n      ...newExercise,\r\n      codeSolution: [codeSolution, []],\r\n      privateExerciseDev: this.privateExerciseDev.current.checked\r\n    });\r\n  };\r\n\r\n  /**\r\n   * call the server to analyze the sentence\r\n   */\r\n  getSolution = newExercise => {\r\n    const {\r\n      initNewExerciseStateDispatch,\r\n      getAutomaticSolutionDispatch\r\n    } = this.props;\r\n    initNewExerciseStateDispatch({\r\n      ...newExercise,\r\n      response: null\r\n    });\r\n    const { sentenceString } = newExercise;\r\n    const toSend = sentenceString.replace('.', ' ');\r\n    getAutomaticSolutionDispatch(toSend);\r\n  };\r\n\r\n  render() {\r\n    const { changeNewInputSentenceDispatch, newExercise, auth } = this.props;\r\n    const { user } = auth;\r\n\r\n    const {\r\n      sentence,\r\n      response,\r\n      showSolution,\r\n      createAt,\r\n      sentenceString,\r\n      showButton\r\n    } = newExercise;\r\n\r\n    const { language } = user;\r\n\r\n    return (\r\n      <div className=\"student\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-10\">\r\n            <InputSentence\r\n              prepareExercise={this.prepareExercise}\r\n              changeNewInputSentence={changeNewInputSentenceDispatch}\r\n              sentenceString={sentenceString}\r\n              language={language}\r\n              // exLanguage={newExercise.languageSelected}\r\n            />\r\n            <ExecutionExercise\r\n              sentence={sentence} // array di parole\r\n              response={response}\r\n              showSolution={showSolution}\r\n              createAt={createAt}\r\n              showButton={showButton}\r\n              language={language}\r\n              indexSolution={0}\r\n              // exLanguage={newExercise.language}\r\n            />\r\n            {sentence && sentence.length > 0 && (\r\n              <div className=\"main-card mb-3 card no-bg-color \">\r\n                <div className=\"card-body \">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <div className=\"custom-control custom-switch \">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"custom-control-input pointer\"\r\n                          id=\"chekPublicExericiseDev\"\r\n                          ref={this.privateExerciseDev}\r\n                          disabled={showSolution}\r\n                        />\r\n                        <label\r\n                          className=\"custom-control-label pointer\"\r\n                          htmlFor=\"chekPublicExericiseDev\"\r\n                        >\r\n                          {' '}\r\n                          {_translator(\r\n                            'executionExercise_privateExerciseDev',\r\n                            language\r\n                          )}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row justify-content-end \">\r\n                    <div className=\"col-12 col-sm-4 py-0 px-0\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success btn-block\"\r\n                        onClick={this.checkSolution}\r\n                        disabled={showSolution}\r\n                      >\r\n                        {_translator('executionExercise_complete', language)}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = store => {\r\n  return {\r\n    authError: store.auth.authError,\r\n    auth: store.auth,\r\n    token: store.auth.user.token,\r\n    newExercise: store.exercise.newExercise\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    initializeNewExercise: () => dispatch(initializeNewExercise()),\r\n    updateNewExerciseStateDispatch: newExercise =>\r\n      dispatch(updateNewExerciseState(newExercise)),\r\n    changeNewInputSentenceDispatch: input =>\r\n      dispatch(changeNewInputSentence(input)),\r\n    saveFreeExerciseDispatch: newExercise =>\r\n      dispatch(saveFreeExercise(newExercise)),\r\n    initNewExerciseStateDispatch: newExercise =>\r\n      dispatch(initNewExerciseState(newExercise)),\r\n    getAutomaticSolutionDispatch: sentenceString =>\r\n      dispatch(getAutomaticSolution(sentenceString))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FreeExsercise);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateUserInfo } from '../../../actions/AuthActions';\r\nimport _translator from '../../../helpers/Translator';\r\nimport { ExLang } from '../../../constants/Languages';\r\nimport Validator from '../../../helpers/Validator';\r\nimport RegExpression from '../../../constants/RegExpression';\r\n\r\nclass Account extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { updateUserInfoDispatch } = this.props;\r\n    const formData = {\r\n      firstName: e.target.firstName.value,\r\n      lastName: e.target.lastName.value,\r\n      username: e.target.username.value,\r\n      language: e.target.language.value\r\n\r\n      // dateOfBirth: e.target.dateOfBirth.value,\r\n      // language: e.target.language.value\r\n    };\r\n    if (this.isFormValid(formData)) {\r\n      updateUserInfoDispatch(formData);\r\n    } else {\r\n      console.error('dati non validi');\r\n    }\r\n  };\r\n\r\n  isFormValid = formData => {\r\n    const { firstName, lastName, username } = formData;\r\n    return (\r\n      firstName &&\r\n      firstName !== '' &&\r\n      lastName &&\r\n      lastName !== '' &&\r\n      // Validator.validDate(dateOfBirth) &&\r\n      Validator.validEmail(username, RegExpression.getRegEmail()) // &&\r\n      // Validator.validSelect(language, ExLang)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { userdata } = this.props;\r\n    const { username, firstName, lastName, language, dateOfBirth } = userdata;\r\n\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-11\">\r\n          <div className=\"card\">\r\n            <h5 className=\"card-header\">\r\n              {_translator('account_yourData', language)}\r\n            </h5>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"firstName\">\r\n                  {_translator('gen_firstName', language)}\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"firstName\"\r\n                    defaultValue={firstName}\r\n                  />\r\n                </div>\r\n                <label htmlFor=\"lastName\">\r\n                  {_translator('gen_lastName', language)}\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"lastName\"\r\n                    defaultValue={lastName}\r\n                  />\r\n                </div>\r\n                <label htmlFor=\"username\">\r\n                  {_translator('gen_email', language)}\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"username\"\r\n                    readOnly\r\n                    defaultValue={username}\r\n                  />\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"dateOfBirth\">\r\n                    {_translator('gen_birthDate', language)}\r\n                  </label>\r\n                  <input\r\n                    name=\"dateOfBirth\"\r\n                    id=\"dateOfBirth\"\r\n                    placeholder={_translator('gen_birthDate', language)}\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                    defaultValue={new Date(dateOfBirth)\r\n                      .toISOString()\r\n                      .substr(0, 10)}\r\n                  />\r\n                </div>\r\n                <div className=\"position-relative form-group\">\r\n                  <label htmlFor=\"language\">\r\n                    {_translator('gen_language', language)}\r\n                  </label>\r\n                  <select\r\n                    defaultValue={language}\r\n                    className=\"form-control\"\r\n                    name=\"language\"\r\n                    id=\"language\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {ExLang.map(lang => (\r\n                      <option value={lang} key={`ALang_${lang}`}>\r\n                        {_translator(`gen_${lang}`, language)}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"mt-2 btn btn-primary\">\r\n                  {_translator('gen_modify', language)}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateUserInfoDispatch: data => dispatch(updateUserInfo(data))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userdata: state.auth.user\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","import React, { Component } from 'react';\r\nimport _translator from '../../helpers/Translator';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nclass ExercisePreview extends Component {\r\n  state = {};\r\n\r\n  getDate = timestamp => {\r\n    const date = new Date(timestamp);\r\n    return [date.getDate(), date.getMonth() + 1, date.getFullYear()].join('/');\r\n  };\r\n\r\n  goToExecution = () => {\r\n    const { phrase, selectExercise, id } = this.props;\r\n\r\n    selectExercise(phrase, id);\r\n  };\r\n\r\n  onSelect = () => {\r\n    const { selectCard, id } = this.props;\r\n    if (selectCard) selectCard(id);\r\n  };\r\n\r\n  render() {\r\n    const { author, creationDate, phrase, mark, isMark, language } = this.props;\r\n    let markClass = 'alert-danger';\r\n    if (mark && mark > 8) markClass = 'alert-success';\r\n    if (mark && mark <= 8 && mark > 5) markClass = 'alert-warning';\r\n    return (\r\n      <div className=\"main-card mb-3 card exercise-preview\">\r\n        <div className=\"card-body\" onClick={this.onSelect}>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h5 className=\"card-title\">\r\n                <small>{_translator('gen_phrase', language)}: </small>\r\n                {phrase}\r\n              </h5>\r\n              <h6 className=\"card-subtitle\">\r\n                <small>{_translator('gen_author', language)}: </small> {author}\r\n              </h6>\r\n              <h6 className=\"card-subtitle\">\r\n                <small>\r\n                  {_translator('exercisePreview_addedOn', language)}:\r\n                </small>\r\n                {this.getDate(creationDate)}\r\n              </h6>\r\n            </div>\r\n            {isMark && mark && (\r\n              <div className=\"col-md-auto\">\r\n                <div className={`alert pull-right ${markClass}`} role=\"alert\">\r\n                  {mark}/10\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {!isMark && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"mb-2 mr-2 btn btn-primary btn-sm btn-block \"\r\n              onClick={this.goToExecution}\r\n            >\r\n              {_translator('exercisePreview_execute', language)}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* ExercisePreview.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  creationDate: PropTypes.instanceOf(Date).isRequired,\r\n  executionDate: PropTypes.instanceOf(Date), // could also not exist\r\n  phrase: PropTypes.string.isRequired,\r\n  mark: PropTypes.string,\r\n  isMark: PropTypes.bool.isRequired\r\n}; */\r\n\r\nexport default ExercisePreview;\r\n","import React from 'react';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nconst Pagination = props => {\r\n  const {\r\n    first,\r\n    last,\r\n    next,\r\n    prev,\r\n    number,\r\n    totalPages,\r\n    language,\r\n    onClick\r\n  } = props;\r\n  const cssClassFirst = `page-item${number === 0 ? ' disabled' : ''}`;\r\n  const cssClassLast = `page-item${\r\n    number === totalPages - 1 ? ' disabled' : ''\r\n  }`;\r\n\r\n  if (totalPages && totalPages > 1) {\r\n    return (\r\n      /*\r\n    pagination_first : 'Primo',\r\n    pagination_last : 'Ultimo',\r\n    pagination_previous : 'Successivo',\r\n    pagination_next : 'Precedente', */\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination justify-content-center\">\r\n          <li className={cssClassFirst}>\r\n            <button\r\n              className=\"page-link\"\r\n              type=\"button\"\r\n              onClick={() => onClick(prev)}\r\n              disabled={number === 0}\r\n            >\r\n              {_translator('pagination_prev', language)}\r\n            </button>\r\n          </li>\r\n\r\n          {number > 1 && (\r\n            <li className={cssClassFirst}>\r\n              <button\r\n                className=\"page-link\"\r\n                type=\"button\"\r\n                onClick={() => onClick(first)}\r\n                disabled={number === 0}\r\n              >\r\n                1\r\n              </button>\r\n            </li>\r\n          )}\r\n          {number > 2 && totalPages > 3 && (\r\n            <li className=\"page-item disabled\">\r\n              <button className=\"page-link\" type=\"button\" disabled>\r\n                ...\r\n              </button>\r\n            </li>\r\n          )}\r\n          {number > 0 && (\r\n            <li className=\"page-item \">\r\n              <button\r\n                className=\"page-link\"\r\n                type=\"button\"\r\n                onClick={() => onClick(prev)}\r\n              >\r\n                {number}\r\n              </button>\r\n            </li>\r\n          )}\r\n          <li className=\"page-item disabled \">\r\n            <button className=\"page-link\" type=\"button\">\r\n              {number + 1}\r\n            </button>\r\n          </li>\r\n          {number < totalPages - 2 && (\r\n            <li className=\"page-item \">\r\n              <button\r\n                className=\"page-link\"\r\n                type=\"button\"\r\n                onClick={() => onClick(next)}\r\n              >\r\n                {number + 2}\r\n              </button>\r\n            </li>\r\n          )}\r\n          {totalPages > 3 && number + 3 < totalPages && (\r\n            <li className=\"page-item disabled\">\r\n              <button className=\"page-link\" type=\"button\" disabled>\r\n                ...\r\n              </button>\r\n            </li>\r\n          )}\r\n          {number < totalPages - 1 && (\r\n            <li className={cssClassLast}>\r\n              <button\r\n                className=\"page-link\"\r\n                type=\"button\"\r\n                onClick={() => onClick(last)}\r\n                disabled={number === totalPages - 1}\r\n              >\r\n                {totalPages}\r\n              </button>\r\n            </li>\r\n          )}\r\n\r\n          <li className={cssClassLast}>\r\n            <button\r\n              className=\"page-link\"\r\n              type=\"button\"\r\n              onClick={() => onClick(next)}\r\n              disabled={number >= totalPages}\r\n            >\r\n              {_translator('pagination_next', language)}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n  return <React.Fragment />;\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  updateNewExerciseState,\r\n  initializeNewExercise,\r\n  loadTodoExercises\r\n} from '../../../actions/ExerciseActions';\r\nimport ExercisePreview from '../../components/ExercisePreview';\r\nimport Pagination from '../../components/Paginatioin';\r\n\r\nclass Homework extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { initializeNewExerciseDispatch } = props;\r\n    // if (!todoExercises)\r\n    props.loadTodoExercisesDispatch();\r\n    initializeNewExerciseDispatch();\r\n  }\r\n\r\n  state = {};\r\n\r\n  selectExercise = (phrase, id) => {\r\n    const { updateNewExerciseStateDispatch, newExercise, history } = this.props;\r\n    updateNewExerciseStateDispatch({\r\n      ...newExercise,\r\n      sentenceString: phrase,\r\n      id\r\n    });\r\n    history.push('homework-execution');\r\n  };\r\n\r\n  render() {\r\n    const { todoExercises, auth, loadTodoExercisesDispatch } = this.props;\r\n    const { exercises, page, links } = todoExercises;\r\n    const areThereExerciseToDo =\r\n      todoExercises && exercises && exercises.length > 0;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-xs-10 col-md-8 col-xl-6 \">\r\n            {areThereExerciseToDo &&\r\n              exercises &&\r\n              exercises.map((exercise, index) => (\r\n                <ExercisePreview\r\n                  key={`ex${exercise.id}${index}`}\r\n                  id={exercise.id}\r\n                  author={exercise.authorName}\r\n                  creationDate={exercise.dateExercise}\r\n                  executionDate={null}\r\n                  phrase={exercise.phraseText}\r\n                  solution=\"\"\r\n                  mark={null}\r\n                  isMark={false}\r\n                  selectExercise={this.selectExercise}\r\n                  language={auth.user.language}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n        {areThereExerciseToDo && (\r\n          <Pagination\r\n            first={links.first}\r\n            last={links.last}\r\n            next={links.next}\r\n            prev={links.prev}\r\n            number={page.number}\r\n            totalPages={page.totalPages}\r\n            language={auth.user.language}\r\n            onClick={loadTodoExercisesDispatch}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth,\r\n    newExercise: store.exercise.newExercise,\r\n    todoExercises: store.exercise.todoExercises\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateNewExerciseStateDispatch: newExercise =>\r\n      dispatch(updateNewExerciseState(newExercise)),\r\n    initializeNewExerciseDispatch: () => dispatch(initializeNewExercise()),\r\n    loadTodoExercisesDispatch: link => dispatch(loadTodoExercises(link))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Homework);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExecutionExercise from '../../components/ExecutionExercise';\r\nimport _translator from '../../../helpers/Translator';\r\nimport { removePunctuation } from '../../../helpers/Utils';\r\n\r\nimport {\r\n  initializeNewExercise,\r\n  updateNewExerciseState,\r\n  saveSolution,\r\n  initNewExerciseState\r\n} from '../../../actions/ExerciseActions';\r\n\r\nclass HomeworkExercise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.newExercise.sentenceString === '') props.history.push('homework');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { initializeNewExerciseDispatch } = this.props;\r\n    initializeNewExerciseDispatch();\r\n  }\r\n\r\n  /**\r\n   * set the showSolution flag to true\r\n   */\r\n\r\n  checkSolution = () => {\r\n    const {\r\n      newExercise,\r\n      saveSolutionDispatch,\r\n      updateNewExerciseStateDispatch\r\n    } = this.props;\r\n\r\n    const codeSolution = newExercise.userSolution[0].map((word, index) => {\r\n      if (\r\n        newExercise.response !== null &&\r\n        word.languageIterator.getSolution() &&\r\n        word.languageIterator.getSolution().length === 0 &&\r\n        newExercise.response[index].tag.charAt(0) === 'F'\r\n      ) {\r\n        return newExercise.response[index].tag;\r\n      }\r\n      return word.languageIterator.getCodeSolution();\r\n    }); // questo è un array di codici che invio al backend\r\n\r\n    updateNewExerciseStateDispatch({\r\n      ...newExercise,\r\n      showSolution: true\r\n    });\r\n    saveSolutionDispatch({\r\n      ...newExercise,\r\n      codeSolution: [codeSolution, []]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { newExercise, auth } = this.props;\r\n    const { user } = auth;\r\n\r\n    const { response, showSolution, createAt, mark } = newExercise;\r\n\r\n    const { language } = user;\r\n\r\n    const sentenceString = removePunctuation(newExercise.sentenceString);\r\n    const sentence =\r\n      sentenceString !== ''\r\n        ? sentenceString.split(' ').filter(item => item.charAt(0) !== 'F')\r\n        : [];\r\n    let markClass = 'alert-danger';\r\n    if (mark && mark > 8) markClass = 'alert-success';\r\n    if (mark && mark <= 8 && mark > 5) markClass = 'alert-warning';\r\n    return (\r\n      <div className=\"row justify-content-center student\">\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"main-card mb-3 card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h4 className=\"card-title\">\r\n                    <small>{_translator('gen_phrase', language)}: </small>\r\n                    {newExercise.sentenceString}\r\n                  </h4>\r\n                </div>\r\n                {mark !== undefined && mark !== null && (\r\n                  <div className=\"col-md-auto\">\r\n                    <div\r\n                      className={`alert pull-right ${markClass}`}\r\n                      role=\"alert\"\r\n                    >\r\n                      {mark}/10\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ExecutionExercise\r\n            sentence={sentence} // array di parole\r\n            response={response}\r\n            showSolution={showSolution}\r\n            createAt={createAt}\r\n            salvaEsercizio={this.salvaEsercizio}\r\n            language={language}\r\n            showButton\r\n            indexSolution={0}\r\n          />\r\n\r\n          {sentence && sentence.length > 0 && (\r\n            <div className=\"main-card mb-3 card no-bg-color\">\r\n              <div className=\"card-body\">\r\n                <div className=\"row justify-content-end \">\r\n                  <div className=\"col-12 col-sm-4 py-0 px-0\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success btn-block\"\r\n                      onClick={this.checkSolution}\r\n                      disabled={showSolution}\r\n                    >\r\n                      {_translator('executionExercise_complete', language)}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = store => {\r\n  return {\r\n    authError: store.auth.authError,\r\n    auth: store.auth,\r\n    token: store.auth.user.token,\r\n    newExercise: store.exercise.newExercise\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    initializeNewExerciseDispatch: () => dispatch(initializeNewExercise()),\r\n    updateNewExerciseStateDispatch: newExercise =>\r\n      dispatch(updateNewExerciseState(newExercise)),\r\n    saveSolutionDispatch: newExercise => dispatch(saveSolution(newExercise)),\r\n    initNewExerciseStateDispatch: newExercise =>\r\n      dispatch(initNewExerciseState(newExercise))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomeworkExercise);\r\n","/* eslint-disable jsx-a11y/label-has-for */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputSentence from '../../components/InputSentence';\r\nimport ExecutionExercise from '../../components/ExecutionExercise';\r\nimport _translator from '../../../helpers/Translator';\r\nimport {\r\n  initializeNewExercise,\r\n  updateNewExerciseState,\r\n  changeNewInputSentence,\r\n  saveExerciseSolution,\r\n  initNewExerciseState,\r\n  innerLoaderOff,\r\n  innerLoaderOn,\r\n  getAutomaticSolution\r\n} from '../../../actions/ExerciseActions';\r\n\r\nimport {\r\n  getAllStudents,\r\n  updateStudentsList,\r\n  loadClassList\r\n} from '../../../actions/ClassManagementActions';\r\n\r\nclass InsertExercise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.initializeNewExercise();\r\n    props.getAllStudentsDispatch();\r\n    props.loadClassListDispatch();\r\n    this.privateExercise = React.createRef();\r\n    this.privateExerciseDev = React.createRef();\r\n  }\r\n\r\n  /**\r\n   * split the sentence\r\n   *\r\n   * @param sentence the sentence to analyze\r\n   */\r\n  prepareExercise = sentenceString => {\r\n    const now = Date.now();\r\n    const { newExercise } = this.props;\r\n    const sentenceArray = sentenceString.split(' ');\r\n    this.getSolution({\r\n      ...newExercise,\r\n      showSolution: false,\r\n      showButton: false,\r\n      response: null,\r\n      createAt: now,\r\n      sentence: sentenceArray,\r\n      assignedUsersIds: []\r\n    });\r\n  };\r\n\r\n  /**\r\n   * set the showSolution flag to true\r\n   */\r\n  checkSolution = () => {\r\n    const {\r\n      newExercise,\r\n      saveExerciseSolutionDispatch,\r\n      updateNewExerciseStateDispatch\r\n    } = this.props;\r\n\r\n    const codeSolution1 = newExercise.userSolution[0].map((word, index) => {\r\n      if (word.languageIterator.getSolution().length === 0) {\r\n        return newExercise.response[index].tag;\r\n      }\r\n      return word.languageIterator.getCodeSolution();\r\n    }); // questo è un array di codici che invio al backend\r\n\r\n    const codeSolution2 = newExercise.alternativeSolution\r\n      ? newExercise.userSolution[1].map((word, index) => {\r\n          if (word.languageIterator.getSolution().length === 0) {\r\n            return newExercise.response[index].tag;\r\n          }\r\n          return word.languageIterator.getCodeSolution();\r\n        })\r\n      : newExercise.userSolution[1]; // questo è un array di codici che invio al backend\r\n\r\n    updateNewExerciseStateDispatch({\r\n      ...newExercise,\r\n      showSolution: true\r\n    });\r\n    saveExerciseSolutionDispatch({\r\n      ...newExercise,\r\n      showSolution: true,\r\n      codeSolution: [codeSolution1, codeSolution2],\r\n      privateExercise: this.privateExercise.current.checked,\r\n      privateExerciseDev: this.privateExerciseDev.current.checked\r\n    });\r\n  };\r\n\r\n  /**\r\n   * call the server to analyze the sentence\r\n   */\r\n  getSolution = newExercise => {\r\n    const {\r\n      initNewExerciseStateDispatch,\r\n      getAutomaticSolutionDispatch\r\n    } = this.props;\r\n\r\n    this.props.innerLoaderOn();\r\n    initNewExerciseStateDispatch({\r\n      ...newExercise,\r\n      response: null\r\n    });\r\n    const { sentenceString } = newExercise;\r\n\r\n    const toSend = sentenceString.replace('.', ' ');\r\n\r\n    getAutomaticSolutionDispatch(toSend);\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { updateStudentsListDispatch, studentsList } = this.props;\r\n\r\n    studentsList.find(student => student.username === event.target.id).check =\r\n      event.target.checked;\r\n    updateStudentsListDispatch(studentsList);\r\n  };\r\n\r\n  /**\r\n   *  Select/Deselect students of this class\r\n   *  @param event Event\r\n   *  @param students List of students id\r\n   */\r\n  handleChangeClassList = (event, students) => {\r\n    const { updateStudentsListDispatch, studentsList } = this.props;\r\n    if (students && students.length > 0) {\r\n      students.forEach(student => {\r\n        const element = studentsList.find(\r\n          _student => _student.id === student.id\r\n        );\r\n        if (element !== undefined) {\r\n          element.check = event.target.checked;\r\n        }\r\n      });\r\n    }\r\n    updateStudentsListDispatch(studentsList);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      changeNewInputSentenceDispatch,\r\n      newExercise,\r\n      auth,\r\n      studentsList,\r\n      classList,\r\n      updateNewExerciseStateDispatch\r\n    } = this.props;\r\n    const { user } = auth;\r\n    const {\r\n      sentence,\r\n      response,\r\n      showSolution,\r\n      createAt,\r\n      sentenceString,\r\n      showButton,\r\n      alternativeSolution\r\n    } = newExercise;\r\n\r\n    const { language } = user;\r\n    return (\r\n      <div className=\"\">\r\n        <InputSentence\r\n          prepareExercise={this.prepareExercise}\r\n          changeNewInputSentence={changeNewInputSentenceDispatch}\r\n          sentenceString={sentenceString}\r\n          language={language}\r\n          // exLanguage={newExercise.languageSelected}\r\n        />\r\n        {response && (\r\n          <React.Fragment>\r\n            <h2 className=\"h5\">\r\n              {_translator('executionExercise_mainSolution', language)}\r\n            </h2>\r\n            <ExecutionExercise\r\n              sentence={sentence} // array di parole\r\n              response={response}\r\n              showSolution={showSolution}\r\n              createAt={createAt}\r\n              salvaEsercizio={this.salvaEsercizio}\r\n              language={language}\r\n              initSolution\r\n              showButton={showButton}\r\n              indexSolution={0}\r\n              // exLanguage={newExercise.language}\r\n            />\r\n            <div className=\"main-card  card no-bg-color \">\r\n              <div className=\"card-body pt-0 pl-1\">\r\n                {!alternativeSolution && !showSolution && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-lg \"\r\n                    onClick={() =>\r\n                      updateNewExerciseStateDispatch({\r\n                        ...newExercise,\r\n                        alternativeSolution: true\r\n                      })\r\n                    }\r\n                  >\r\n                    {_translator('executionExercise_addSolAlter', language)}\r\n                  </button>\r\n                )}\r\n                {alternativeSolution && !showSolution && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger btn-lg \"\r\n                    onClick={() =>\r\n                      updateNewExerciseStateDispatch({\r\n                        ...newExercise,\r\n                        alternativeSolution: false\r\n                      })\r\n                    }\r\n                  >\r\n                    {_translator('executionExercise_delSolAlter', language)}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {alternativeSolution && (\r\n              <React.Fragment>\r\n                <h2 className=\"h5\">\r\n                  {_translator('executionExercise_altSolution', language)}\r\n                </h2>\r\n                <ExecutionExercise\r\n                  sentence={sentence} // array di parole\r\n                  response={response}\r\n                  showSolution={showSolution}\r\n                  createAt={createAt}\r\n                  salvaEsercizio={this.salvaEsercizio}\r\n                  language={language}\r\n                  initSolution\r\n                  showButton={showButton}\r\n                  indexSolution={1}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n\r\n        {response && studentsList && !showSolution && studentsList.length > 0 && (\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-6 \">\r\n              <div className=\"mb-3 card\">\r\n                <div className=\"card-header-tab card-header-tab-animation card-header\">\r\n                  <div className=\"card-header-title\">\r\n                    <i className=\"header-icon lnr-apartment icon-gradient bg-love-kiss\" />\r\n                    {_translator('insertExercise_StudentDisp', language)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"tab-content\">\r\n                    <div className=\"tab-pane fade show active\">\r\n                      <div className=\"scroll-area-sm\">\r\n                        <div className=\"scrollbar-container\">\r\n                          <ul className=\"rm-list-borders rm-list-borders-scroll list-group list-group-flush\">\r\n                            {studentsList.map(student => (\r\n                              <li\r\n                                key={`li-${student.username}`}\r\n                                className=\"list-group-item\"\r\n                              >\r\n                                <div className=\"widget-content p-0\">\r\n                                  <div className=\"widget-content-wrapper\">\r\n                                    <div className=\"widget-content-left mr-3\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        value={student.username}\r\n                                        id={student.username}\r\n                                        onChange={this.handleChange}\r\n                                        checked={\r\n                                          student.check ? student.check : false\r\n                                        }\r\n                                      />\r\n                                    </div>\r\n\r\n                                    <div className=\"widget-content-left\">\r\n                                      <label htmlFor={student.username}>\r\n                                        <div className=\"widget-heading\">\r\n                                          {student.lastName} {student.firstName}\r\n                                        </div>\r\n                                        <div className=\"widget-subheading\">\r\n                                          {student.username}\r\n                                        </div>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {classList && classList.length > 0 && (\r\n              <div className=\"col-sm-12 col-md-6 \">\r\n                <div className=\"mb-3 card\">\r\n                  <div className=\"card-header-tab card-header-tab-animation card-header\">\r\n                    <div className=\"card-header-title\">\r\n                      <i className=\"header-icon lnr-apartment icon-gradient bg-love-kiss\" />\r\n                      {_translator('insertExercise_ClassDisp', language)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"tab-content\">\r\n                      <div className=\"tab-pane fade show active\">\r\n                        <div className=\"scroll-area-sm\">\r\n                          <div className=\"scrollbar-container\">\r\n                            <ul className=\"rm-list-borders rm-list-borders-scroll list-group list-group-flush\">\r\n                              {classList.map(classElement => (\r\n                                <li\r\n                                  key={`li-${classElement.classId}`}\r\n                                  className=\"list-group-item\"\r\n                                >\r\n                                  <div className=\"widget-content p-0\">\r\n                                    <div className=\"widget-content-wrapper\">\r\n                                      <div className=\"widget-content-left mr-3\">\r\n                                        <input\r\n                                          type=\"checkbox\"\r\n                                          id={classElement.classId}\r\n                                          name={classElement.className}\r\n                                          value={classElement}\r\n                                          onChange={e =>\r\n                                            this.handleChangeClassList(\r\n                                              e,\r\n                                              classElement.students\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                      <div className=\"widget-content-left\">\r\n                                        <label htmlFor={classElement.classId}>\r\n                                          <div className=\"widget-heading\">\r\n                                            {classElement.className}\r\n                                          </div>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {response && (\r\n          <React.Fragment>\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"custom-control custom-switch \">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input pointer\"\r\n                    id=\"chekPublicExericise\"\r\n                    ref={this.privateExercise}\r\n                    disabled={showSolution}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label pointer\"\r\n                    htmlFor=\"chekPublicExericise\"\r\n                  >\r\n                    {' '}\r\n                    {_translator('executionExercise_privateExercise', language)}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"custom-control custom-switch \">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input pointer\"\r\n                    id=\"chekPublicExericiseDev\"\r\n                    ref={this.privateExerciseDev}\r\n                    disabled={showSolution}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label pointer\"\r\n                    htmlFor=\"chekPublicExericiseDev\"\r\n                  >\r\n                    {' '}\r\n                    {_translator(\r\n                      'executionExercise_privateExerciseDev',\r\n                      language\r\n                    )}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"main-card mb-3 card no-bg-color \">\r\n              <div className=\"card-body px-0\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-lg btn-block \"\r\n                  onClick={this.checkSolution}\r\n                  disabled={showSolution}\r\n                >\r\n                  {_translator('executionExercise_complete', language)}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = store => {\r\n  return {\r\n    authError: store.auth.authError,\r\n    auth: store.auth,\r\n    token: store.auth.user.token,\r\n    newExercise: store.exercise.newExercise,\r\n    studentsList: store.class.studentsList,\r\n    classList: store.class.classList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadClassListDispatch: () => dispatch(loadClassList()),\r\n    initializeNewExercise: () => dispatch(initializeNewExercise()),\r\n    updateNewExerciseStateDispatch: newExercise =>\r\n      dispatch(updateNewExerciseState(newExercise)),\r\n    changeNewInputSentenceDispatch: input =>\r\n      dispatch(changeNewInputSentence(input)),\r\n    saveExerciseSolutionDispatch: newExercise =>\r\n      dispatch(saveExerciseSolution(newExercise)),\r\n    initNewExerciseStateDispatch: newExercise =>\r\n      dispatch(initNewExerciseState(newExercise)),\r\n    innerLoaderOff: () => dispatch(innerLoaderOff()),\r\n    innerLoaderOn: () => dispatch(innerLoaderOn()),\r\n    getAutomaticSolutionDispatch: sentenceString =>\r\n      dispatch(getAutomaticSolution(sentenceString)),\r\n    getAllStudentsDispatch: () => dispatch(getAllStudents()),\r\n    updateStudentsListDispatch: studentsList =>\r\n      dispatch(updateStudentsList(studentsList))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InsertExercise);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _translator from '../../../helpers/Translator';\r\nimport { downlaodAll, updateFilter } from '../../../actions/AdminActions';\r\n\r\n/*\r\nprivate List<String> languages = new ArrayList<>();\r\nprivate Long startDate;\r\nprivate Long endDate;\r\nprivate Integer minReliability; */\r\nclass DeveloperDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.filterButton = React.createRef();\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { updateFilterDispatch } = this.props;\r\n    updateFilterDispatch({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleChangeSwitch = e => {\r\n    const { updateFilterDispatch } = this.props;\r\n    updateFilterDispatch({ [e.target.id]: e.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const { user, downlaodAllDispatch, filter } = this.props;\r\n\r\n    const { language } = user;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"py-5 text-center\">\r\n            <h2>{_translator('gen_devDashboard', language)}</h2>\r\n            <p className=\"lead\">\r\n              {_translator('developerDashBoard_desc', language)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-11\">\r\n            <div className=\"card\">\r\n              <h5 className=\"card-header\">\r\n                {_translator('gen_devDashboard', language)}\r\n              </h5>\r\n              <div className=\"card-body\">\r\n                <p>{_translator('developerDashBoard_devDownText', language)}</p>\r\n\r\n                <form>\r\n                  <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-switch\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"custom-control-input\"\r\n                        id=\"openFilters\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#collapse\"\r\n                        aria-controls=\"collapse\"\r\n                        onChange={this.handleChangeSwitch}\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor=\"openFilters\"\r\n                      >\r\n                        {_translator('developerDashBoard_addFilter', language)}\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <div className=\"collapse multi-collapse\" id=\"collapse\">\r\n                      <form action=\"\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                              <span className=\"input-group-text\">\r\n                                {_translator(\r\n                                  'developerDashBoard_minMaxDate',\r\n                                  language\r\n                                )}\r\n                              </span>\r\n                            </div>\r\n\r\n                            <input\r\n                              type=\"date\"\r\n                              aria-label=\"First name\"\r\n                              className=\"form-control\"\r\n                              id=\"dateMin\"\r\n                              value={filter.dateMin}\r\n                              onChange={this.handleChange}\r\n                              pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\r\n                            />\r\n                            <input\r\n                              type=\"date\"\r\n                              aria-label=\"Last name\"\r\n                              className=\"form-control\"\r\n                              id=\"dateMax\"\r\n                              value={filter.dateMax}\r\n                              onChange={this.handleChange}\r\n                              pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"reliability\">\r\n                            {_translator(\r\n                              'developerDashBoard_minReliability',\r\n                              language\r\n                            )}{' '}\r\n                            : {filter.reliability}\r\n                          </label>\r\n                          <input\r\n                            type=\"range\"\r\n                            className=\"form-control-range\"\r\n                            id=\"reliability\"\r\n                            min=\"0\"\r\n                            max=\"100\"\r\n                            step=\"1\"\r\n                            onChange={this.handleChange}\r\n                            value={filter.reliability}\r\n                          />\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => downlaodAllDispatch()}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {_translator('developerDashBoard_devDown', language)}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.auth.user,\r\n    filter: store.admin.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    downlaodAllDispatch: () => dispatch(downlaodAll()),\r\n    updateFilterDispatch: filter => dispatch(updateFilter(filter))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DeveloperDashboard);\r\n","import React, { Component } from 'react';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nclass DeveloperToAccept extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      language,\r\n      btAction,\r\n      id\r\n    } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <div className=\"widget-content p-0\">\r\n            <div className=\"widget-content-wrapper\">\r\n              <div className=\"widget-content-left mr-3\">\r\n                <div className=\"widget-content-left\">\r\n                  <img\r\n                    width=\"40\"\r\n                    className=\"rounded-circle\"\r\n                    src=\"assets/images/avatars/4.jpg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"widget-content-left flex2\">\r\n                <div className=\"widget-heading\">\r\n                  {`${firstName} ${lastName}`}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td className=\"text-center\">{username}</td>\r\n        <td className=\"text-center\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              onClick={() => btAction(true, id)}\r\n            >\r\n              {_translator('developerToAccept_allow', language)}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => btAction(false, id)}\r\n            >\r\n              {_translator('developerToAccept_deny', language)}\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nexport default DeveloperToAccept;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _translator from '../../../helpers/Translator';\r\nimport DeveloperToAccept from '../../components/DeveloperToAccept';\r\nimport {\r\n  fetchDeveloperList,\r\n  deleteUser,\r\n  activateUser\r\n} from '../../../actions/AdminActions';\r\nimport { _confirmAlert } from '../../../helpers/Utils';\r\n\r\nclass AdminDevDashBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.fetchDeveloperListDispatch();\r\n  }\r\n\r\n  acceptDeveloper(isAccepted, usernameOrId) {\r\n    const { activateUserDispatch, deleteUserDispatch } = this.props;\r\n\r\n    if (isAccepted) {\r\n      _confirmAlert(\r\n        { message: 'Sei sicuro di voler approvare?' },\r\n        activateUserDispatch,\r\n        { usernameOrId }\r\n      );\r\n    } else {\r\n      _confirmAlert(\r\n        { message: 'Sei sicuro di voler eliminare?' },\r\n        deleteUserDispatch,\r\n        { usernameOrId }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, admin, fetchDeveloperListDispatch } = this.props;\r\n    const { language } = user;\r\n    const { devList } = admin;\r\n    console.log('tuttiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii');\r\n    console.log('user ', user);\r\n    console.log('admin', admin);\r\n    console.log('fetchdevList', fetchDeveloperList);\r\n    console.log('language', language);\r\n    console.log('devlist', devList);\r\n    console.log('prop', this.props);\r\n\r\n    const devRender =\r\n      devList && devList.length > 0 ? (\r\n        devList.map(dev => (\r\n          <DeveloperToAccept\r\n            key={`dev-${dev.username}`}\r\n            id={dev.id}\r\n            firstName={dev.firstName}\r\n            lastName={dev.lastName}\r\n            username={dev.username}\r\n            language={language}\r\n            btAction={(isAccepted, username) =>\r\n              this.acceptDeveloper(isAccepted, username)\r\n            }\r\n          />\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td>{_translator('adminDevDashBoard_noDevApprove', language)}</td>\r\n          <td />\r\n          <td />\r\n        </tr>\r\n      );\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"main-card mb-3 card\">\r\n            <div className=\"card-header\">\r\n              {_translator('SidebarElementAdministrator_devs', language)}\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"align-middle mb-0 table table-borderless table-striped table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>{_translator('gen_firstName', language)}</th>\r\n                    <th className=\"text-center\">\r\n                      {_translator('gen_email', language)}\r\n                    </th>\r\n                    <th className=\"text-center\">\r\n                      {_translator('developerDashBoard_action', language)}\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{devRender}</tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"d-block text-center card-footer\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => fetchDeveloperListDispatch()}\r\n                className=\"btn-wide btn btn-primary\"\r\n              >\r\n                {_translator('adminDashBoard_update', language)}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.auth.user,\r\n    admin: store.admin\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchDeveloperListDispatch: () => dispatch(fetchDeveloperList()),\r\n    deleteUserDispatch: user => dispatch(deleteUser(user)),\r\n    activateUserDispatch: user => dispatch(activateUser(user))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AdminDevDashBoard);\r\n","import React, { Component } from 'react';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nexport default class User extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      language,\r\n      btAction,\r\n      role,\r\n      id\r\n    } = this.props;\r\n    let textRole = '';\r\n    switch (role) {\r\n      case 'ROLE_ADMINISTRATOR':\r\n        textRole = _translator('gen_admin', language);\r\n        break;\r\n      case 'ROLE_DEVELOPER':\r\n        textRole = _translator('gen_developer', language);\r\n        break;\r\n      case 'ROLE_STUDENT':\r\n        textRole = _translator('gen_student', language);\r\n        break;\r\n      case 'ROLE_TEACHER':\r\n        textRole = _translator('gen_teacher', language);\r\n        break;\r\n      default:\r\n        textRole = '????';\r\n        break;\r\n    }\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <div className=\"widget-content p-0\">\r\n            <div className=\"widget-content-wrapper\">\r\n              <div className=\"widget-content-left mr-3\">\r\n                <div className=\"widget-content-left\">\r\n                  <img\r\n                    width=\"40\"\r\n                    className=\"rounded-circle\"\r\n                    src=\"assets/images/avatars/4.jpg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"widget-content-left flex2\">\r\n                <div className=\"widget-heading\">\r\n                  {firstName + ' ' + lastName}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td className=\"text-center\">{username}</td>\r\n        <td className=\"text-center\">{textRole}</td>\r\n        <td className=\"text-center\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => btAction(id)}\r\n            >\r\n              {_translator('adminUserDashBoard_delete', language)}\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _translator from '../../../helpers/Translator';\r\nimport User from '../../components/User';\r\nimport { fetchUsersList, deleteUser } from '../../../actions/AdminActions';\r\nimport { _confirmAlert } from '../../../helpers/Utils';\r\n\r\nclass AdminDevDashBoard extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    props.fetchUsersListDispatch();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      user,\r\n      admin,\r\n      fetchUsersListDispatch,\r\n      deleteUserDispatch\r\n    } = this.props;\r\n    const { language } = user;\r\n    const { usersList } = admin;\r\n\r\n    const devRender =\r\n      usersList.length > 0 ? (\r\n        usersList.map(_user => (\r\n          <User\r\n            key={`user-${_user.username}`}\r\n            id={_user.id}\r\n            firstName={_user.firstName}\r\n            lastName={_user.lastName}\r\n            username={_user.username}\r\n            role={_user.role}\r\n            language={language}\r\n            btAction={usernameOrId =>\r\n              _confirmAlert(\r\n                {\r\n                  title: 'Attenzione',\r\n                  message: 'Sei sicuro di voler Eliminare?'\r\n                },\r\n                deleteUserDispatch,\r\n                { usernameOrId }\r\n              )\r\n            }\r\n          />\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td>{_translator('adminDevDashBoard_noUser', language)}</td>\r\n          <td />\r\n          <td />\r\n          <td />\r\n        </tr>\r\n      );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"main-card mb-3 card\">\r\n              <div className=\"card-header\">\r\n                {_translator('SidebarElementAdministrator_devs', language)}\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"align-middle mb-0 table table-borderless table-striped table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{_translator('gen_firstName', language)}</th>\r\n                      <th className=\"text-center\">\r\n                        {_translator('gen_email', language)}\r\n                      </th>\r\n                      <th className=\"text-center\">\r\n                        {_translator('gen_role', language)}\r\n                      </th>\r\n                      <th className=\"text-center\">\r\n                        {_translator('developerDashBoard_action', language)}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{devRender}</tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"d-block text-center card-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => fetchUsersListDispatch()}\r\n                  className=\"btn btn-wide btn-primary mt-2\"\r\n                >\r\n                  {_translator('adminDashBoard_update', language)}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.auth.user,\r\n    admin: store.admin\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchUsersListDispatch: () => dispatch(fetchUsersList()),\r\n    deleteUserDispatch: user => dispatch(deleteUser(user))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AdminDevDashBoard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExercisePreview from '../../components/ExercisePreview';\r\nimport { loadDoneExercises } from '../../../actions/ExerciseActions';\r\nimport Pagination from '../../components/Paginatioin';\r\n\r\nclass DoneHomework extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { loadDoneExercisesDispatch } = props;\r\n    // if (!doneExercises)\r\n    loadDoneExercisesDispatch();\r\n  }\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    const { doneExercises, auth, loadDoneExercisesDispatch } = this.props;\r\n    const { exercises, page, links } = doneExercises;\r\n    const areThereExerciseDone =\r\n      exercises && doneExercises.exercises.length > 0;\r\n    const { language } = auth.user;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-xs-10 col-md-8 col-xl-6 \">\r\n            {areThereExerciseDone &&\r\n              doneExercises.exercises.map((exercise, index) => {\r\n                return (\r\n                  <ExercisePreview\r\n                    key={`ex-${exercise.id}${index}`}\r\n                    author={exercise.authorName}\r\n                    creationDate={exercise.dateExercise}\r\n                    executionDate={null}\r\n                    phrase={exercise.phraseText}\r\n                    solution=\"\"\r\n                    mark={null}\r\n                    isMark\r\n                    selectExercise={this.selectExercise}\r\n                    language={language}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        {areThereExerciseDone && (\r\n          <Pagination\r\n            first={links.first}\r\n            last={links.last}\r\n            next={links.next}\r\n            prev={links.prev}\r\n            number={page.number}\r\n            totalPages={page.totalPages}\r\n            language={language}\r\n            onClick={loadDoneExercisesDispatch}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth,\r\n    doneExercises: store.exercise.doneExercises\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadDoneExercisesDispatch: link => dispatch(loadDoneExercises(link))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DoneHomework);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExercisePreview from '../../components/ExercisePreview';\r\nimport { loadDoneExercises } from '../../../actions/ExerciseActions';\r\nimport Pagination from '../../components/Paginatioin';\r\n\r\nclass AssignedHomework extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { loadDoneExercisesDispatch } = props;\r\n    // if (!doneExercises)\r\n    loadDoneExercisesDispatch();\r\n  }\r\n\r\n  state = {};\r\n\r\n  selectExercise = exerciseId => {\r\n    const { history } = this.props;\r\n    history.push(`exerciseDetail/${exerciseId}`);\r\n  };\r\n\r\n  render() {\r\n    const { doneExercises, auth, loadDoneExercisesDispatch } = this.props;\r\n    const { exercises, page, links } = doneExercises;\r\n    const areThereExerciseDone =\r\n      exercises && doneExercises.exercises.length > 0;\r\n    const { language } = auth.user;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center assignedExercises\">\r\n          <div className=\"col-12 col-xs-10 col-md-8 col-xl-6 \">\r\n            {areThereExerciseDone &&\r\n              doneExercises.exercises.map(exercise => {\r\n                return (\r\n                  <ExercisePreview\r\n                    key={`ex-${exercise.id}`}\r\n                    id={exercise.id}\r\n                    author={exercise.authorName}\r\n                    creationDate={exercise.dateExercise}\r\n                    executionDate={null}\r\n                    phrase={exercise.phraseText}\r\n                    solution=\"\"\r\n                    mark={null}\r\n                    isMark\r\n                    selectCard={this.selectExercise}\r\n                    language={language}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        {areThereExerciseDone && (\r\n          <Pagination\r\n            first={links.first}\r\n            last={links.last}\r\n            next={links.next}\r\n            prev={links.prev}\r\n            number={page.number}\r\n            totalPages={page.totalPages}\r\n            language={language}\r\n            onClick={loadDoneExercisesDispatch}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth,\r\n    doneExercises: store.exercise.doneExercises\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadDoneExercisesDispatch: link => dispatch(loadDoneExercises(link))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AssignedHomework);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  updateNewExerciseState,\r\n  initializeNewExercise,\r\n  loadPublicExercises,\r\n  changePublicExerciseFilter\r\n} from '../../../actions/ExerciseActions';\r\nimport _translator from '../../../helpers/Translator';\r\nimport { getFavouriteTeachers } from '../../../actions/ClassManagementActions';\r\nimport ExercisePreview from '../../components/ExercisePreview';\r\nimport Pagination from '../../components/Paginatioin';\r\n\r\nclass PublicExercises extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { initializeNewExerciseDispatch } = props;\r\n    // if (!todoExercises)\r\n    props.loadPublicExercisesDispatch({ onlyFavourite: false });\r\n    props.getFavouriteTeachersDispatch();\r\n    initializeNewExerciseDispatch();\r\n  }\r\n\r\n  state = {};\r\n\r\n  selectExercise = (phrase, id) => {\r\n    const { updateNewExerciseStateDispatch, newExercise, history } = this.props;\r\n    updateNewExerciseStateDispatch({\r\n      ...newExercise,\r\n      sentenceString: phrase,\r\n      id\r\n    });\r\n    history.push('homework-execution');\r\n  };\r\n\r\n  onClickPagination = link => {\r\n    const {\r\n      loadPublicExercisesDispatch,\r\n      onlyFavouritePublicExercise\r\n    } = this.props;\r\n    loadPublicExercisesDispatch({\r\n      _link: link,\r\n      onlyFavourite: onlyFavouritePublicExercise\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      publicExercises,\r\n      auth,\r\n      onlyFavouritePublicExercise,\r\n      changePublicExerciseFilterDispatch\r\n    } = this.props;\r\n    const { exercises, page, links } = publicExercises;\r\n    const areThereExercisePublic =\r\n      publicExercises && exercises && exercises.length > 0;\r\n\r\n    const classStyleAll = onlyFavouritePublicExercise\r\n      ? 'btn-outline-primary'\r\n      : 'btn-primary';\r\n    const classStyleOnlyFav = !onlyFavouritePublicExercise\r\n      ? 'btn-outline-primary'\r\n      : 'btn-primary';\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-xs-10 col-md-8 col-xl-6 \">\r\n            <div className=\"row justify-content-center \">\r\n              <div className=\"col-6 pr-0 pb-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-transition btn  btn-lg btn-block rounded-0 ${classStyleAll}`}\r\n                  onClick={() =>\r\n                    changePublicExerciseFilterDispatch(\r\n                      !onlyFavouritePublicExercise\r\n                    )\r\n                  }\r\n                  disabled={!onlyFavouritePublicExercise}\r\n                >\r\n                  {_translator('publicExercises_All', auth.user.language)}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-6 pl-0\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    changePublicExerciseFilterDispatch(\r\n                      !onlyFavouritePublicExercise\r\n                    )\r\n                  }\r\n                  className={`btn btn-transition btn  btn-lg btn-block rounded-0 ${classStyleOnlyFav}`}\r\n                  disabled={onlyFavouritePublicExercise}\r\n                >\r\n                  {_translator('publicExercises_Favourite', auth.user.language)}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-xs-10 col-md-8 col-xl-6 \">\r\n            {areThereExercisePublic &&\r\n              exercises &&\r\n              exercises.map((exercise, index) => (\r\n                <ExercisePreview\r\n                  key={`ex${exercise.id}${index}`}\r\n                  id={exercise.id}\r\n                  author={exercise.authorName}\r\n                  creationDate={exercise.dateExercise}\r\n                  executionDate={null}\r\n                  phrase={exercise.phraseText}\r\n                  solution=\"\"\r\n                  mark={null}\r\n                  isMark={false}\r\n                  selectExercise={this.selectExercise}\r\n                  language={auth.user.language}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n        {areThereExercisePublic && (\r\n          <Pagination\r\n            first={links.first}\r\n            last={links.last}\r\n            next={links.next}\r\n            prev={links.prev}\r\n            number={page.number}\r\n            totalPages={page.totalPages}\r\n            language={auth.user.language}\r\n            onClick={this.onClickPagination}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth,\r\n    newExercise: store.exercise.newExercise,\r\n    publicExercises: store.exercise.publicExercises,\r\n    onlyFavouritePublicExercise: store.exercise.onlyFavouritePublicExercise\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateNewExerciseStateDispatch: newExercise =>\r\n      dispatch(updateNewExerciseState(newExercise)),\r\n    initializeNewExerciseDispatch: () => dispatch(initializeNewExercise()),\r\n    loadPublicExercisesDispatch: ({ _link, onlyFavourite }) =>\r\n      dispatch(loadPublicExercises({ _link, onlyFavourite })),\r\n    changePublicExerciseFilterDispatch: onlyFavourite =>\r\n      dispatch(changePublicExerciseFilter(onlyFavourite)),\r\n    getFavouriteTeachersDispatch: () => dispatch(getFavouriteTeachers())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PublicExercises);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Checkbox = ({ type, name, checked, onChange, id }) => (\r\n  <input\r\n    type={type}\r\n    name={name}\r\n    checked={checked}\r\n    onChange={onChange}\r\n    id={id}\r\n  />\r\n);\r\n\r\nCheckbox.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n  type: 'checkbox',\r\n  checked: false\r\n};\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Checkbox from './Checkbox';\r\nimport _translator from '../../helpers/Translator';\r\n\r\nclass ClassCreationModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.errorName = React.createRef();\r\n    this.errorList = React.createRef();\r\n  }\r\n\r\n  handleChangeCheck = e => {\r\n    e.preventDefault();\r\n    const { updateList, students } = this.props;\r\n    updateList(students, e.target.name);\r\n  };\r\n\r\n  handleChangeName = e => {\r\n    e.preventDefault();\r\n    const { language } = this.props;\r\n    if (e.target.value === '') {\r\n      this.errorName.current.innerText = _translator('gen_reqField', language);\r\n    } else this.errorName.current.innerText = '';\r\n    const { onChangeName } = this.props;\r\n    onChangeName(e.target.value);\r\n  };\r\n\r\n  onConfirm = ({ name, students: studentsToReturn, teacherId }) => {\r\n    const { confirm, language } = this.props;\r\n    if (!name || name.length === 0) {\r\n      this.errorName.current.innerText = _translator('gen_reqField', language);\r\n    } else if (studentsToReturn && studentsToReturn.length === 0) {\r\n      this.errorList.current.innerText = _translator('gen_reqField', language);\r\n    } else {\r\n      this.errorName.current.innerText = '';\r\n      this.errorList.current.innerText = '';\r\n      confirm({ name, students: studentsToReturn, teacherId });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      language,\r\n      name,\r\n      show,\r\n      setShow,\r\n      students,\r\n      teacherId\r\n    } = this.props;\r\n\r\n    const studentsToReturn = students\r\n      .filter(student => student.isSelected === true)\r\n      .map(student => student.key);\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Modal\r\n          size=\"lg\"\r\n          show={show}\r\n          onHide={() => setShow(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"position-relative form-group\">\r\n                    <input\r\n                      name=\"name\"\r\n                      placeholder={_translator(\r\n                        'classCreationModal_name',\r\n                        language\r\n                      )}\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={name}\r\n                      onChange={this.handleChangeName}\r\n                    />\r\n                    <span className=\"text-danger\" ref={this.errorName} />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={6} className=\"border-bottom\">\r\n                  <div className=\"scroll-area-lg\">\r\n                    <div className=\"scrollbar-container\">\r\n                      <h6>\r\n                        {_translator(\r\n                          'classCreationModal_allStudents',\r\n                          language\r\n                        )}\r\n                      </h6>\r\n                      <ul className=\"rm-list-borders rm-list-borders-scroll list-group list-group-flush\">\r\n                        {students\r\n                          .filter(item => item.isSelected !== true)\r\n                          .map(student => {\r\n                            return (\r\n                              <li\r\n                                key={`li-${student.name}`}\r\n                                className=\"list-group-item \"\r\n                              >\r\n                                <div className=\"widget-content p-0\">\r\n                                  <div className=\"widget-content-wrapper \">\r\n                                    <div className=\"widget-content-left mr-3\">\r\n                                      <Checkbox\r\n                                        id={student.name}\r\n                                        name={student.name}\r\n                                        onChange={this.handleChangeCheck}\r\n                                        checked={student.isSelected}\r\n                                      />\r\n                                    </div>\r\n                                    <div className=\"widget-content-left\">\r\n                                      <label htmlFor={student.name}>\r\n                                        <div className=\"widget-heading\">\r\n                                          {student.label}\r\n                                        </div>\r\n                                        <div className=\"widget-subheading\">\r\n                                          {student.name}\r\n                                        </div>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            );\r\n                          })}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col sm={6} className=\"border-bottom\">\r\n                  <div className=\"scroll-area-lg\">\r\n                    <div className=\"scrollbar-container\">\r\n                      <h6>\r\n                        {_translator(\r\n                          'classCreationModal_selStudents',\r\n                          language\r\n                        )}\r\n                      </h6>\r\n                      <ul className=\"rm-list-borders rm-list-borders-scroll list-group list-group-flush\">\r\n                        {students\r\n                          .filter(item => item.isSelected === true)\r\n                          .map(student => (\r\n                            <li\r\n                              key={`li-${student.name}`}\r\n                              className=\"list-group-item\"\r\n                            >\r\n                              <div className=\"widget-content p-0\">\r\n                                <div className=\"widget-content-wrapper\">\r\n                                  <div className=\"widget-content-left mr-3\">\r\n                                    <Checkbox\r\n                                      id={student.name}\r\n                                      name={student.name}\r\n                                      onChange={this.handleChangeCheck}\r\n                                      checked={student.isSelected}\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"widget-content-left\">\r\n                                    <label htmlFor={student.name}>\r\n                                      <div className=\"widget-heading\">\r\n                                        {student.label}\r\n                                      </div>\r\n                                      <div className=\"widget-subheading\">\r\n                                        {student.name}\r\n                                      </div>\r\n                                    </label>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <span className=\"text-danger\" ref={this.errorList} />\r\n              </Row>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <ButtonToolbar>\r\n              <Button\r\n                onClick={() =>\r\n                  this.onConfirm({\r\n                    name,\r\n                    students: studentsToReturn,\r\n                    teacherId\r\n                  })\r\n                }\r\n              >\r\n                {_translator('gen_save', language)}\r\n              </Button>\r\n            </ButtonToolbar>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nClassCreationModal.propTypes = {\r\n  students: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      key: PropTypes.string,\r\n      label: PropTypes.string,\r\n      isSelected: PropTypes.bool\r\n    })\r\n  ),\r\n  title: PropTypes.string.isRequired,\r\n  confirm: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  language: PropTypes.string.isRequired,\r\n  onChangeName: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  setShow: PropTypes.func.isRequired\r\n};\r\n\r\nClassCreationModal.defaultProps = {\r\n  students: [],\r\n  name: ''\r\n};\r\nexport default ClassCreationModal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport _translator from '../../../helpers/Translator';\r\nimport { _confirmAlert } from '../../../helpers/Utils';\r\nimport ClassCreationModal from '../../components/ClassCreationModal';\r\nimport {\r\n  loadClassList,\r\n  updateNameNewClass,\r\n  setShowModalClass,\r\n  initListNewClass,\r\n  updateListNewClass,\r\n  createClass,\r\n  getAllStudents,\r\n  initEditClass,\r\n  editClass,\r\n  deleteClass\r\n} from '../../../actions/ClassManagementActions';\r\n\r\nclass ClassManagement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.getAllStudentsDispatch();\r\n    props.loadClassListDispatch();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      user,\r\n      updateNameNewClassDispatch,\r\n      setShowModalClassDispatch,\r\n      initListNewClassDispatch,\r\n      updateListNewClassDispatch,\r\n      createClassDispatch,\r\n      initEditClassDispatch,\r\n      editClassDispatch,\r\n      deleteClassDispatch,\r\n      _class\r\n    } = this.props;\r\n    const { newClass, classList } = _class;\r\n    const { language } = user;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"main-card mb-3 card\">\r\n            <div className=\"card-header\">\r\n              {_translator('classManagement_title', language)}\r\n              <div className=\"btn-actions-pane-right\">\r\n                <div role=\"group\" className=\"btn-group-sm btn-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"active btn btn-success\"\r\n                    onClick={() => {\r\n                      initListNewClassDispatch(newClass.studentsList);\r\n                      setShowModalClassDispatch(true);\r\n                    }}\r\n                  >\r\n                    {_translator('gen_new', language)}{' '}\r\n                    <i className=\"fa fa-plus\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div id=\"accordion\" className=\"accordion-wrapper\">\r\n                  {classList &&\r\n                    classList.length > 0 &&\r\n                    classList.map(classItem => {\r\n                      return (\r\n                        <div className=\"card\" key={classItem.classId}>\r\n                          <div id=\"headingOne\" className=\"card-header\">\r\n                            <button\r\n                              type=\"button\"\r\n                              data-toggle=\"collapse\"\r\n                              data-target={`#c${classItem.classId}`}\r\n                              aria-expanded=\"true\"\r\n                              aria-controls=\"collapseOne\"\r\n                              className=\"text-left m-0 p-0 btn btn-link btn-block\"\r\n                            >\r\n                              <h5 className=\"m-0 p-0\">{classItem.className}</h5>\r\n                            </button>\r\n                          </div>\r\n                          <div\r\n                            data-parent=\"#accordion\"\r\n                            id={`c${classItem.classId}`}\r\n                            aria-labelledby=\"headingOne\"\r\n                            className=\"collapse \"\r\n                          >\r\n                            <div className=\"card-body\">\r\n                              <ul className=\"list-group\">\r\n                                {classItem &&\r\n                                  classItem.students.map(student => (\r\n                                    <li\r\n                                      key={student.id}\r\n                                      className=\"list-group-item disabled\"\r\n                                    >\r\n                                      <strong>\r\n                                        {student.firstName} {student.lastName}\r\n                                      </strong>\r\n                                      <br />\r\n                                      {student.username}\r\n                                    </li>\r\n                                  ))}\r\n                              </ul>\r\n\r\n                              <ButtonGroup\r\n                                className=\"pull-right pb-2 pt-1 pr-0\"\r\n                                aria-label=\"Edit Button \"\r\n                              >\r\n                                <Button\r\n                                  variant=\"warning\"\r\n                                  onClick={() =>\r\n                                    initEditClassDispatch({\r\n                                      id: classItem.classId,\r\n                                      name: classItem.className,\r\n                                      students: classItem.students\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_translator('gen_edit', language)}\r\n                                </Button>\r\n                                <Button\r\n                                  variant=\"danger\"\r\n                                  onClick={() =>\r\n                                    _confirmAlert(\r\n                                      {\r\n                                        message:\r\n                                          'Sei sicuro di voler approvare?'\r\n                                      },\r\n                                      deleteClassDispatch,\r\n                                      { classId: classItem.classId }\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  {_translator('gen_delete', language)}\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {newClass.studentsList && newClass.studentsList.length > 0 && (\r\n          <ClassCreationModal\r\n            students={newClass.studentsList}\r\n            title=\"Crea una nuova classe\"\r\n            confirm={\r\n              newClass.id !== null ? editClassDispatch : createClassDispatch\r\n            }\r\n            name={newClass.name}\r\n            language=\"it\"\r\n            onChangeName={updateNameNewClassDispatch}\r\n            show={_class.showModalClass}\r\n            setShow={setShowModalClassDispatch}\r\n            updateList={updateListNewClassDispatch}\r\n            teacherId={user.id}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.auth.user,\r\n    _class: store.class\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadClassListDispatch: () => dispatch(loadClassList()),\r\n    updateNameNewClassDispatch: name => dispatch(updateNameNewClass(name)),\r\n    setShowModalClassDispatch: flag => dispatch(setShowModalClass(flag)),\r\n    getAllStudentsDispatch: () => dispatch(getAllStudents()),\r\n    initListNewClassDispatch: list => dispatch(initListNewClass(list)),\r\n    updateListNewClassDispatch: (list, name) =>\r\n      dispatch(updateListNewClass(list, name)),\r\n    createClassDispatch: ({ name, students, teacherId }) =>\r\n      dispatch(createClass({ name, students, teacherId })),\r\n    initEditClassDispatch: selectedClass =>\r\n      dispatch(initEditClass(selectedClass)),\r\n    editClassDispatch: ({ students, name }) =>\r\n      dispatch(editClass({ students, name })),\r\n    deleteClassDispatch: classId => dispatch(deleteClass(classId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClassManagement);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _translator from '../../../helpers/Translator';\r\nimport {\r\n  fetchUsersList,\r\n  fetchDeveloperList\r\n} from '../../../actions/AdminActions';\r\n\r\nclass AdminDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { admin, fetchUsersListDispatch, fetchDeveloperListDispatch } = props;\r\n    const { devList, usersList } = admin;\r\n    if (usersList.length < 1) fetchUsersListDispatch();\r\n    if (devList.length < 1) fetchDeveloperListDispatch();\r\n  }\r\n\r\n  render() {\r\n    const { user, admin } = this.props;\r\n    const { firstName, language } = user;\r\n    const { devList, usersList } = admin;\r\n    const numOfStudents = usersList.filter(\r\n      _user => _user.role === 'ROLE_STUDENT'\r\n    ).length;\r\n    const numOfDevs = usersList.filter(_user => _user.role === 'ROLE_DEVELOPER')\r\n      .length;\r\n    const numOfTeachers = usersList.filter(\r\n      _user => _user.role === 'ROLE_TEACHER'\r\n    ).length;\r\n    const devToAccept = devList.length;\r\n\r\n    const students = (\r\n      <div className=\"col-md-6 \">\r\n        <div className=\"card mb-3 widget-content bg-midnight-bloom\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('adminDashboard_students', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('adminDashboard_numStudents', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numOfStudents}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const teachers = (\r\n      <div className=\"col-md-6\">\r\n        <div className=\"card mb-3 widget-content bg-arielle-smile\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('adminDashboard_teachers', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('adminDashboard_numTeachers', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numOfTeachers}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const devs = (\r\n      <div className=\"col-md-6 \">\r\n        <div className=\"card mb-3 widget-content bg-happy-green\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('adminDashboard_devs', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('adminDashboard_numDevs', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{numOfDevs}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const devsAccept = (\r\n      <div className=\"col-md-6 \">\r\n        <div className=\"card mb-3 widget-content bg-premium-dark\">\r\n          <div className=\"widget-content-wrapper text-white\">\r\n            <div className=\"widget-content-left\">\r\n              <div className=\"widget-heading\">\r\n                {_translator('adminDashboard_devWait', language)}\r\n              </div>\r\n              <div className=\"widget-subheading\">\r\n                {_translator('adminDashboard_numDevWait', language)}\r\n              </div>\r\n            </div>\r\n            <div className=\"widget-content-right\">\r\n              <div className=\"widget-numbers text-white\">\r\n                <span>{devToAccept}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"py-5 text-center\">\r\n            <h2>{_translator('gen_userDashboard', language)}</h2>\r\n            <p className=\"lead\">\r\n              {_translator('dashboard_hiUser', language)}\r\n              {firstName}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          {students}\r\n          {teachers}\r\n          {devs}\r\n          {devsAccept}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.auth.user,\r\n    admin: store.admin\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchDeveloperListDispatch: () => dispatch(fetchDeveloperList()),\r\n    fetchUsersListDispatch: () => dispatch(fetchUsersList())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AdminDashboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _translator from '../../../helpers/Translator';\r\nimport {\r\n  getExerciseDetails,\r\n  initExerciseDetails,\r\n  onDeleteExercise\r\n} from '../../../actions/ExerciseActions';\r\nimport SolutionMapper from '../../../helpers/SolutionMapper';\r\nimport gerarchy from '../../../constants/gerarchia';\r\n\r\nclass ExercisesDetails extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      doneExercises,\r\n      history,\r\n      match: { params },\r\n      getExerciseDetailsDispatch\r\n    } = this.props;\r\n    this.selectedExercise =\r\n      doneExercises && doneExercises.exercises !== null\r\n        ? doneExercises.exercises.find(\r\n            _exercise => _exercise.id === params.exerciseId\r\n          )\r\n        : null;\r\n\r\n    if (!this.selectedExercise) history.push('../assignedHomework');\r\n    getExerciseDetailsDispatch(params.exerciseId);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { initExerciseDetailsDispatch } = this.props;\r\n    initExerciseDetailsDispatch();\r\n  }\r\n\r\n  deleteExercise = () => {\r\n    const {\r\n      onDeleteExerciseDispatch,\r\n      match: { params },\r\n      history\r\n    } = this.props;\r\n    onDeleteExerciseDispatch(params.exerciseId);\r\n    history.push('../assignedHomework');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user,\r\n      exerciseDetails,\r\n      match: { params }\r\n    } = this.props;\r\n\r\n    if (exerciseDetails && params.exerciseId) {\r\n      const textSplitted = exerciseDetails.exerciseText.split(' ');\r\n      const mainSolution = exerciseDetails.mainSolution\r\n        ? JSON.parse(exerciseDetails.mainSolution.solutionText)\r\n        : [];\r\n\r\n      const altSolution = exerciseDetails.alternativeSolution\r\n        ? JSON.parse(exerciseDetails.alternativeSolution.solutionText)\r\n        : [];\r\n      return (\r\n        <React.Fragment>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <NavLink to=\"/assignedHomework\" activeClassName=\"mm-active\">\r\n                  {_translator(\r\n                    'sidebarElementTeacher_exercises',\r\n                    user.language\r\n                  )}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                {_translator('detailsTeacher_detailsExercise', user.language)}\r\n              </li>\r\n            </ol>\r\n          </nav>\r\n\r\n          <div className=\"main-card mb-3 card exercise-preview\">\r\n            <div className=\"card-header\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger pull-right\"\r\n                onClick={this.deleteExercise}\r\n              >\r\n                {_translator('gen_delete', user.language)}\r\n              </button>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h6 className=\"card-subtitle\">\r\n                    {exerciseDetails.authorName}\r\n                  </h6>\r\n                  <h5 className=\"card-title\">\r\n                    <small>{_translator('gen_phrase', user.language)}: </small>\r\n                    {exerciseDetails.exerciseText}\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"main-card mb-3 card exercise-preview\">\r\n            <div className=\"card-header\">\r\n              <h6>\r\n                {_translator('executionExercise_mainSolution', user.language)}\r\n              </h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <ul className=\"list-group list-group-flush\">\r\n                {mainSolution.map((word, index) => (\r\n                  <li className=\"list-group-item\" key={`main-${word}-${index}`}>\r\n                    <strong>{textSplitted[index]}</strong> {' : '}\r\n                    {new SolutionMapper(\r\n                      word,\r\n                      gerarchy // [exerciseDetails.language]\r\n                    ).getVerboseSolution(user.language)}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          {exerciseDetails.alternativeSolution && (\r\n            <div className=\"main-card mb-3 card exercise-preview\">\r\n              <div className=\"card-header\">\r\n                <h6>\r\n                  {_translator('executionExercise_altSolution', user.language)}\r\n                </h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                  {altSolution.map((word, index) => (\r\n                    <li\r\n                      className=\"list-group-item\"\r\n                      key={`alt-${word}-${index}`}\r\n                    >\r\n                      <strong>{textSplitted[index]}</strong> {' : '}\r\n                      {new SolutionMapper(\r\n                        word,\r\n                        gerarchy // [exerciseDetails.language]\r\n                      ).getVerboseSolution(user.language)}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"main-card mb-3 card exercise-preview\">\r\n                <div className=\"card-header\">\r\n                  <h6>\r\n                    {_translator('exerciseDetails_studentDone', user.language)}\r\n                  </h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <ul className=\"list-group list-group-flush\">\r\n                    {exerciseDetails.studentDone.map(student => (\r\n                      <li className=\"list-group-item\" key={`done${student.id}`}>\r\n                        {student.firstName} {student.lastname}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"main-card mb-3 card exercise-preview\">\r\n                <div className=\"card-header\">\r\n                  <h6>\r\n                    {_translator('exerciseDetails_studentToDo', user.language)}\r\n                  </h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"col\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                      {exerciseDetails.studentToDo.map(student => (\r\n                        <li\r\n                          className=\"list-group-item\"\r\n                          key={`todo${student.id}`}\r\n                        >\r\n                          {student.firstName} {student.lastName}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return <React.Fragment />;\r\n  }\r\n}\r\nconst mapStateToProps = store => {\r\n  return {\r\n    selectedExercise: store.exercise.selectedExercise,\r\n    doneExercises: store.exercise.doneExercises,\r\n    user: store.auth.user,\r\n    exerciseDetails: store.exercise.exerciseDetails\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getExerciseDetailsDispatch: exerciseId =>\r\n      dispatch(getExerciseDetails(exerciseId)),\r\n    initExerciseDetailsDispatch: () => dispatch(initExerciseDetails()),\r\n    onDeleteExerciseDispatch: exerciseId =>\r\n      dispatch(onDeleteExercise(exerciseId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExercisesDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _translator from '../../../helpers/Translator';\r\n\r\nimport {\r\n  getFavouriteTeachers,\r\n  getAllTeachers,\r\n  removeFavouriteTeachers,\r\n  addFavouriteTeachers\r\n} from '../../../actions/ClassManagementActions';\r\nimport Pagination from '../../components/Paginatioin';\r\n\r\nclass FavouriteTeachers extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    props.getAllTeachersDispatch();\r\n    props.getFavouriteTeachersDispatch();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      auth,\r\n      teachersList,\r\n      favouriteTeachers,\r\n      getAllTeachersDispatch,\r\n      addFavouriteTeachersDispatch,\r\n      removeFavouriteTeachersDispatch\r\n    } = this.props;\r\n    const { user } = auth;\r\n\r\n    const { language } = user;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"main-card mb-3 card\">\r\n              <div className=\"card-header\">\r\n                <i className=\"header-icon lnr-laptop-phone icon-gradient bg-plum-plate\" />\r\n                {_translator('favouriteTeachers_allTeacher', language)}\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"scroll-area-xxl\">\r\n                  <div className=\"scrollbar-container ps--active-y ps\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                      {teachersList &&\r\n                        teachersList.teachers &&\r\n                        teachersList.teachers.map(teacher => {\r\n                          let indexTeacherFavourite = null;\r\n                          indexTeacherFavourite = favouriteTeachers.findIndex(\r\n                            _teacher => _teacher.id === teacher.id\r\n                          );\r\n\r\n                          return (\r\n                            <li className=\"list-group-item \" key={teacher.id}>\r\n                              {teacher.firstName} {teacher.lastName}\r\n                              {indexTeacherFavourite !== null &&\r\n                                indexTeacherFavourite === -1 && (\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-sm btn-success  pull-right\"\r\n                                    onClick={() =>\r\n                                      addFavouriteTeachersDispatch(teacher)\r\n                                    }\r\n                                  >\r\n                                    <i className=\"fa fa-plus\" />\r\n                                  </button>\r\n                                )}\r\n                            </li>\r\n                          );\r\n                        })}\r\n                    </ul>\r\n                    <div className=\"ps__rail-x\">\r\n                      <div className=\"ps__thumb-x\" />\r\n                    </div>\r\n                    <div className=\"ps__rail-y\">\r\n                      <div className=\"ps__thumb-y\" />\r\n                    </div>\r\n                  </div>\r\n                  {teachersList && (\r\n                    <Pagination\r\n                      first={teachersList.links.first}\r\n                      last={teachersList.links.last}\r\n                      next={teachersList.links.next}\r\n                      prev={teachersList.links.prev}\r\n                      number={teachersList.page.number}\r\n                      totalPages={teachersList.page.totalPages}\r\n                      language={auth.user.language}\r\n                      onClick={getAllTeachersDispatch}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"main-card mb-3 card\">\r\n              <div className=\"card-header\">\r\n                <i className=\"header-icon lnr-laptop-phone icon-gradient bg-plum-plate\" />\r\n                {_translator(\r\n                  'sidebarElementStudent_favoriteTeachers',\r\n                  language\r\n                )}\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"scroll-area-xxl\">\r\n                  <div className=\"scrollbar-container ps--active-y ps\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                      {favouriteTeachers &&\r\n                        favouriteTeachers.map(teacher => (\r\n                          <li\r\n                            className=\"list-group-item hover\"\r\n                            key={teacher.id}\r\n                          >\r\n                            {teacher.firstName} {teacher.lastName}\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-sm btn-danger btn-hover pull-right\"\r\n                              onClick={() =>\r\n                                removeFavouriteTeachersDispatch(teacher.id)\r\n                              }\r\n                            >\r\n                              <i className=\"fa fa-minus\" />\r\n                            </button>\r\n                          </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div className=\"ps__rail-x\">\r\n                      <div className=\"ps__thumb-x\" />\r\n                    </div>\r\n                    <div className=\"ps__rail-y\">\r\n                      <div className=\"ps__thumb-y\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = store => {\r\n  return {\r\n    authError: store.auth.authError,\r\n    auth: store.auth,\r\n    teachersList: store.class.teachersList,\r\n    favouriteTeachers: store.class.favouriteTeachers\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getFavouriteTeachersDispatch: () => dispatch(getFavouriteTeachers()),\r\n    getAllTeachersDispatch: link => dispatch(getAllTeachers(link)),\r\n    removeFavouriteTeachersDispatch: teacherId =>\r\n      dispatch(removeFavouriteTeachers(teacherId)),\r\n    addFavouriteTeachersDispatch: teacher =>\r\n      dispatch(addFavouriteTeachers(teacher))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FavouriteTeachers);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { v4 } from 'node-uuid';\r\n\r\nimport { activeAccount } from '../../../actions/AuthActions';\r\nimport HelperMessage from '../../components/HelperMessage';\r\n\r\nclass Activation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.match.params && props.match.params.activation) {\r\n      props.activeAccountDispatch(props.match.params.activation);\r\n    } else {\r\n      props.history.push('signin');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    if (auth && auth.user) return <Redirect to=\"/dashboard\" />;\r\n    return (\r\n      <HelperMessage>\r\n        {auth.activationMessage &&\r\n          auth.activationMessage.map(message => <h6 key={v4()}>{message}</h6>)}\r\n      </HelperMessage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    activeAccountDispatch: signUpRequestId =>\r\n      dispatch(activeAccount(signUpRequestId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Activation);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  changeForgot,\r\n  loaderOn,\r\n  changePassword,\r\n  sendRequest\r\n} from '../../../actions/AuthActions';\r\nimport { _toastError } from '../../../helpers/Utils';\r\nimport _translator from '../../../helpers/Translator';\r\nimport Validator from '../../../helpers/Validator';\r\nimport RegExpression from '../../../constants/RegExpression';\r\nimport HelperMessage from '../../components/HelperMessage';\r\n\r\nclass Forgot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const request = props.match.params ? props.match.params.request : '';\r\n    props.changeForgotDispatch({\r\n      username: '',\r\n      password: '',\r\n      passwordConfirm: '',\r\n      requestSent: false,\r\n      passwordChanged: false,\r\n      requestId: request\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { changeForgotDispatch } = this.props;\r\n    changeForgotDispatch({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleSubmitPassword = e => {\r\n    const { props } = this;\r\n    const { password, passwordConfirm } = props.forgot;\r\n    e.preventDefault();\r\n    if (password !== passwordConfirm) {\r\n      _toastError('Le due password non coincidono', 'it');\r\n    } else if (\r\n      !Validator.validPassword(password, RegExpression.getRegPassword())\r\n    ) {\r\n      _toastError('La password inserita non è sicura', 'it');\r\n    } else {\r\n      props.loaderOn();\r\n      props.changePasswordDispatch(props.forgot);\r\n    }\r\n  };\r\n\r\n  handleSubmitEmail = e => {\r\n    const { props } = this;\r\n    e.preventDefault();\r\n    props.loaderOn();\r\n    props.sendRequestDispatch(props.forgot);\r\n  };\r\n\r\n  render() {\r\n    const { auth, forgot, match } = this.props;\r\n\r\n    const {\r\n      username,\r\n      password,\r\n      passwordConfirm,\r\n      requestSent,\r\n      passwordChanged\r\n    } = forgot;\r\n\r\n    if (auth && auth.user) return <Redirect to=\"/dashboard\" />;\r\n\r\n    if (!match.params || !match.params.request) {\r\n      if (!requestSent) {\r\n        return (\r\n          <div className=\"row justify-content-md-center\">\r\n            <div className=\"col-sm-12 col-md-6\">\r\n              <div className=\"main-card mb-3 card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    {_translator('forgot_changePassword')}\r\n                  </h5>\r\n\r\n                  <form onSubmit={this.handleSubmitEmail}>\r\n                    <p>{_translator('forgot_info')}</p>\r\n                    <div className=\"position-relative form-group\">\r\n                      <label htmlFor=\"email\">{_translator('gen_email')}</label>\r\n                      <input\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        placeholder={_translator('gen_email')}\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        value={username}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"mt-2 btn btn-primary\">\r\n                      {_translator('forgot_sendRequest')}\r\n                    </button>\r\n                    <div className=\"\">\r\n                      {auth.signinError ? <p>{auth.signinError}</p> : null}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      return <HelperMessage>{_translator('forgot_info')}</HelperMessage>;\r\n    }\r\n    if (!passwordChanged) {\r\n      return (\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <div className=\"main-card mb-3 card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">\r\n                  {_translator('forgot_insNewPass')}\r\n                </h5>\r\n\r\n                <form onSubmit={this.handleSubmitPassword}>\r\n                  <div className=\"position-relative form-group\">\r\n                    <label htmlFor=\"email\">{_translator('gen_password')}</label>\r\n                    <input\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder={_translator('gen_password')}\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      value={password}\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"position-relative form-group\">\r\n                    <label htmlFor=\"email\">\r\n                      {_translator('gen_passwordConfirm')}\r\n                    </label>\r\n                    <input\r\n                      name=\"passwordConfirm\"\r\n                      id=\"passwordConfirm\"\r\n                      placeholder={_translator('gen_passwordConfirm')}\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      value={passwordConfirm}\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <button type=\"submit\" className=\"mt-2 btn btn-primary\">\r\n                    {_translator('forgot_changePassword')}\r\n                  </button>\r\n                  <div className=\"\">\r\n                    {auth.signinError ? <p>{auth.signinError}</p> : null}\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <HelperMessage>{_translator('forgot_changedSuccess')}</HelperMessage>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    signinError: store.auth.signinError,\r\n    auth: store.auth,\r\n    forgot: store.auth.forgot\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeForgotDispatch: variable => dispatch(changeForgot(variable)),\r\n    loaderOn: () => dispatch(loaderOn()),\r\n    changePasswordDispatch: data => dispatch(changePassword(data)),\r\n    sendRequestDispatch: data => dispatch(sendRequest(data))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Forgot);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { ToastContainer, Flip } from 'react-toastify';\r\n\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './view/containers/NavbarContainers/Navbar';\r\nimport Sidebar from './view/components/Sidebar';\r\nimport Dashboard from './view/containers/DashboardContainers/Dashboard';\r\nimport TeacherDashboard from './view/containers/DashboardContainers/TeacherDashboard';\r\nimport Footer from './view/components/Footer';\r\nimport SignUp from './view/containers/AuthContainers/SignUp';\r\nimport SignIn from './view/containers/AuthContainers/SignIn';\r\nimport Error from './view/components/Error';\r\nimport { initializeAuth, loaderOn } from './actions/AuthActions';\r\nimport { initializeNewExercise } from './actions/ExerciseActions';\r\n\r\nimport './App.css';\r\nimport FreeExercise from './view/containers/ExerciseContainers/FreeExercise';\r\nimport Account from './view/containers/AuthContainers/Account';\r\nimport Homework from './view/containers/ExerciseContainers/Homework';\r\nimport HomeworkExecution from './view/containers/ExerciseContainers/HomeworkExecution';\r\nimport InsertExercise from './view/containers/ExerciseContainers/InsertExercise';\r\nimport DeveloperDashBoard from './view/containers/DashboardContainers/DeveloperDashBoard';\r\nimport AdminDevDashBoard from './view/containers/DashboardContainers/AdminDevDashBoard';\r\nimport AdminUserDashBoard from './view/containers/DashboardContainers/AdminUserDashBoard';\r\nimport DoneHomework from './view/containers/ExerciseContainers/DoneHomework';\r\nimport AssignedHomework from './view/containers/ExerciseContainers/AssignedHomework';\r\nimport PublicExercises from './view/containers/ExerciseContainers/PublicExercises';\r\nimport ClassManagement from './view/containers/ExerciseContainers/ClassManagement';\r\nimport AdminDashboard from './view/containers/DashboardContainers/AdminDashboard';\r\nimport ExercisesDetails from './view/containers/ExerciseContainers/ExerciseDetails';\r\nimport FavouriteTeachers from './view/containers/ExerciseContainers/FavouriteTeachers';\r\nimport Activation from './view/containers/AuthContainers/Activation';\r\nimport Forgot from './view/containers/AuthContainers/Forgot';\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      initializeNewExerciseDispatch,\r\n      loaderOnDispatch,\r\n      initializeAuthDispatch,\r\n      auth\r\n    } = this.props;\r\n    loaderOnDispatch();\r\n    initializeAuthDispatch(auth.token);\r\n    initializeNewExerciseDispatch();\r\n  }\r\n\r\n  render() {\r\n    const { loader, innerLoader, auth, admin } = this.props;\r\n    const { language, isReady } = auth;\r\n\r\n    let mainDash = null;\r\n    if (auth.user) {\r\n      switch (auth.user.role) {\r\n        case 'ROLE_TEACHER':\r\n          mainDash = TeacherDashboard;\r\n          break;\r\n        case 'ROLE_STUDENT':\r\n          mainDash = Dashboard;\r\n          break;\r\n        case 'ROLE_ADMIN':\r\n          mainDash = AdminDashboard;\r\n          break;\r\n        case 'ROLE_DEVELOPER':\r\n          mainDash = DeveloperDashBoard;\r\n          break;\r\n        default:\r\n          mainDash = Dashboard;\r\n      }\r\n    }\r\n\r\n    if (isReady) {\r\n      return (\r\n        <BrowserRouter>\r\n          <div className=\"app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header\">\r\n            <ToastContainer transition={Flip} />\r\n            {loader && <div className=\"loading\" />}\r\n            <Navbar />\r\n            <div className=\"app-main\">\r\n              <div className=\"app-sidebar sidebar-shadow\">\r\n                <div className=\"app-header__logo\">\r\n                  <div className=\"logo-src\" />\r\n                  <div className=\"header__pane ml-auto\">\r\n                    <div>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"hamburger close-sidebar-btn hamburger--elastic \"\r\n                        data-class=\"closed-sidebar\"\r\n                      >\r\n                        <span className=\"hamburger-box\">\r\n                          <span className=\"hamburger-inner\" />\r\n                        </span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"app-header__mobile-menu\">\r\n                  <div>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"hamburger hamburger--elastic mobile-toggle-nav\"\r\n                    >\r\n                      <span className=\"hamburger-box\">\r\n                        <span className=\"hamburger-inner\" />\r\n                      </span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {auth.user && <Sidebar auth={auth} admin={admin} />}\r\n              </div>\r\n              <div className=\"app-main__outer \">\r\n                <div className=\"app-main__inner relative full-height-mobile \">\r\n                  {innerLoader && <div className=\"loading loading_inner\" />}\r\n                  <Switch>\r\n                    <ProtectedRoute\r\n                      exact\r\n                      path=\"/\"\r\n                      component={mainDash}\r\n                      isAllowed={auth.user}\r\n                    />\r\n                    <ProtectedRoute\r\n                      exact\r\n                      path=\"/forgot-password/:request?\"\r\n                      isAllowed={!auth.user}\r\n                      component={Forgot}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/insert-exercise\"\r\n                      component={InsertExercise}\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_TEACHER'}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/exercise\"\r\n                      component={FreeExercise}\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_STUDENT'}\r\n                    />\r\n                    <Route\r\n                      path=\"/sign-up/active/:activation?\"\r\n                      component={Activation}\r\n                    />\r\n                    <Route path=\"/signin\" component={SignIn} />\r\n                    <Route path=\"/signup\" component={SignUp} />\r\n                    <ProtectedRoute\r\n                      path=\"/dashboard\"\r\n                      isAllowed={auth.user}\r\n                      component={mainDash}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/account\"\r\n                      isAllowed={auth.user}\r\n                      component={Account}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/grades\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_STUDENT'}\r\n                      component={Account}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/homework\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_STUDENT'}\r\n                      component={Homework}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/doneHomework\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_STUDENT'}\r\n                      component={DoneHomework}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/favorite-teachers\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_STUDENT'}\r\n                      component={FavouriteTeachers}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/assignedHomework\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_TEACHER'}\r\n                      component={AssignedHomework}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/exerciseDetail/:exerciseId\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_TEACHER'}\r\n                      component={ExercisesDetails}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/publicExercises\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_STUDENT'}\r\n                      component={PublicExercises}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/homework-execution\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_STUDENT'}\r\n                      component={HomeworkExecution}\r\n                    />\r\n\r\n                    <ProtectedRoute\r\n                      path=\"/developers-management\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_ADMIN'}\r\n                      component={AdminDevDashBoard}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/users-management\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_ADMIN'}\r\n                      component={AdminUserDashBoard}\r\n                    />\r\n                    <ProtectedRoute\r\n                      path=\"/class\"\r\n                      isAllowed={auth.user && auth.user.role === 'ROLE_TEACHER'}\r\n                      component={ClassManagement}\r\n                    />\r\n                    <Route render={() => <Error language={language} />} />\r\n                  </Switch>\r\n                </div>\r\n                <Footer />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n    return <div className=\"loading\" />;\r\n  }\r\n}\r\n\r\nconst ProtectedRoute = ({ isAllowed, ...props }) =>\r\n  isAllowed ? <Route {...props} /> : <Redirect to=\"/signin\" />;\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth,\r\n    loader: store.auth.loader,\r\n    admin: store.admin,\r\n    innerLoader: store.exercise.innerLoader\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loaderOnDispatch: () => dispatch(loaderOn()),\r\n    initializeAuthDispatch: token => dispatch(initializeAuth(token)),\r\n    initializeNewExerciseDispatch: () => dispatch(initializeNewExercise())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { Provider } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport store from './store/index';\r\n\r\nimport App from './App';\r\nimport { register } from './serviceWorker';\r\n\r\ntoast.configure();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nregister();\r\n\r\n// });\r\n\r\n// PROMEMORIA ->  FILE MAIN.JS, RIGA 26935 COMMENTATO PER ERRORE IN CONSOLE\r\n"],"sourceRoot":""}